<Type Name="MemoryMappedFile" FullName="System.IO.MemoryMappedFiles.MemoryMappedFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="41e07681dacb0cef93c8ed23d1e7cefeeb182c8e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39987547" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MemoryMappedFile : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryMappedFile extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryMappedFile&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryMappedFile : IDisposable" />
  <TypeSignature Language="F#" Value="type MemoryMappedFile = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="83274-101">메모리 매핑된 파일을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="83274-101">Represents a memory-mapped file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-102">메모리 매핑된 파일을 응용 프로그램의 논리 주소 공간에 파일의 콘텐츠를 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-102">A memory-mapped file maps the contents of a file to an application’s logical address space.</span></span> <span data-ttu-id="83274-103">메모리 매핑된 파일을 프로그래머가 메모리 동시에 관리할 수 있고 검색할 필요 없이 파일에 대 한 완전 한 임의 액세스를 허용 하기 때문에 매우 큰 파일을 사용 하 여 작업을 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-103">Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking.</span></span> <span data-ttu-id="83274-104">또한 여러 프로세스에서 메모리 매핑된 파일을 공유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-104">Memory-mapped files can also be shared across multiple processes.</span></span>  
  
 <span data-ttu-id="83274-105">합니다 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> 메서드는 지정된 된 경로에서 메모리 매핑된 파일을 만듭니다 또는 <xref:System.IO.FileStream> 디스크에 기존 파일의 합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-105">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> methods create a memory-mapped file from a specified path or a <xref:System.IO.FileStream> of an existing file on disk.</span></span> <span data-ttu-id="83274-106">경우 디스크에 변경 내용을 자동으로 전파 됩니다 파일이 매핑된 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="83274-106">Changes are automatically propagated to disk when the file is unmapped.</span></span>  
  
 <span data-ttu-id="83274-107"><xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> 메서드 디스크에 있는 기존 파일에 매핑되지 않은 메모리 매핑된 파일을 만들고 프로세스 간 통신 (IPC)에 대 한 공유 메모리를 만들기에 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-107">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).</span></span>  
  
 <span data-ttu-id="83274-108">메모리 매핑된 파일을 메모리 매핑된 파일을 다른 프로세스와 공유할 수 있도록 선택적 이름으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-108">A memory-mapped file can be associated with an optional name that allows the memory-mapped file to be shared with other processes.</span></span> 
  
 <span data-ttu-id="83274-109">파일의 부분 뷰를 포함 하는 메모리 매핑된 파일의 여러 뷰를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-109">You can create multiple views of the memory-mapped file, including views of parts of the file.</span></span> <span data-ttu-id="83274-110">둘 이상의 주소 동시 메모리를 만들 파일의 한 부분을 매핑할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-110">You can map the same part of a file to more than one address to create concurrent memory.</span></span> <span data-ttu-id="83274-111">두 보기를 동시에 유지하려면 동일한 메모리 매핑된 파일에서 보기를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-111">For two views to remain concurrent, they have to be created from the same memory-mapped file.</span></span> <span data-ttu-id="83274-112">두 가지 보기를 사용 하 여 동일한 파일의 두 파일 매핑 만들기 동시성을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-112">Creating two file mappings of the same file with two views does not provide concurrency.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83274-113">다음 예제에서는 매우 큰 파일의 일부에 대한 메모리 매핑된 보기를 만들고 보기의 일부를 조작합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-113">The following example creates a memory-mapped view of a part of an extremely large file and manipulates a portion of it.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateFromFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83274-114">기존 파일에서 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-114">Creates a memory-mapped file from an existing file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="83274-115">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-115">The path to file to map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-116">디스크의 파일에서 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-116">Creates a memory-mapped file from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-117">메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-117">A memory-mapped file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="83274-118">다음 예제에서는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> 메모리 매핑된 파일을 만드는 메서드를 매우 큰 파일의 일부분에 메모리 매핑된 보기를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="83274-118">The following example uses the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> method to create a memory-mapped file, and then creates a memory-mapped view to a portion of an extremely large file.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-119">
            <paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-119">
              <paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span>
          </span>
          <span data-ttu-id="83274-120">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-120">-or-</span>
          </span>
          <span data-ttu-id="83274-121">
            <paramref name="path" />는 잘못된 장치로 간주합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-121">
              <paramref name="path" /> refers to an invalid device.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-122">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-122">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83274-123">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-123">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="83274-124">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-124">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="83274-125">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-125">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="83274-126">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-126">The path to the file to map.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="83274-127">액세스 모드는 <see cref="F:System.IO.FileMode.Open" />이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-127">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-128">디스크의 파일에서 지정된 액세스 모드를 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-128">Creates a memory-mapped file that has the specified access mode from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-129">지정된 액세스 모드를 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-129">A memory-mapped file that has the specified access mode.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-130">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-130">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="83274-131">만 사용할 수는 <xref:System.IO.FileMode.Open> 디스크에 있는 소스 파일에서 메모리 매핑된 파일을 만드는 데 사용할 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-131">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-132">
            <paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-132">
              <paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span>
          </span>
          <span data-ttu-id="83274-133">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-133">-or-</span>
          </span>
          <span data-ttu-id="83274-134">
            <paramref name="path" />는 잘못된 장치로 간주합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-134">
              <paramref name="path" /> refers to an invalid device.</span>
          </span>
          <span data-ttu-id="83274-135">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-135">-or-</span>
          </span>
          <span data-ttu-id="83274-136">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Append" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-136">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-137">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-137">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83274-138">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" /> 또는 <see cref="F:System.IO.FileMode.Truncate" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-138">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span>
          </span>
          <span data-ttu-id="83274-139">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-139">-or-</span>
          </span>
          <span data-ttu-id="83274-140">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.OpenOrCreate" />이고 디스크에 파일이 존재하지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-140">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span>
          </span>
          <span data-ttu-id="83274-141">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-141">-or-</span>
          </span>
          <span data-ttu-id="83274-142">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-142">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="83274-143">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-143">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="83274-144">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-144">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode * string -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode, mapName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="83274-145">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-145">The path to the file to map.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="83274-146">액세스 모드는 <see cref="F:System.IO.FileMode.Open" />이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-146">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="83274-147">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-147">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-148">디스크의 파일에서 지정된 액세스 모드와 이름을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-148">Creates a memory-mapped file that has the specified access mode and name from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-149">지정된 이름과 액세스 모드를 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-149">A memory-mapped file that has the specified name and access mode.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-150">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-150">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="83274-151">만 사용할 수는 <xref:System.IO.FileMode.Open> 디스크에 있는 소스 파일에서 메모리 매핑된 파일을 만드는 데 사용할 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-151">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-152">
            <paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-152">
              <paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span>
          </span>
          <span data-ttu-id="83274-153">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-153">-or-</span>
          </span>
          <span data-ttu-id="83274-154">
            <paramref name="path" />는 잘못된 장치로 간주합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-154">
              <paramref name="path" /> refers to an invalid device.</span>
          </span>
          <span data-ttu-id="83274-155">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-155">-or-</span>
          </span>
          <span data-ttu-id="83274-156">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-156">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="83274-157">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-157">-or-</span>
          </span>
          <span data-ttu-id="83274-158">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Append" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-158">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-159">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-159">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83274-160">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" /> 또는 <see cref="F:System.IO.FileMode.Truncate" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-160">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span>
          </span>
          <span data-ttu-id="83274-161">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-161">-or-</span>
          </span>
          <span data-ttu-id="83274-162">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.OpenOrCreate" />이고 디스크에 파일이 존재하지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-162">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span>
          </span>
          <span data-ttu-id="83274-163">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-163">-or-</span>
          </span>
          <span data-ttu-id="83274-164">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-164">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="83274-165">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-165">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="83274-166">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-166">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode * string * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode, mapName, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="83274-167">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-167">The path to the file to map.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="83274-168">액세스 모드는 <see cref="T:System.IO.FileMode" />를 제외하고는 <see cref="F:System.IO.FileMode.Append" /> 열거형이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-168">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="83274-169">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-169">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="83274-170">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-170">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-171">용량을 디스크에 있는 파일의 크기로 설정하려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-171">Specify 0 to set the capacity to the size of the file on disk.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-172">디스크의 파일에서 지정된 액세스 모드, 이름 및 용량을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-172">Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-173">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-173">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-174">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-174">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="83274-175">경우 `capacity` 메모리 매핑된 파일에 없는 데이터를 작성 한 경우에 지정된 된 용량에 맞게 디스크, 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="83274-175">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="83274-176">이 방지 하기 발생 0 (영)는 내부적으로 설정 하는 기본 용량의 경우 지정 `capacity` 디스크에 있는 파일의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-176">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-177">
            <paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-177">
              <paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span>
          </span>
          <span data-ttu-id="83274-178">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-178">-or-</span>
          </span>
          <span data-ttu-id="83274-179">
            <paramref name="path" />는 잘못된 장치로 간주합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-179">
              <paramref name="path" /> refers to an invalid device.</span>
          </span>
          <span data-ttu-id="83274-180">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-180">-or-</span>
          </span>
          <span data-ttu-id="83274-181">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-181">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="83274-182">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-182">-or-</span>
          </span>
          <span data-ttu-id="83274-183">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Append" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-183">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-184">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-184">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-185">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-185">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="83274-186">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-186">-or-</span>
          </span>
          <span data-ttu-id="83274-187">
            <paramref name="capacity" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-187">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="83274-188">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-188">-or-</span>
          </span>
          <span data-ttu-id="83274-189">
            <paramref name="capacity" />가 파일 크기보다 작습니다(0은 아님).</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-189">
              <paramref name="capacity" /> is less than the file size (but not zero).</span>
          </span>
          <span data-ttu-id="83274-190">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-190">-or-</span>
          </span>
          <span data-ttu-id="83274-191">
            <paramref name="capacity" />가 0 이고 디스크의 파일 크기도 0 입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-191">
              <paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83274-192">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-192">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="83274-193">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-193">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="83274-194">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-194">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode * string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode, mapName, capacity, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="83274-195">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-195">The path to the file to map.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="83274-196">액세스 모드는 <see cref="T:System.IO.FileMode" />를 제외하고는 <see cref="F:System.IO.FileMode.Append" /> 열거형이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-196">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="83274-197">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-197">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="83274-198">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-198">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-199">용량을 디스크에 있는 파일의 크기로 설정하려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-199">Specify 0 to set the capacity to the size of the file on disk.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="83274-200">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-200">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-201">디스크의 파일에서 지정된 액세스 모드, 이름, 용량 및 액세스 형식을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-201">Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-202">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-202">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-203">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-203">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="83274-204">경우 `capacity` 메모리 매핑된 파일에 없는 데이터를 작성 한 경우에 지정된 된 용량에 맞게 디스크, 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="83274-204">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="83274-205">이 방지 하기 발생 0 (영)는 내부적으로 설정 하는 기본 용량의 경우 지정 `capacity` 디스크에 있는 파일의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-205">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-206">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-206">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="83274-207">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-207">-or-</span>
          </span>
          <span data-ttu-id="83274-208">
            <paramref name="access" />이 허용되는 값이 아닌 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-208">
              <paramref name="access" /> is not an allowed value.</span>
          </span>
          <span data-ttu-id="83274-209">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-209">-or-</span>
          </span>
          <span data-ttu-id="83274-210">
            <paramref name="path" />는 빈 파일을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-210">
              <paramref name="path" /> specifies an empty file.</span>
          </span>
          <span data-ttu-id="83274-211">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-211">-or-</span>
          </span>
          <span data-ttu-id="83274-212">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />로 지정되고 용량이 <paramref name="path" />에 지정된 파일 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-212">
              <paramref name="access" /> is specified as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and capacity is greater than the size of the file indicated by <paramref name="path" />.</span>
          </span>
          <span data-ttu-id="83274-213">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-213">-or-</span>
          </span>
          <span data-ttu-id="83274-214">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Append" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-214">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-215">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-215">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-216">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-216">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="83274-217">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-217">-or-</span>
          </span>
          <span data-ttu-id="83274-218">
            <paramref name="capacity" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-218">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="83274-219">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-219">-or-</span>
          </span>
          <span data-ttu-id="83274-220">
            <paramref name="capacity" />가 파일 크기보다 작습니다(0은 아님).</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-220">
              <paramref name="capacity" /> is less than the file size (but not zero).</span>
          </span>
          <span data-ttu-id="83274-221">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-221">-or-</span>
          </span>
          <span data-ttu-id="83274-222">
            <paramref name="capacity" />가 0 이고 디스크의 파일 크기도 0 입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-222">
              <paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span>
          </span>
          <span data-ttu-id="83274-223">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-223">-or-</span>
          </span>
          <span data-ttu-id="83274-224">
            <paramref name="access" />는 정의된 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-224">
              <paramref name="access" /> is not a defined <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> value.</span>
          </span>
          <span data-ttu-id="83274-225">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-225">-or-</span>
          </span>
          <span data-ttu-id="83274-226">
            <paramref name="path" />에 나타난 파일 크기가 <paramref name="capacity" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-226">The size of the file indicated by <paramref name="path" /> is greater than <paramref name="capacity" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83274-227">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-227">-or-</span>
          </span>
          <span data-ttu-id="83274-228">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-228">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="83274-229">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-229">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="83274-230">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-230">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83274-231">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-231">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="83274-232">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-232">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : System.IO.FileStream * string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.HandleInheritability * bool -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (fileStream, mapName, capacity, access, inheritability, leaveOpen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileStream">
          <span data-ttu-id="83274-233">기존 파일의 파일 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-233">The file stream of the existing file.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="83274-234">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-234">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="83274-235">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-235">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-236">용량을 <c>파일 스트림</c>의 크기로 설정하려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-236">Specify 0 to set the capacity to the size of <c>filestream</c>.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="83274-237">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-237">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-238">이 매개 변수는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />로 설정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-238">This parameter can’t be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="83274-239">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-239">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="83274-240">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-240">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="83274-241">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />이 삭제되면 소스 파일 스트림을 닫을지 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-241">A value that indicates whether to close the source file stream when the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is disposed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-242">지정된 액세스 모드, 이름, 상속 및 용량을 사용하여 기존 파일에서 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-242">Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-243">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-243">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-244">
            <paramref name="mapName" />이 <see langword="null" /> 또는 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-244">
              <paramref name="mapName" /> is <see langword="null" /> or an empty string.</span>
          </span>
          <span data-ttu-id="83274-245">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-245">-or-</span>
          </span>
          <span data-ttu-id="83274-246">
            <paramref name="capacity" /> 및 파일 길이가 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-246">
              <paramref name="capacity" /> and the length of the file are zero.</span>
          </span>
          <span data-ttu-id="83274-247">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-247">-or-</span>
          </span>
          <span data-ttu-id="83274-248">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값으로 설정되며, 허용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-248">
              <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span>
          </span>
          <span data-ttu-id="83274-249">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-249">-or-</span>
          </span>
          <span data-ttu-id="83274-250">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />로 설정되고 <paramref name="capacity" />는 <see langword="filestream" />의 길이 보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-250">
              <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and <paramref name="capacity" /> is larger than the length of <see langword="filestream" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-251">
            <paramref name="fileStream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-251">
              <paramref name="fileStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-252">
            <paramref name="capacity" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-252">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="83274-253">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-253">-or-</span>
          </span>
          <span data-ttu-id="83274-254">
            <paramref name="capacity" />가 파일 크기보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-254">
              <paramref name="capacity" /> is less than the file size.</span>
          </span>
          <span data-ttu-id="83274-255">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-255">-or-</span>
          </span>
          <span data-ttu-id="83274-256">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-256">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="83274-257">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-257">-or-</span>
          </span>
          <span data-ttu-id="83274-258">
            <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-258">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : System.IO.FileStream * string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileSecurity * System.IO.HandleInheritability * bool -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (fileStream, mapName, capacity, access, memoryMappedFileSecurity, inheritability, leaveOpen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileStream">
          <span data-ttu-id="83274-259">매핑할 파일에 대한 <c>파일 스트림</c>입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-259">The <c>fileStream</c> to the file to map.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="83274-260">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-260">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="83274-261">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-261">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-262">용량을 디스크에 있는 파일의 크기로 설정하려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-262">Specify 0 to set the capacity to the size of the file on disk.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="83274-263">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-263">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-264">이 매개 변수는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />로 설정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-264">This parameter can’t be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span>
          </span>
        </param>
        <param name="memoryMappedFileSecurity">
          <span data-ttu-id="83274-265">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-265">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
          <span data-ttu-id="83274-266">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-266">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="83274-267">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-267">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="83274-268">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-268">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="83274-269">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />이 닫힌 후 <c>파일 스트림</c>을 삭제하지 않으려면 <see langword="true" />이고 <c>파일 스트림</c>을 삭제하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-269">
              <see langword="true" /> to not dispose <c>fileStream</c> after the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is closed; <see langword="false" /> to dispose <c>fileStream</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-270">디스크의 파일에서 지정된 이름, 용량, 액세스 형식, 보안 권한, 상속 가능성 및 삭제 요구 사항을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-270">Creates a memory-mapped file that has the specified name, capacity, access type, security permissions, inheritability, and disposal requirement from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-271">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-271">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-272">경우 `capacity` 메모리 매핑된 파일에 없는 데이터를 작성 한 경우에 지정된 된 용량에 맞게 디스크, 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="83274-272">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="83274-273">이 방지 하기 발생 0 (영)는 내부적으로 설정 하는 기본 용량의 경우 지정 `capacity` 디스크에 있는 파일의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-273">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-274">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-274">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="83274-275">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-275">-or-</span>
          </span>
          <span data-ttu-id="83274-276">
            <paramref name="capacity" /> 및 파일 길이가 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-276">
              <paramref name="capacity" /> and the length of the file are zero.</span>
          </span>
          <span data-ttu-id="83274-277">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-277">-or-</span>
          </span>
          <span data-ttu-id="83274-278">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형으로 설정되며, 허용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-278">
              <paramref name="access" /> is set to the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-279">
            <paramref name="fileStream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-279">
              <paramref name="fileStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-280">
            <paramref name="capacity" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-280">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="83274-281">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-281">-or-</span>
          </span>
          <span data-ttu-id="83274-282">
            <paramref name="capacity" />가 파일 크기보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-282">
              <paramref name="capacity" /> is less than the file size.</span>
          </span>
          <span data-ttu-id="83274-283">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-283">-or-</span>
          </span>
          <span data-ttu-id="83274-284">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-284">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="83274-285">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-285">-or-</span>
          </span>
          <span data-ttu-id="83274-286">
            <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-286">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83274-287">
            <paramref name="fileStream" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-287">
              <paramref name="fileStream" /> was closed.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="83274-288">
            <paramref name="access" />의 액세스가 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> 또는 <see cref="F:System.IO.FileAccess.Read" />로 설정된 경우 <paramref name="fileStream" />는 <see cref="F:System.IO.FileAccess.Write" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-288">
              <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> when <paramref name="fileStream" />'s access is set to <see cref="F:System.IO.FileAccess.Read" /> or <see cref="F:System.IO.FileAccess.Write" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83274-289">
            <paramref name="mapName" />이(가) 이미 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-289">
              <paramref name="mapName" /> already exists.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83274-290">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-290">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="83274-291">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-291">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNew">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83274-292">시스템 메모리에 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-292">Creates a memory-mapped file in system memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="83274-293">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-293">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="83274-294">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-294">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-295">시스템 메모리에서 지정된 용량을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-295">Creates a memory-mapped file that has the specified capacity in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-296">지정된 이름과 용량을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-296">A memory-mapped file that has the specified name and capacity.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-297">이 메서드를 사용 하 여 지속 되지 않는 메모리 매핑된 파일을 만듭니다 (즉, 연결 되지 않은 디스크에 파일을 사용 하 여), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-297">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83274-298">다음 예제에서는 작성 하는 세 가지 별도 프로세스 (콘솔 응용 프로그램)로 이루어져 `Boolean` 메모리 매핑된 파일에는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-298">The following example is composed of three separate processes (console applications) that write `Boolean` values to a memory-mapped file.</span></span> <span data-ttu-id="83274-299">다음 작업 시퀀스가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-299">The following sequence of actions occur:</span></span>  
  
1.  <span data-ttu-id="83274-300">프로세스는 메모리 매핑된 파일을 만들고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="83274-300">Process A creates the memory-mapped file and writes a value to it.</span></span>  
  
2.  <span data-ttu-id="83274-301">프로세스 B 메모리 매핑된 파일이 열리고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="83274-301">Process B opens the memory-mapped file and writes a value to it.</span></span>  
  
3.  <span data-ttu-id="83274-302">프로세스 C 메모리 매핑된 파일이 열리고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="83274-302">Process C opens the memory-mapped file and writes a value to it.</span></span>  
  
4.  <span data-ttu-id="83274-303">프로세스는 읽고 메모리 매핑된 파일의 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-303">Process A reads and displays the values from the memory-mapped file.</span></span>  
  
5.  <span data-ttu-id="83274-304">프로세스는 메모리 매핑된 파일을 사용 하 여 완료 되 면 가비지 수집에 의해 파일이 즉시 회수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="83274-304">After Process A is finished with the memory-mapped file, the file is immediately reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="83274-305">이 예제를 실행하려면 다음을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-305">To run this example, do the following:</span></span>  
  
1.  <span data-ttu-id="83274-306">응용 프로그램을 컴파일하고 세 개의 명령 창을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="83274-306">Compile the applications and open three Command windows.</span></span>  
  
2.  <span data-ttu-id="83274-307">첫 번째 명령 창에서 프로세스 A를 실행</span><span class="sxs-lookup"><span data-stu-id="83274-307">In the first Command window, run Process A.</span></span>  
  
3.  <span data-ttu-id="83274-308">2. 프로세스를 실행 합니다. 두 번째 명령 창에서</span><span class="sxs-lookup"><span data-stu-id="83274-308">In the second Command window, run Process B.</span></span>  
  
4.  <span data-ttu-id="83274-309">프로세스는 돌아가서 ENTER 키를 누릅니다.</span><span class="sxs-lookup"><span data-stu-id="83274-309">Return to Process A and press ENTER.</span></span>  
  
5.  <span data-ttu-id="83274-310">세 번째 명령 창에서 3. 프로세스를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-310">In the third Command window, run Process C.</span></span>  
  
6.  <span data-ttu-id="83274-311">프로세스는 돌아가서 ENTER 키를 누릅니다.</span><span class="sxs-lookup"><span data-stu-id="83274-311">Return to Process A and press ENTER.</span></span>  
  
 <span data-ttu-id="83274-312">프로세스의 출력은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-312">The output of Process A is as follows:</span></span>  
  
```  
Start Process B and press ENTER to continue.  
Start Process C and press ENTER to continue.  
Process A says: True  
Process B says: False  
Process C says: True  
```  
  
 <span data-ttu-id="83274-313">**프로세스 A**</span><span class="sxs-lookup"><span data-stu-id="83274-313">**Process A**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#1)]  
  
 <span data-ttu-id="83274-314">**프로세스 B**</span><span class="sxs-lookup"><span data-stu-id="83274-314">**Process B**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/vb/program.vb#1)]  
  
 <span data-ttu-id="83274-315">**프로세스 C**</span><span class="sxs-lookup"><span data-stu-id="83274-315">**Process C**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-316">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-316">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-317">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-317">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="83274-318">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-318">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="83274-319">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-319">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="83274-320">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-320">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-321">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-321">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-322">시스템 메모리에서 지정된 용량과 액세스 형식을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-322">Creates a memory-mapped file that has the specified capacity and access type in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-323">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-323">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-324">이 메서드를 사용 하 여 지속 되지 않는 메모리 매핑된 파일을 만듭니다 (즉, 연결 되지 않은 디스크에 파일을 사용 하 여), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-324">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-325">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-325">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="83274-326">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-326">-or-</span>
          </span>
          <span data-ttu-id="83274-327">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-327">
              <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-328">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-328">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="83274-329">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-329">-or-</span>
          </span>
          <span data-ttu-id="83274-330">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-330">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity, access, options, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="83274-331">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-331">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="83274-332">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-332">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="83274-333">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-333">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-334">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-334">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="83274-335">메모리 매핑된 파일에 대한 메모리 할당 옵션을 지정하는 열거형 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-335">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="83274-336">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-336">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="83274-337">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-337">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-338">지정된 이름, 용량, 액세스 형식, 메모리 할당 옵션 및 상속을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-338">Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-339">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-339">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-340">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-340">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="83274-341">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-341">-or-</span>
          </span>
          <span data-ttu-id="83274-342">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-342">
              <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-343">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-343">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="83274-344">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-344">-or-</span>
          </span>
          <span data-ttu-id="83274-345">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-345">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="83274-346">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-346">-or-</span>
          </span>
          <span data-ttu-id="83274-347">
            <paramref name="inheritability" />은 유효한 <see cref="T:System.IO.HandleInheritability" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-347">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.MemoryMappedFiles.MemoryMappedFileSecurity * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity, access, options, memoryMappedFileSecurity, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="83274-348">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-348">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="83274-349">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-349">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="83274-350">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-350">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-351">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-351">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="83274-352">메모리 매핑된 파일에 대한 메모리 할당 옵션을 지정하는 열거형 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-352">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span>
          </span>
        </param>
        <param name="memoryMappedFileSecurity">
          <span data-ttu-id="83274-353">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-353">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
          <span data-ttu-id="83274-354">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-354">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="83274-355">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-355">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="83274-356">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-356">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-357">시스템 메모리에서 지정된 용량, 액세스 형식, 메모리 할당, 보안 권한 및 상속 가능성을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-357">Creates a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-358">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-358">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-359">이 메서드를 사용 하 여 지속 되지 않는 메모리 매핑된 파일을 만듭니다 (즉, 연결 되지 않은 디스크에 파일을 사용 하 여), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-359">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-360">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-360">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="83274-361">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-361">-or-</span>
          </span>
          <span data-ttu-id="83274-362">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-362">
              <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-363">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-363">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="83274-364">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-364">-or-</span>
          </span>
          <span data-ttu-id="83274-365">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-365">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="83274-366">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-366">-or-</span>
          </span>
          <span data-ttu-id="83274-367">
            <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-367">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83274-368">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-368">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="83274-369">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-369">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateOrOpen">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83274-370">시스템 메모리에 메모리 매핑된 파일을 만들거나 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-370">Creates or opens a memory-mapped file in system memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="83274-371">메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-371">The name of the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="83274-372">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-372">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-373">시스템 메모리에서 지정된 이름 및 용량을 가진 메모리 매핑된 파일을 만들거나 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-373">Creates or opens a memory-mapped file that has the specified name and capacity in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-374">지정된 이름과 크기를 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-374">A memory-mapped file that has the specified name and size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-375">이 메서드를 사용 하 여 지속 되지 않는 메모리 매핑된 파일을 열거나 만듭니다 (즉, 연결 되지 않은 디스크에 파일을 사용 하 여), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-375">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-376">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-376">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-377">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-377">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="83274-378">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-378">-or-</span>
          </span>
          <span data-ttu-id="83274-379">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-379">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="83274-380">메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-380">The name of the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="83274-381">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-381">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="83274-382">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-382">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-383">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-383">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-384">시스템 메모리에서 지정된 이름, 용량 및 액세스 형식을 가진 메모리 매핑된 파일을 만들거나 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-384">Creates or opens a memory-mapped file that has the specified name, capacity and access type in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-385">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-385">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-386">이 메서드를 사용 하 여 지속 되지 않는 메모리 매핑된 파일을 열거나 만듭니다 (즉, 연결 되지 않은 디스크에 파일을 사용 하 여), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-386">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-387">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-387">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-388">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-388">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="83274-389">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-389">-or-</span>
          </span>
          <span data-ttu-id="83274-390">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-390">
              <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-391">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-391">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="83274-392">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-392">-or-</span>
          </span>
          <span data-ttu-id="83274-393">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-393">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="83274-394">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-394">-or-</span>
          </span>
          <span data-ttu-id="83274-395">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-395">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="83274-396">운영 체제에서 파일에 지정된 액세스 권한을 거부했습니다. 예를 들어, 액세스 권한이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />로 설정되어 있지만 파일 또는 디렉터리가 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-396">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity, access, options, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="83274-397">메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-397">The name of the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="83274-398">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-398">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="83274-399">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-399">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-400">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-400">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="83274-401">파일에 적용할 메모리 할당 옵션을 나타내는 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-401">A bitwise combination of values that indicate the memory allocation options to apply to the file.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="83274-402">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-402">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="83274-403">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-403">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-404">동일한 이름의 파일이 있는 경우 비어 있는 새 메모리 매핑된 파일을 만들거나 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-404">Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name.</span>
          </span>
          <span data-ttu-id="83274-405">기존 파일을 여는 경우 용량, 옵션 및 메모리 인수가 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-405">If opening an existing file, the capacity, options, and memory arguments will be ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-406">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-406">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-407">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-407">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-408">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-408">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="83274-409">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-409">-or-</span>
          </span>
          <span data-ttu-id="83274-410">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-410">
              <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-411">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-411">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="83274-412">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-412">-or-</span>
          </span>
          <span data-ttu-id="83274-413">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-413">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="83274-414">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-414">-or-</span>
          </span>
          <span data-ttu-id="83274-415">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-415">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="83274-416">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-416">-or-</span>
          </span>
          <span data-ttu-id="83274-417">
            <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-417">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="83274-418">운영 체제에서 파일에 지정된 액세스 권한을 거부했습니다. 예를 들어, 액세스 권한이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />로 설정되어 있지만 파일 또는 디렉터리가 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-418">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.MemoryMappedFiles.MemoryMappedFileSecurity * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity, access, options, memoryMappedFileSecurity, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="83274-419">메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-419">The name of the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="83274-420">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-420">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="83274-421">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-421">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-422">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-422">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="83274-423">메모리 매핑된 파일에 대한 메모리 할당 옵션을 지정하는 열거형 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-423">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span>
          </span>
        </param>
        <param name="memoryMappedFileSecurity">
          <span data-ttu-id="83274-424">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-424">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
          <span data-ttu-id="83274-425">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-425">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="83274-426">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-426">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="83274-427">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-427">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-428">시스템 메모리에서 지정된 이름, 용량, 액세스 형식, 메모리 할당, 보안 권한 및 상속 가능성을 가진 메모리 매핑된 파일을 만들거나 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-428">Creates or opens a memory-mapped file that has the specified name, capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-429">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-429">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-430">이 메서드를 사용 하 여 지속 되지 않는 메모리 매핑된 파일을 열거나 만듭니다 (즉, 연결 되지 않은 디스크에 파일을 사용 하 여), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-430">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-431">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-431">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-432">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-432">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="83274-433">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-433">-or-</span>
          </span>
          <span data-ttu-id="83274-434">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-434">
              <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-435">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-435">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="83274-436">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-436">-or-</span>
          </span>
          <span data-ttu-id="83274-437">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-437">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="83274-438">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-438">-or-</span>
          </span>
          <span data-ttu-id="83274-439">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-439">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="83274-440">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-440">-or-</span>
          </span>
          <span data-ttu-id="83274-441">
            <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-441">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="83274-442">운영 체제에서 파일에 지정된 <paramref name="access" /> 권한을 거부했습니다. 예를 들어, <paramref name="access" /> 권한이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />로 설정되어 있지만 파일 또는 디렉터리가 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-442">The operating system denied the specified <paramref name="access" /> to the file; for example, <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83274-443">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-443">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="83274-444">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-444">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewAccessor">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83274-445">메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-445">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor () As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor();" />
      <MemberSignature Language="F#" Value="member this.CreateViewAccessor : unit -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" Usage="memoryMappedFile.CreateViewAccessor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83274-446">메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-446">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-447">임의로 액세스 가능한 메모리 블록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-447">A randomly accessible block of memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-448">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-448">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="83274-449">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-449">Access to the memory-mapped file is unauthorized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size);" />
      <MemberSignature Language="F#" Value="member this.CreateViewAccessor : int64 * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" Usage="memoryMappedFile.CreateViewAccessor (offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="83274-450">뷰를 시작할 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-450">The byte at which to start the view.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="83274-451">뷰의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-451">The size of the view.</span>
          </span>
          <span data-ttu-id="83274-452">
            <c>오프셋</c>에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-452">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-453">지정된 오프셋과 크기를 가지고 메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-453">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset and size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-454">임의로 액세스 가능한 메모리 블록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-454">A randomly accessible block of memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-455">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-455">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="83274-456">메모리 매핑된 파일의 전체 뷰를 만들려면 0 (영)에 대 한 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-456">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="83274-457">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-457">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="83274-458">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-458">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83274-459">다음 예제에서는 메모리 매핑된 파일의 뷰를 만들고이 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="83274-459">The following example creates a view of a memory-mapped file and edits it.</span></span> <span data-ttu-id="83274-460">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-460">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#2)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-461">
            <paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-461">
              <paramref name="offset" /> or <paramref name="size" /> is a negative value.</span>
          </span>
          <span data-ttu-id="83274-462">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-462">-or-</span>
          </span>
          <span data-ttu-id="83274-463">
            <paramref name="size" />가 논리 주소 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-463">
              <paramref name="size" /> is greater than the logical address space.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="83274-464">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-464">Access to the memory-mapped file is unauthorized.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83274-465">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-465">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="member this.CreateViewAccessor : int64 * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" Usage="memoryMappedFile.CreateViewAccessor (offset, size, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="83274-466">뷰를 시작할 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-466">The byte at which to start the view.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="83274-467">뷰의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-467">The size of the view.</span>
          </span>
          <span data-ttu-id="83274-468">
            <c>오프셋</c>에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-468">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="83274-469">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-469">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-470">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-470">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-471">지정된 오프셋, 크기 및 액세스 제한을 가지고 메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-471">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-472">임의로 액세스 가능한 메모리 블록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-472">A randomly accessible block of memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-473">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-473">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="83274-474">메모리 매핑된 파일의 전체 뷰를 만들려면 0 (영)에 대 한 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-474">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="83274-475">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-475">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="83274-476">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-476">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-477">
            <paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-477">
              <paramref name="offset" /> or <paramref name="size" /> is a negative value.</span>
          </span>
          <span data-ttu-id="83274-478">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-478">-or-</span>
          </span>
          <span data-ttu-id="83274-479">
            <paramref name="size" />가 논리 주소 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-479">
              <paramref name="size" /> is greater than the logical address space.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="83274-480">
            <paramref name="access" />는 메모리 매핑된 파일에 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-480">
              <paramref name="access" /> is invalid for the memory-mapped file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83274-481">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-481">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83274-482">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-482">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="83274-483">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-483">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewStream">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83274-484">메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-484">Creates a stream that maps to a view of the memory-mapped file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream () As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream();" />
      <MemberSignature Language="F#" Value="member this.CreateViewStream : unit -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewStream" Usage="memoryMappedFile.CreateViewStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83274-485">메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-485">Creates a stream that maps to a view of the memory-mapped file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-486">메모리 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-486">A stream of memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-487">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-487">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83274-488">다음 예제에서는 스트림을 만들고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="83274-488">The following example creates a stream and writes a value to it.</span></span> <span data-ttu-id="83274-489">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="83274-489">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> method.</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#2)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="83274-490">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-490">Access to the memory-mapped file is unauthorized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size);" />
      <MemberSignature Language="F#" Value="member this.CreateViewStream : int64 * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewStream" Usage="memoryMappedFile.CreateViewStream (offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="83274-491">뷰를 시작할 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-491">The byte at which to start the view.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="83274-492">뷰의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-492">The size of the view.</span>
          </span>
          <span data-ttu-id="83274-493">
            <c>오프셋</c>에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-493">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-494">지정된 오프셋과 크기를 가지고 메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-494">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-495">지정된 오프셋과 크기를 가진 메모리 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-495">A stream of memory that has the specified offset and size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-496">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-496">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="83274-497">메모리 매핑된 파일의 전체 뷰를 만들려면 0 (영)에 대 한 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-497">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="83274-498">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-498">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="83274-499">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-499">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-500">
            <paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-500">
              <paramref name="offset" /> or <paramref name="size" /> is a negative value.</span>
          </span>
          <span data-ttu-id="83274-501">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-501">-or-</span>
          </span>
          <span data-ttu-id="83274-502">
            <paramref name="size" />가 논리 주소 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-502">
              <paramref name="size" /> is greater than the logical address space.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="83274-503">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-503">Access to the memory-mapped file is unauthorized.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83274-504">
            <paramref name="size" />가 총 가상 메모리보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-504">
              <paramref name="size" /> is greater than the total virtual memory.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="member this.CreateViewStream : int64 * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewStream" Usage="memoryMappedFile.CreateViewStream (offset, size, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="83274-505">뷰를 시작할 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-505">The byte at which to start the view.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="83274-506">뷰의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-506">The size of the view.</span>
          </span>
          <span data-ttu-id="83274-507">
            <c>오프셋</c>에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-507">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="83274-508">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-508">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="83274-509">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-509">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-510">지정된 오프셋, 크기 및 액세스 형식을 가지고 메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-510">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-511">지정된 특성을 가진 메모리 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-511">A stream of memory that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-512">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-512">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="83274-513">메모리 매핑된 파일의 전체 뷰를 만들려면 0 (영)에 대 한 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-513">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="83274-514">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-514">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="83274-515">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="83274-515">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-516">
            <paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-516">
              <paramref name="offset" /> or <paramref name="size" /> is a negative value.</span>
          </span>
          <span data-ttu-id="83274-517">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-517">-or-</span>
          </span>
          <span data-ttu-id="83274-518">
            <paramref name="size" />가 논리 주소 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-518">
              <paramref name="size" /> is greater than the logical address space.</span>
          </span>
          <span data-ttu-id="83274-519">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-519">-or-</span>
          </span>
          <span data-ttu-id="83274-520">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-520">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="83274-521">
            <paramref name="access" />는 메모리 매핑된 파일에 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-521">
              <paramref name="access" /> is invalid for the memory-mapped file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="83274-522">
            <paramref name="size" />가 총 가상 메모리보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-522">
              <paramref name="size" /> is greater than the total virtual memory.</span>
          </span>
          <span data-ttu-id="83274-523">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-523">-or-</span>
          </span>
          <span data-ttu-id="83274-524">
            <paramref name="access" />는 메모리 매핑된 파일에 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-524">
              <paramref name="access" /> is invalid for the memory-mapped file.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83274-525">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-525">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="83274-526">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-526">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83274-527">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-527">Releases the resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="memoryMappedFile.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83274-528">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-528">Releases all resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="memoryMappedFile.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="83274-529">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-529">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-530">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-530">Releases the unmanaged resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As MemoryMappedFileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Usage="memoryMappedFile.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFileSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83274-531">메모리 매핑된 파일 리소스에 대한 액세스 제어를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-531">Gets the access control to the memory-mapped file resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-532">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-532">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83274-533">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-533">An underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83274-534">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-534">An underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="83274-535">메모리 매핑된 파일이 닫혀 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-535">The memory-mapped file is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="83274-536">현재 플랫폼은 Windows 98 또는 이전 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-536">The current platform is Windows 98 or earlier.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="83274-537">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-537">An underlying call to set security information failed.</span>
          </span>
          <span data-ttu-id="83274-538">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-538">-or-</span>
          </span>
          <span data-ttu-id="83274-539">메모리 매핑된 파일이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />로만 열렸습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-539">The memory-mapped file was opened as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="83274-540">시스템 메모리에서 명명된 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-540">Opens an existing named memory-mapped file in system memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting mapName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="83274-541">메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-541">The name of the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-542">시스템 메모리에서 지정된 이름을 가진 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-542">Opens an existing memory-mapped file that has the specified name in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-543">지정된 이름을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-543">A memory-mapped file that has the specified name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83274-544">메모리 매핑된 파일에는 비지속형 또는 하거나 지속형된 메모리 매핑된 파일 (디스크의 파일에 연결) 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="83274-544">The memory-mapped file can be either a persisted memory-mapped file (associated with a file on disk) or non-persisted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="83274-545">**지속형된 메모리 매핑된 파일 열기**</span><span class="sxs-lookup"><span data-stu-id="83274-545">**Opening a Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="83274-546">다음 예제에서는 명명 된 메모리 매핑된 파일을 엽니다 `ImgA` 이미 디스크에 있는 파일 로부터 만들어진 (에 대 한 예제와 같이 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> 메서드).</span><span class="sxs-lookup"><span data-stu-id="83274-546">The following example opens a memory-mapped file named `ImgA` that has already been created from a file on disk (as shown in the example for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> method).</span></span>  
  
 [!code-csharp[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/cs/program.cs#1)]
 [!code-vb[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/vb/program.vb#1)]  
  
 <span data-ttu-id="83274-547">**비지속형 메모리 매핑된 파일 열기**</span><span class="sxs-lookup"><span data-stu-id="83274-547">**Opening a Non-Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="83274-548">다음 예제에서는 프로세스 간 통신에 사용 되는 메모리 매핑된 파일을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="83274-548">The following example opens a memory-mapped file used for inter-process communication.</span></span> <span data-ttu-id="83274-549">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="83274-549">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-550">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-550">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-551">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-551">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="83274-552">
            <paramref name="mapName" />에 지정된 파일이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-552">The file specified for <paramref name="mapName" /> does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.IO.MemoryMappedFiles.MemoryMappedFileRights -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting (mapName, desiredAccessRights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="83274-553">열려는 메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-553">The name of the memory-mapped file to open.</span>
          </span>
        </param>
        <param name="desiredAccessRights">
          <span data-ttu-id="83274-554">메모리 매핑된 파일에 적용할 액세스 권한을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-554">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-555">시스템 메모리에서 지정된 이름과 액세스 권한을 가진 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-555">Opens an existing memory-mapped file that has the specified name and access rights in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-556">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-556">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-557">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-557">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-558">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-558">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-559">
            <paramref name="desiredAccessRights" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-559">
              <paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="83274-560">
            <paramref name="mapName" />에 지정된 파일이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-560">The file specified for <paramref name="mapName" /> does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.IO.MemoryMappedFiles.MemoryMappedFileRights * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting (mapName, desiredAccessRights, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="83274-561">열려는 메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-561">The name of the memory-mapped file to open.</span>
          </span>
        </param>
        <param name="desiredAccessRights">
          <span data-ttu-id="83274-562">메모리 매핑된 파일에 적용할 액세스 권한을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-562">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="83274-563">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-563">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="83274-564">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-564">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-565">시스템 메모리에서 지정된 이름, 액세스 권한 및 상속 가능성을 가진 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-565">Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83274-566">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-566">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-567">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-567">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="83274-568">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-568">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="83274-569">
            <paramref name="desiredAccessRights" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-569">
              <paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span>
          </span>
          <span data-ttu-id="83274-570">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-570">-or-</span>
          </span>
          <span data-ttu-id="83274-571">
            <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-571">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="83274-572">요청된 액세스는 메모리 매핑된 파일에 유효하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-572">The requested access is invalid for the memory-mapped file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="83274-573">
            <paramref name="mapName" />에 지정된 파일이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-573">The file specified for <paramref name="mapName" /> does not exist.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83274-574">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-574">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="83274-575">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-575">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SafeMemoryMappedFileHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeMemoryMappedFileHandle As SafeMemoryMappedFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ SafeMemoryMappedFileHandle { Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeMemoryMappedFileHandle : Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="83274-576">메모리 매핑된 파일의 파일 핸들을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-576">Gets the file handle of a memory-mapped file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="83274-577">메모리 매핑된 파일의 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-577">The handle to the memory-mapped file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="83274-578">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-578">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="83274-579">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-579">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.IO.MemoryMappedFiles.MemoryMappedFileSecurity -&gt; unit" Usage="memoryMappedFile.SetAccessControl memoryMappedFileSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
      </Parameters>
      <Docs>
        <param name="memoryMappedFileSecurity">
          <span data-ttu-id="83274-580">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-580">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83274-581">메모리 매핑된 파일 리소스에 대한 액세스 제어를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-581">Sets the access control to the memory-mapped file resource.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="83274-582">
            <paramref name="memoryMappedFileSecurity" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-582">
              <paramref name="memoryMappedFileSecurity" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="83274-583">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-583">An underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="83274-584">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-584">An underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="83274-585">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="83274-585">An underlying call to set security information failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>