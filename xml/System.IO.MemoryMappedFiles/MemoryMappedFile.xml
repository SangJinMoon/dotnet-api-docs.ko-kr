<Type Name="MemoryMappedFile" FullName="System.IO.MemoryMappedFiles.MemoryMappedFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a66a5dd4c90728e89b0d27733b7685923d2e2f64" />
    <Meta Name="ms.sourcegitcommit" Value="29c771f79cf4eac4f49e5fae5f1aa8b457acf146" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/21/2018" />
    <Meta Name="ms.locfileid" Value="36298819" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MemoryMappedFile : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryMappedFile extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryMappedFile&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryMappedFile : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c3983-101">메모리 매핑된 파일을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c3983-101">Represents a memory-mapped file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-102">메모리 매핑된 파일을 응용 프로그램의 논리 주소 공간에는 파일의 내용을 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-102">A memory-mapped file maps the contents of a file to an application’s logical address space.</span></span> <span data-ttu-id="c3983-103">메모리 매핑된 파일을 사용 하면 메모리를 동시에 관리할 수 있습니다. 그리고 검색할 필요 없이 파일에 대 한 완전 한 임의 액세스를 허용 하기 때문에 매우 큰 파일을 사용 하는 프로그래머가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-103">Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking.</span></span> <span data-ttu-id="c3983-104">여러 프로세스에서 메모리 매핑된 파일을 공유할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-104">Memory-mapped files can also be shared across multiple processes.</span></span>  
  
 <span data-ttu-id="c3983-105"><xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> 메서드는 지정된 된 경로에서 메모리 매핑된 파일 만들기 또는 <xref:System.IO.FileStream> 디스크에 기존 파일의 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-105">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> methods create a memory-mapped file from a specified path or a <xref:System.IO.FileStream> of an existing file on disk.</span></span> <span data-ttu-id="c3983-106">변경 내용이 경우 디스크에 자동으로 전파 되 매핑된 파일이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-106">Changes are automatically propagated to disk when the file is unmapped.</span></span>  
  
 <span data-ttu-id="c3983-107"><xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> 메서드; 디스크에 기존 파일에 매핑되지 않은 메모리 매핑된 파일을 만들고 (IPC) 프로세스 간 통신에 대 한 공유 메모리를 만들기에 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-107">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).</span></span>  
  
 <span data-ttu-id="c3983-108">메모리 매핑된 파일을 메모리 매핑된 파일을 다른 프로세스와 공유할 수 있도록 하는 선택적 이름으로 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-108">A memory-mapped file can be associated with an optional name that allows the memory-mapped file to be shared with other processes.</span></span> 
  
 <span data-ttu-id="c3983-109">일부 파일의 뷰를 포함 하는 메모리 매핑된 파일의 여러 뷰를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-109">You can create multiple views of the memory-mapped file, including views of parts of the file.</span></span> <span data-ttu-id="c3983-110">둘 이상의 주소 동시 메모리를 만들 파일의 한 부분을 매핑할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-110">You can map the same part of a file to more than one address to create concurrent memory.</span></span> <span data-ttu-id="c3983-111">두 보기를 동시에 유지하려면 동일한 메모리 매핑된 파일에서 보기를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-111">For two views to remain concurrent, they have to be created from the same memory-mapped file.</span></span> <span data-ttu-id="c3983-112">두 가지 보기를 사용 하 여 동일한 파일의 두 파일 매핑 만들기 동시성을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-112">Creating two file mappings of the same file with two views does not provide concurrency.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3983-113">다음 예제에서는 매우 큰 파일의 일부에 대한 메모리 매핑된 보기를 만들고 보기의 일부를 조작합니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-113">The following example creates a memory-mapped view of a part of an extremely large file and manipulates a portion of it.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateFromFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3983-114">기존 파일에서 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-114">Creates a memory-mapped file from an existing file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c3983-115">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-115">The path to file to map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-116">디스크의 파일에서 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-116">Creates a memory-mapped file from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-117">메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-117">A memory-mapped file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c3983-118">사용 하 여 다음 예제는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> 메모리 매핑된 파일을 만드는 메서드를 다음 매우 큰 파일의 일부분에 메모리 매핑된 뷰를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-118">The following example uses the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> method to create a memory-mapped file, and then creates a memory-mapped view to a portion of an extremely large file.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-119">
            <paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-119">
              <paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span>
          </span>
          <span data-ttu-id="c3983-120">-또는-  <paramref name="path" />는 잘못된 장치로 참조합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-120">-or-  <paramref name="path" /> refers to an invalid device.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-121">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-121">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c3983-122">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-122">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c3983-123">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-123">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c3983-124">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-124">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c3983-125">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-125">The path to the file to map.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="c3983-126">액세스 모드는 <see cref="F:System.IO.FileMode.Open" />이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-126">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-127">디스크의 파일에서 지정된 액세스 모드를 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-127">Creates a memory-mapped file that has the specified access mode from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-128">지정된 액세스 모드를 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-128">A memory-mapped file that has the specified access mode.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-129">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-129">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="c3983-130">만 사용할 수는 <xref:System.IO.FileMode.Open> 디스크에 있는 소스 파일에서 메모리 매핑된 파일을 만들려면 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-130">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-131">
            <paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-131">
              <paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span>
          </span>
          <span data-ttu-id="c3983-132">-또는-  <paramref name="path" />는 잘못된 장치로 참조합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-132">-or-  <paramref name="path" /> refers to an invalid device.</span>
          </span>
          <span data-ttu-id="c3983-133">-또는-  <paramref name="mode" />이 <see cref="F:System.IO.FileMode.Append" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-133">-or-  <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-134">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-134">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c3983-135">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" /> 또는 <see cref="F:System.IO.FileMode.Truncate" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-135">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span>
          </span>
          <span data-ttu-id="c3983-136">-또는-  <paramref name="mode" />가 <see cref="F:System.IO.FileMode.OpenOrCreate" />이고 디스크에 파일이 존재하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-136">-or-  <paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span>
          </span>
          <span data-ttu-id="c3983-137">-또는-  I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-137">-or-  An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c3983-138">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-138">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c3983-139">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-139">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c3983-140">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-140">The path to the file to map.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="c3983-141">액세스 모드는 <see cref="F:System.IO.FileMode.Open" />이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-141">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="c3983-142">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-142">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-143">디스크의 파일에서 지정된 액세스 모드와 이름을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-143">Creates a memory-mapped file that has the specified access mode and name from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-144">지정된 이름과 액세스 모드를 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-144">A memory-mapped file that has the specified name and access mode.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-145">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-145">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="c3983-146">만 사용할 수는 <xref:System.IO.FileMode.Open> 디스크에 있는 소스 파일에서 메모리 매핑된 파일을 만들려면 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-146">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-147">
            <paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-147">
              <paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span>
          </span>
          <span data-ttu-id="c3983-148">-또는-  <paramref name="path" />는 잘못된 장치로 참조합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-148">-or-  <paramref name="path" /> refers to an invalid device.</span>
          </span>
          <span data-ttu-id="c3983-149">-또는-  <paramref name="mapName" />이 빈 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-149">-or-  <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="c3983-150">-또는-  <paramref name="mode" />이 <see cref="F:System.IO.FileMode.Append" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-150">-or-  <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-151">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-151">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c3983-152">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" /> 또는 <see cref="F:System.IO.FileMode.Truncate" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-152">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span>
          </span>
          <span data-ttu-id="c3983-153">-또는-  <paramref name="mode" />가 <see cref="F:System.IO.FileMode.OpenOrCreate" />이고 디스크에 파일이 존재하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-153">-or-  <paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span>
          </span>
          <span data-ttu-id="c3983-154">-또는-  I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-154">-or-  An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c3983-155">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-155">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c3983-156">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-156">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c3983-157">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-157">The path to the file to map.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="c3983-158">액세스 모드는 <see cref="T:System.IO.FileMode" />를 제외하고는 <see cref="F:System.IO.FileMode.Append" /> 열거형이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-158">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="c3983-159">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-159">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="c3983-160">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-160">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-161">용량을 디스크에 있는 파일의 크기로 설정하려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-161">Specify 0 to set the capacity to the size of the file on disk.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-162">디스크의 파일에서 지정된 액세스 모드, 이름 및 용량을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-162">Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-163">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-163">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-164">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-164">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="c3983-165">경우 `capacity` 데이터가 없는 메모리 매핑된 파일에 기록 되는 경우에 지정된 된 용량에 맞게 디스크에 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-165">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="c3983-166">발생 하지 않도록 하려면이 0 (영)은 내부적으로 설정 되어 있는 기본 용량에 대 한 지정 `capacity` 디스크에 있는 파일의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-166">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-167">
            <paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-167">
              <paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span>
          </span>
          <span data-ttu-id="c3983-168">-또는-  <paramref name="path" />는 잘못된 장치로 참조합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-168">-or-  <paramref name="path" /> refers to an invalid device.</span>
          </span>
          <span data-ttu-id="c3983-169">-또는-  <paramref name="mapName" />이 빈 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-169">-or-  <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="c3983-170">-또는-  <paramref name="mode" />이 <see cref="F:System.IO.FileMode.Append" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-170">-or-  <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-171">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-171">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-172">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-172">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="c3983-173">-또는-  <paramref name="capacity" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-173">-or-  <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c3983-174">-또는-  <paramref name="capacity" />가 파일 크기보다 작습니다(0은 아님).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-174">-or-  <paramref name="capacity" /> is less than the file size (but not zero).</span>
          </span>
          <span data-ttu-id="c3983-175">-또는-  <paramref name="capacity" />가 0이고 디스크의 파일 크기도 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-175">-or-  <paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c3983-176">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-176">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c3983-177">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-177">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c3983-178">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-178">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="c3983-179">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-179">The path to the file to map.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="c3983-180">액세스 모드는 <see cref="T:System.IO.FileMode" />를 제외하고는 <see cref="F:System.IO.FileMode.Append" /> 열거형이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-180">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="c3983-181">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-181">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="c3983-182">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-182">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-183">용량을 디스크에 있는 파일의 크기로 설정하려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-183">Specify 0 to set the capacity to the size of the file on disk.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="c3983-184">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-184">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-185">디스크의 파일에서 지정된 액세스 모드, 이름, 용량 및 액세스 형식을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-185">Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-186">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-186">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-187">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-187">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="c3983-188">경우 `capacity` 데이터가 없는 메모리 매핑된 파일에 기록 되는 경우에 지정된 된 용량에 맞게 디스크에 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-188">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="c3983-189">발생 하지 않도록 하려면이 0 (영)은 내부적으로 설정 되어 있는 기본 용량에 대 한 지정 `capacity` 디스크에 있는 파일의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-189">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-190">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-190">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="c3983-191">-또는-  <paramref name="access" />가 허용되는 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-191">-or-  <paramref name="access" /> is not an allowed value.</span>
          </span>
          <span data-ttu-id="c3983-192">-또는-  <paramref name="path" />는 빈 파일을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-192">-or-  <paramref name="path" /> specifies an empty file.</span>
          </span>
          <span data-ttu-id="c3983-193">-또는-  <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />로 지정되고 용량이 <paramref name="path" />에 지정된 파일 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-193">-or-  <paramref name="access" /> is specified as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and capacity is greater than the size of the file indicated by <paramref name="path" />.</span>
          </span>
          <span data-ttu-id="c3983-194">-또는-  <paramref name="mode" />이 <see cref="F:System.IO.FileMode.Append" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-194">-or-  <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-195">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-195">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-196">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-196">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="c3983-197">-또는-  <paramref name="capacity" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-197">-or-  <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c3983-198">-또는-  <paramref name="capacity" />가 파일 크기보다 작습니다(0은 아님).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-198">-or-  <paramref name="capacity" /> is less than the file size (but not zero).</span>
          </span>
          <span data-ttu-id="c3983-199">-또는-  <paramref name="capacity" />가 0이고 디스크의 파일 크기도 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-199">-or-  <paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span>
          </span>
          <span data-ttu-id="c3983-200">-또는-  <paramref name="access" />는 정의된 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-200">-or-  <paramref name="access" /> is not a defined <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> value.</span>
          </span>
          <span data-ttu-id="c3983-201">-또는-  <paramref name="path" />로 표시된 파일 크기가 <paramref name="capacity" />보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-201">-or-  The size of the file indicated by <paramref name="path" /> is greater than <paramref name="capacity" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c3983-202">-또는-  I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-202">-or-  An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="c3983-203">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-203">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c3983-204">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-204">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c3983-205">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-205">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="c3983-206">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-206">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileStream">
          <span data-ttu-id="c3983-207">기존 파일의 파일 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-207">The file stream of the existing file.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="c3983-208">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-208">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="c3983-209">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-209">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-210">용량을 <c>파일 스트림</c>의 크기로 설정하려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-210">Specify 0 to set the capacity to the size of <c>filestream</c>.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="c3983-211">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-211">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-212">이 매개 변수는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />로 설정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-212">This parameter can’t be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="c3983-213">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-213">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="c3983-214">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-214">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="c3983-215">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />이 삭제되면 소스 파일 스트림을 닫을지 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-215">A value that indicates whether to close the source file stream when the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is disposed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-216">지정된 액세스 모드, 이름, 상속 및 용량을 사용하여 기존 파일에서 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-216">Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-217">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-217">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-218">
            <paramref name="mapName" />이 <see langword="null" /> 또는 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-218">
              <paramref name="mapName" /> is <see langword="null" /> or an empty string.</span>
          </span>
          <span data-ttu-id="c3983-219">-또는-  파일의 <paramref name="capacity" /> 및 길이가 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-219">-or-  <paramref name="capacity" /> and the length of the file are zero.</span>
          </span>
          <span data-ttu-id="c3983-220">-또는-  <paramref name="access" />가 허용되지 않는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값으로 설정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-220">-or-  <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span>
          </span>
          <span data-ttu-id="c3983-221">-또는-  <paramref name="access" />가 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />로 설정되고 <paramref name="capacity" />가 <see langword="filestream" />의 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-221">-or-  <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and <paramref name="capacity" /> is larger than the length of <see langword="filestream" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-222">
            <paramref name="fileStream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-222">
              <paramref name="fileStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-223">
            <paramref name="capacity" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-223">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c3983-224">-또는-  <paramref name="capacity" />가 파일 크기보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-224">-or-  <paramref name="capacity" /> is less than the file size.</span>
          </span>
          <span data-ttu-id="c3983-225">-또는-  <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-225">-or-  <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="c3983-226">-또는-  <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-226">-or-  <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileStream">
          <span data-ttu-id="c3983-227">매핑할 파일에 대한 <c>파일 스트림</c>입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-227">The <c>fileStream</c> to the file to map.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="c3983-228">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-228">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="c3983-229">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-229">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-230">용량을 디스크에 있는 파일의 크기로 설정하려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-230">Specify 0 to set the capacity to the size of the file on disk.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="c3983-231">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-231">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-232">이 매개 변수는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />로 설정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-232">This parameter can’t be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span>
          </span>
        </param>
        <param name="memoryMappedFileSecurity">
          <span data-ttu-id="c3983-233">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-233">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
          <span data-ttu-id="c3983-234">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-234">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="c3983-235">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-235">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="c3983-236">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-236">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="c3983-237">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />이 닫힌 후 <c>파일 스트림</c>을 삭제하지 않으려면 <see langword="true" />이고 <c>파일 스트림</c>을 삭제하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-237">
              <see langword="true" /> to not dispose <c>fileStream</c> after the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is closed; <see langword="false" /> to dispose <c>fileStream</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-238">디스크의 파일에서 지정된 이름, 용량, 액세스 형식, 보안 권한, 상속 가능성 및 삭제 요구 사항을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-238">Creates a memory-mapped file that has the specified name, capacity, access type, security permissions, inheritability, and disposal requirement from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-239">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-239">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-240">경우 `capacity` 데이터가 없는 메모리 매핑된 파일에 기록 되는 경우에 지정된 된 용량에 맞게 디스크에 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-240">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="c3983-241">발생 하지 않도록 하려면이 0 (영)은 내부적으로 설정 되어 있는 기본 용량에 대 한 지정 `capacity` 디스크에 있는 파일의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-241">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-242">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-242">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="c3983-243">-또는-  파일의 <paramref name="capacity" /> 및 길이가 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-243">-or-  <paramref name="capacity" /> and the length of the file are zero.</span>
          </span>
          <span data-ttu-id="c3983-244">-또는-  <paramref name="access" />가 허용되지 않는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형으로 설정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-244">-or-  <paramref name="access" /> is set to the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-245">
            <paramref name="fileStream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-245">
              <paramref name="fileStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-246">
            <paramref name="capacity" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-246">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c3983-247">-또는-  <paramref name="capacity" />가 파일 크기보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-247">-or-  <paramref name="capacity" /> is less than the file size.</span>
          </span>
          <span data-ttu-id="c3983-248">-또는-  <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-248">-or-  <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="c3983-249">-또는-  <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-249">-or-  <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c3983-250">
            <paramref name="fileStream" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-250">
              <paramref name="fileStream" /> was closed.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c3983-251">
            <paramref name="access" />의 액세스가 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> 또는 <see cref="F:System.IO.FileAccess.Read" />로 설정된 경우 <paramref name="fileStream" />는 <see cref="F:System.IO.FileAccess.Write" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-251">
              <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> when <paramref name="fileStream" />'s access is set to <see cref="F:System.IO.FileAccess.Read" /> or <see cref="F:System.IO.FileAccess.Write" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c3983-252">
            <paramref name="mapName" />이(가) 이미 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-252">
              <paramref name="mapName" /> already exists.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c3983-253">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-253">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="c3983-254">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-254">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNew">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3983-255">시스템 메모리에 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-255">Creates a memory-mapped file in system memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="c3983-256">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-256">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="c3983-257">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-257">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-258">시스템 메모리에서 지정된 용량을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-258">Creates a memory-mapped file that has the specified capacity in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-259">지정된 이름과 용량을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-259">A memory-mapped file that has the specified name and capacity.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-260">지속 되지 않는 메모리 매핑된 파일을 만들려면이 메서드를 사용 하 여 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-260">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3983-261">다음 예제에서는 작성 하는 세 가지 별도 프로세스 (콘솔 응용 프로그램)로 이루어져 `Boolean` 메모리 매핑된 파일에는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-261">The following example is composed of three separate processes (console applications) that write `Boolean` values to a memory-mapped file.</span></span> <span data-ttu-id="c3983-262">다음 작업 시퀀스가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-262">The following sequence of actions occur:</span></span>  
  
1.  <span data-ttu-id="c3983-263">프로세스 A 메모리 매핑된 파일을 만들고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-263">Process A creates the memory-mapped file and writes a value to it.</span></span>  
  
2.  <span data-ttu-id="c3983-264">B 프로세스 메모리 매핑된 파일 열리고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-264">Process B opens the memory-mapped file and writes a value to it.</span></span>  
  
3.  <span data-ttu-id="c3983-265">C 프로세스 메모리 매핑된 파일 열리고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-265">Process C opens the memory-mapped file and writes a value to it.</span></span>  
  
4.  <span data-ttu-id="c3983-266">프로세스 A를 읽고 메모리 매핑된 파일의 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-266">Process A reads and displays the values from the memory-mapped file.</span></span>  
  
5.  <span data-ttu-id="c3983-267">메모리 매핑된 파일 프로세스는 완료 되 면 파일이 가비지 수집에 의해 즉시 회수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-267">After Process A is finished with the memory-mapped file, the file is immediately reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="c3983-268">이 예제를 실행하려면 다음을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-268">To run this example, do the following:</span></span>  
  
1.  <span data-ttu-id="c3983-269">응용 프로그램을 컴파일하고 세 개의 명령 창을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-269">Compile the applications and open three Command windows.</span></span>  
  
2.  <span data-ttu-id="c3983-270">첫 번째 명령 창에서 프로세스 A를 실행</span><span class="sxs-lookup"><span data-stu-id="c3983-270">In the first Command window, run Process A.</span></span>  
  
3.  <span data-ttu-id="c3983-271">두 번째 명령 창에서 2. 프로세스를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-271">In the second Command window, run Process B.</span></span>  
  
4.  <span data-ttu-id="c3983-272">프로세스 A 돌아가서 ENTER 키를 누릅니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-272">Return to Process A and press ENTER.</span></span>  
  
5.  <span data-ttu-id="c3983-273">세 번째 명령 창에서 3. 프로세스를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-273">In the third Command window, run Process C.</span></span>  
  
6.  <span data-ttu-id="c3983-274">프로세스 A 돌아가서 ENTER 키를 누릅니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-274">Return to Process A and press ENTER.</span></span>  
  
 <span data-ttu-id="c3983-275">프로세스의 출력은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-275">The output of Process A is as follows:</span></span>  
  
```  
Start Process B and press ENTER to continue.  
Start Process C and press ENTER to continue.  
Process A says: True  
Process B says: False  
Process C says: True  
```  
  
 <span data-ttu-id="c3983-276">**프로세스 A**</span><span class="sxs-lookup"><span data-stu-id="c3983-276">**Process A**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#1)]  
  
 <span data-ttu-id="c3983-277">**프로세스 B**</span><span class="sxs-lookup"><span data-stu-id="c3983-277">**Process B**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/vb/program.vb#1)]  
  
 <span data-ttu-id="c3983-278">**프로세스 C**</span><span class="sxs-lookup"><span data-stu-id="c3983-278">**Process C**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-279">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-279">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-280">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-280">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="c3983-281">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-281">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="c3983-282">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-282">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="c3983-283">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-283">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-284">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-284">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-285">시스템 메모리에서 지정된 용량과 액세스 형식을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-285">Creates a memory-mapped file that has the specified capacity and access type in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-286">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-286">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-287">지속 되지 않는 메모리 매핑된 파일을 만들려면이 메서드를 사용 하 여 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-287">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-288">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-288">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="c3983-289">-또는-  <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-289">-or-  <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-290">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-290">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="c3983-291">-또는-  <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-291">-or-  <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="c3983-292">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-292">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="c3983-293">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-293">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="c3983-294">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-294">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-295">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-295">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c3983-296">메모리 매핑된 파일에 대한 메모리 할당 옵션을 지정하는 열거형 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-296">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="c3983-297">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-297">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="c3983-298">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-298">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-299">지정된 이름, 용량, 액세스 형식, 메모리 할당 옵션 및 상속을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-299">Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-300">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-300">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-301">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-301">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="c3983-302">-또는-  <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-302">-or-  <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-303">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-303">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="c3983-304">-또는-  <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-304">-or-  <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="c3983-305">-또는-  <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-305">-or-  <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="c3983-306">메모리 매핑된 파일에 할당할 이름 또는 프로세스 간에 공유하지 않으려는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에 대한 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-306">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="c3983-307">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-307">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="c3983-308">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-308">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-309">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-309">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c3983-310">메모리 매핑된 파일에 대한 메모리 할당 옵션을 지정하는 열거형 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-310">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span>
          </span>
        </param>
        <param name="memoryMappedFileSecurity">
          <span data-ttu-id="c3983-311">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-311">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
          <span data-ttu-id="c3983-312">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-312">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="c3983-313">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-313">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="c3983-314">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-314">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-315">시스템 메모리에서 지정된 용량, 액세스 형식, 메모리 할당, 보안 권한 및 상속 가능성을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-315">Creates a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-316">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-316">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-317">지속 되지 않는 메모리 매핑된 파일을 만들려면이 메서드를 사용 하 여 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-317">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-318">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-318">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="c3983-319">-또는-  <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-319">-or-  <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-320">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-320">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="c3983-321">-또는-  <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-321">-or-  <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="c3983-322">-또는-  <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-322">-or-  <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c3983-323">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-323">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="c3983-324">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-324">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateOrOpen">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3983-325">시스템 메모리에 메모리 매핑된 파일을 만들거나 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-325">Creates or opens a memory-mapped file in system memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="c3983-326">메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-326">The name of the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="c3983-327">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-327">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-328">시스템 메모리에서 지정된 이름 및 용량을 가진 메모리 매핑된 파일을 만들거나 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-328">Creates or opens a memory-mapped file that has the specified name and capacity in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-329">지정된 이름과 크기를 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-329">A memory-mapped file that has the specified name and size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-330">이 메서드를 사용 하 여 만들거나 지속 되지 않는 메모리 매핑된 파일을 열 수 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-330">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-331">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-331">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-332">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-332">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="c3983-333">-또는-  <paramref name="capacity" />가 0보다 작거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-333">-or-  <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="c3983-334">메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-334">The name of the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="c3983-335">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-335">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="c3983-336">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-336">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-337">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-337">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-338">시스템 메모리에서 지정된 이름, 용량 및 액세스 형식을 가진 메모리 매핑된 파일을 만들거나 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-338">Creates or opens a memory-mapped file that has the specified name, capacity and access type in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-339">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-339">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-340">이 메서드를 사용 하 여 만들거나 지속 되지 않는 메모리 매핑된 파일을 열 수 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-340">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-341">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-341">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-342">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-342">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="c3983-343">-또는-  <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-343">-or-  <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-344">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-344">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="c3983-345">-또는-  <paramref name="capacity" />가 0보다 작거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-345">-or-  <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="c3983-346">-또는-  <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-346">-or-  <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c3983-347">운영 체제에서 파일에 지정된 액세스 권한을 거부했습니다. 예를 들어, 액세스 권한이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />로 설정되어 있지만 파일 또는 디렉터리가 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-347">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="c3983-348">메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-348">The name of the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="c3983-349">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-349">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="c3983-350">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-350">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-351">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-351">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c3983-352">파일에 적용할 메모리 할당 옵션을 나타내는 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-352">A bitwise combination of values that indicate the memory allocation options to apply to the file.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="c3983-353">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-353">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="c3983-354">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-354">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-355">동일한 이름의 파일이 있는 경우 비어 있는 새 메모리 매핑된 파일을 만들거나 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-355">Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name.</span>
          </span>
          <span data-ttu-id="c3983-356">기존 파일을 여는 경우 용량, 옵션 및 메모리 인수가 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-356">If opening an existing file, the capacity, options, and memory arguments will be ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-357">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-357">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-358">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-358">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-359">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-359">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="c3983-360">-또는-  <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-360">-or-  <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-361">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-361">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="c3983-362">-또는-  <paramref name="capacity" />가 0보다 작거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-362">-or-  <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="c3983-363">-또는-  <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-363">-or-  <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="c3983-364">-또는-  <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-364">-or-  <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c3983-365">운영 체제에서 파일에 지정된 액세스 권한을 거부했습니다. 예를 들어, 액세스 권한이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />로 설정되어 있지만 파일 또는 디렉터리가 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-365">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="c3983-366">메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-366">The name of the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="c3983-367">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-367">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="c3983-368">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-368">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-369">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-369">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c3983-370">메모리 매핑된 파일에 대한 메모리 할당 옵션을 지정하는 열거형 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-370">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span>
          </span>
        </param>
        <param name="memoryMappedFileSecurity">
          <span data-ttu-id="c3983-371">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-371">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
          <span data-ttu-id="c3983-372">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-372">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="c3983-373">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-373">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="c3983-374">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-374">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-375">시스템 메모리에서 지정된 이름, 용량, 액세스 형식, 메모리 할당, 보안 권한 및 상속 가능성을 가진 메모리 매핑된 파일을 만들거나 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-375">Creates or opens a memory-mapped file that has the specified name, capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-376">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-376">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-377">이 메서드를 사용 하 여 만들거나 지속 되지 않는 메모리 매핑된 파일을 열 수 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-377">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-378">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-378">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-379">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-379">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="c3983-380">-또는-  <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-380">-or-  <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-381">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-381">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="c3983-382">-또는-  <paramref name="capacity" />가 0보다 작거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-382">-or-  <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="c3983-383">-또는-  <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-383">-or-  <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="c3983-384">-또는-  <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-384">-or-  <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c3983-385">운영 체제에서 파일에 지정된 <paramref name="access" /> 권한을 거부했습니다. 예를 들어, <paramref name="access" /> 권한이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />로 설정되어 있지만 파일 또는 디렉터리가 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-385">The operating system denied the specified <paramref name="access" /> to the file; for example, <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c3983-386">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-386">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="c3983-387">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-387">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewAccessor">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3983-388">메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-388">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor () As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3983-389">메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-389">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-390">임의로 액세스 가능한 메모리 블록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-390">A randomly accessible block of memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-391">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-391">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c3983-392">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-392">Access to the memory-mapped file is unauthorized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="c3983-393">뷰를 시작할 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-393">The byte at which to start the view.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="c3983-394">뷰의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-394">The size of the view.</span>
          </span>
          <span data-ttu-id="c3983-395">
            <c>오프셋</c>에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-395">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-396">지정된 오프셋과 크기를 가지고 메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-396">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset and size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-397">임의로 액세스 가능한 메모리 블록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-397">A randomly accessible block of memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-398">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-398">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="c3983-399">메모리 매핑된 파일의 전체 보기를 만들려면 0 (영)을 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-399">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="c3983-400">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-400">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="c3983-401">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-401">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3983-402">다음 예제에서는 메모리 매핑된 파일의 보기를 만들고 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-402">The following example creates a view of a memory-mapped file and edits it.</span></span> <span data-ttu-id="c3983-403">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-403">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#2)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-404">
            <paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-404">
              <paramref name="offset" /> or <paramref name="size" /> is a negative value.</span>
          </span>
          <span data-ttu-id="c3983-405">-또는-  <paramref name="size" />가 논리 주소 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-405">-or-  <paramref name="size" /> is greater than the logical address space.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c3983-406">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-406">Access to the memory-mapped file is unauthorized.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c3983-407">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-407">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="c3983-408">뷰를 시작할 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-408">The byte at which to start the view.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="c3983-409">뷰의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-409">The size of the view.</span>
          </span>
          <span data-ttu-id="c3983-410">
            <c>오프셋</c>에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-410">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="c3983-411">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-411">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-412">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-412">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-413">지정된 오프셋, 크기 및 액세스 제한을 가지고 메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-413">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-414">임의로 액세스 가능한 메모리 블록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-414">A randomly accessible block of memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-415">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-415">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="c3983-416">메모리 매핑된 파일의 전체 보기를 만들려면 0 (영)을 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-416">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="c3983-417">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-417">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="c3983-418">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-418">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-419">
            <paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-419">
              <paramref name="offset" /> or <paramref name="size" /> is a negative value.</span>
          </span>
          <span data-ttu-id="c3983-420">-또는-  <paramref name="size" />가 논리 주소 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-420">-or-  <paramref name="size" /> is greater than the logical address space.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c3983-421">
            <paramref name="access" />는 메모리 매핑된 파일에 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-421">
              <paramref name="access" /> is invalid for the memory-mapped file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c3983-422">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-422">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c3983-423">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-423">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="c3983-424">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-424">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewStream">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3983-425">메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-425">Creates a stream that maps to a view of the memory-mapped file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream () As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3983-426">메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-426">Creates a stream that maps to a view of the memory-mapped file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-427">메모리 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-427">A stream of memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-428">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-428">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3983-429">다음 예제에서는 스트림을 만들고는 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-429">The following example creates a stream and writes a value to it.</span></span> <span data-ttu-id="c3983-430">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c3983-430">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> method.</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#2)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c3983-431">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-431">Access to the memory-mapped file is unauthorized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="c3983-432">뷰를 시작할 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-432">The byte at which to start the view.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="c3983-433">뷰의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-433">The size of the view.</span>
          </span>
          <span data-ttu-id="c3983-434">
            <c>오프셋</c>에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-434">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-435">지정된 오프셋과 크기를 가지고 메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-435">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-436">지정된 오프셋과 크기를 가진 메모리 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-436">A stream of memory that has the specified offset and size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-437">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-437">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="c3983-438">메모리 매핑된 파일의 전체 보기를 만들려면 0 (영)을 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-438">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="c3983-439">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-439">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="c3983-440">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-440">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-441">
            <paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-441">
              <paramref name="offset" /> or <paramref name="size" /> is a negative value.</span>
          </span>
          <span data-ttu-id="c3983-442">-또는-  <paramref name="size" />가 논리 주소 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-442">-or-  <paramref name="size" /> is greater than the logical address space.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c3983-443">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-443">Access to the memory-mapped file is unauthorized.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c3983-444">
            <paramref name="size" />가 총 가상 메모리보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-444">
              <paramref name="size" /> is greater than the total virtual memory.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="c3983-445">뷰를 시작할 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-445">The byte at which to start the view.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="c3983-446">뷰의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-446">The size of the view.</span>
          </span>
          <span data-ttu-id="c3983-447">
            <c>오프셋</c>에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-447">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="c3983-448">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-448">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="c3983-449">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-449">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-450">지정된 오프셋, 크기 및 액세스 형식을 가지고 메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-450">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-451">지정된 특성을 가진 메모리 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-451">A stream of memory that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-452">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-452">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="c3983-453">메모리 매핑된 파일의 전체 보기를 만들려면 0 (영)을 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-453">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="c3983-454">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-454">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="c3983-455">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-455">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-456">
            <paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-456">
              <paramref name="offset" /> or <paramref name="size" /> is a negative value.</span>
          </span>
          <span data-ttu-id="c3983-457">-또는-  <paramref name="size" />가 논리 주소 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-457">-or-  <paramref name="size" /> is greater than the logical address space.</span>
          </span>
          <span data-ttu-id="c3983-458">-또는-  <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-458">-or-  <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c3983-459">
            <paramref name="access" />는 메모리 매핑된 파일에 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-459">
              <paramref name="access" /> is invalid for the memory-mapped file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="c3983-460">
            <paramref name="size" />가 총 가상 메모리보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-460">
              <paramref name="size" /> is greater than the total virtual memory.</span>
          </span>
          <span data-ttu-id="c3983-461">-또는-  <paramref name="access" />는 메모리 매핑된 파일에 유효하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-461">-or-  <paramref name="access" /> is invalid for the memory-mapped file.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c3983-462">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-462">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="c3983-463">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-463">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3983-464">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-464">Releases the resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3983-465">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-465">Releases all resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c3983-466">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-466">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-467">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-467">Releases the unmanaged resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As MemoryMappedFileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ GetAccessControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFileSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c3983-468">메모리 매핑된 파일 리소스에 대한 액세스 제어를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-468">Gets the access control to the memory-mapped file resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-469">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-469">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c3983-470">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-470">An underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c3983-471">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-471">An underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="c3983-472">메모리 매핑된 파일이 닫혀 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-472">The memory-mapped file is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="c3983-473">현재 플랫폼은 Windows 98 또는 이전 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-473">The current platform is Windows 98 or earlier.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c3983-474">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-474">An underlying call to set security information failed.</span>
          </span>
          <span data-ttu-id="c3983-475">-또는-  메모리 매핑된 파일이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />로만 열렸습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-475">-or-  The memory-mapped file was opened as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c3983-476">시스템 메모리에서 명명된 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-476">Opens an existing named memory-mapped file in system memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="c3983-477">메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-477">The name of the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-478">시스템 메모리에서 지정된 이름을 가진 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-478">Opens an existing memory-mapped file that has the specified name in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-479">지정된 이름을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-479">A memory-mapped file that has the specified name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c3983-480">메모리 매핑된 파일 중 하나는 지속형된 메모리 매핑된 파일 (디스크의 파일에 연결) 될 수 있습니다 또는 비지속형 합니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-480">The memory-mapped file can be either a persisted memory-mapped file (associated with a file on disk) or non-persisted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c3983-481">**지속형된 메모리 매핑된 파일 열기**</span><span class="sxs-lookup"><span data-stu-id="c3983-481">**Opening a Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="c3983-482">다음 예에서는 라는 메모리 매핑된 파일을 엽니다 `ImgA` 이미 디스크에 있는 파일 로부터 만들어진 (예제에 나와 있는 것 처럼는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> 메서드).</span><span class="sxs-lookup"><span data-stu-id="c3983-482">The following example opens a memory-mapped file named `ImgA` that has already been created from a file on disk (as shown in the example for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> method).</span></span>  
  
 [!code-csharp[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/cs/program.cs#1)]
 [!code-vb[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/vb/program.vb#1)]  
  
 <span data-ttu-id="c3983-483">**비지속형 메모리 매핑된 파일 열기**</span><span class="sxs-lookup"><span data-stu-id="c3983-483">**Opening a Non-Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="c3983-484">다음 예제에서는 프로세스 간 통신에 사용 되는 메모리 매핑된 파일을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="c3983-484">The following example opens a memory-mapped file used for inter-process communication.</span></span> <span data-ttu-id="c3983-485">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c3983-485">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-486">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-486">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-487">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-487">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="c3983-488">
            <paramref name="mapName" />에 지정된 파일이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-488">The file specified for <paramref name="mapName" /> does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="c3983-489">열려는 메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-489">The name of the memory-mapped file to open.</span>
          </span>
        </param>
        <param name="desiredAccessRights">
          <span data-ttu-id="c3983-490">메모리 매핑된 파일에 적용할 액세스 권한을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-490">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-491">시스템 메모리에서 지정된 이름과 액세스 권한을 가진 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-491">Opens an existing memory-mapped file that has the specified name and access rights in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-492">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-492">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-493">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-493">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-494">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-494">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-495">
            <paramref name="desiredAccessRights" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-495">
              <paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="c3983-496">
            <paramref name="mapName" />에 지정된 파일이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-496">The file specified for <paramref name="mapName" /> does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="c3983-497">열려는 메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-497">The name of the memory-mapped file to open.</span>
          </span>
        </param>
        <param name="desiredAccessRights">
          <span data-ttu-id="c3983-498">메모리 매핑된 파일에 적용할 액세스 권한을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-498">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="c3983-499">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-499">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="c3983-500">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-500">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-501">시스템 메모리에서 지정된 이름, 액세스 권한 및 상속 가능성을 가진 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-501">Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c3983-502">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-502">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-503">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-503">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c3983-504">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-504">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c3983-505">
            <paramref name="desiredAccessRights" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-505">
              <paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span>
          </span>
          <span data-ttu-id="c3983-506">-또는-  <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-506">-or-  <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c3983-507">요청된 액세스는 메모리 매핑된 파일에 유효하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-507">The requested access is invalid for the memory-mapped file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="c3983-508">
            <paramref name="mapName" />에 지정된 파일이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-508">The file specified for <paramref name="mapName" /> does not exist.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c3983-509">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-509">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="c3983-510">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-510">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SafeMemoryMappedFileHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeMemoryMappedFileHandle As SafeMemoryMappedFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ SafeMemoryMappedFileHandle { Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c3983-511">메모리 매핑된 파일의 파일 핸들을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-511">Gets the file handle of a memory-mapped file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c3983-512">메모리 매핑된 파일의 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-512">The handle to the memory-mapped file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c3983-513">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-513">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="c3983-514">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-514">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
      </Parameters>
      <Docs>
        <param name="memoryMappedFileSecurity">
          <span data-ttu-id="c3983-515">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-515">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c3983-516">메모리 매핑된 파일 리소스에 대한 액세스 제어를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-516">Sets the access control to the memory-mapped file resource.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c3983-517">
            <paramref name="memoryMappedFileSecurity" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-517">
              <paramref name="memoryMappedFileSecurity" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c3983-518">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-518">An underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c3983-519">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-519">An underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="c3983-520">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c3983-520">An underlying call to set security information failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>