<Type Name="MemoryMappedFile" FullName="System.IO.MemoryMappedFiles.MemoryMappedFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="095760ec996b3eb3046cc228e6f3e33dbaf2b4a3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MemoryMappedFile : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryMappedFile extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryMappedFile&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryMappedFile : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="9bed8-101">메모리 매핑된 파일을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9bed8-101">Represents a memory-mapped file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-102">메모리 매핑된 파일을 응용 프로그램의 논리 주소 공간에는 파일의 내용을 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-102">A memory-mapped file maps the contents of a file to an application’s logical address space.</span></span> <span data-ttu-id="9bed8-103">메모리 매핑된 파일을 사용 하면 메모리를 동시에 관리할 수 있습니다. 그리고 검색할 필요 없이 파일에 대 한 완전 한 임의 액세스를 허용 하기 때문에 매우 큰 파일을 사용 하는 프로그래머가 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-103">Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking.</span></span> <span data-ttu-id="9bed8-104">여러 프로세스에서 메모리 매핑된 파일을 공유할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-104">Memory-mapped files can also be shared across multiple processes.</span></span>  
  
 <span data-ttu-id="9bed8-105"><xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> 메서드는 지정된 된 경로에서 메모리 매핑된 파일 만들기 또는 <xref:System.IO.FileStream> 디스크에 기존 파일의 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-105">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> methods create a memory-mapped file from a specified path or a <xref:System.IO.FileStream> of an existing file on disk.</span></span> <span data-ttu-id="9bed8-106">변경 내용이 경우 디스크에 자동으로 전파 되 매핑된 파일이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-106">Changes are automatically propagated to disk when the file is unmapped.</span></span>  
  
 <span data-ttu-id="9bed8-107"><xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> 메서드; 디스크에 기존 파일에 매핑되지 않은 메모리 매핑된 파일을 만들고 (IPC) 프로세스 간 통신에 대 한 공유 메모리를 만들기에 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-107">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).</span></span>  
  
 <span data-ttu-id="9bed8-108">메모리 매핑된 파일 이름과 연관 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-108">A memory-mapped file is associated with a name.</span></span>  
  
 <span data-ttu-id="9bed8-109">일부 파일의 뷰를 포함 하는 메모리 매핑된 파일의 여러 뷰를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-109">You can create multiple views of the memory-mapped file, including views of parts of the file.</span></span> <span data-ttu-id="9bed8-110">둘 이상의 주소 동시 메모리를 만들 파일의 한 부분을 매핑할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-110">You can map the same part of a file to more than one address to create concurrent memory.</span></span> <span data-ttu-id="9bed8-111">두 보기를 동시에 유지하려면 동일한 메모리 매핑된 파일에서 보기를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-111">For two views to remain concurrent, they have to be created from the same memory-mapped file.</span></span> <span data-ttu-id="9bed8-112">두 가지 보기를 사용 하 여 동일한 파일의 두 파일 매핑 만들기 동시성을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-112">Creating two file mappings of the same file with two views does not provide concurrency.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bed8-113">다음 예제에서는 매우 큰 파일의 일부에 대한 메모리 매핑된 보기를 만들고 보기의 일부를 조작합니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-113">The following example creates a memory-mapped view of a part of an extremely large file and manipulates a portion of it.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateFromFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9bed8-114">기존 파일에서 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-114">Creates a memory-mapped file from an existing file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9bed8-115">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-115">The path to file to map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-116">디스크의 파일에서 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-116">Creates a memory-mapped file from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-117">메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-117">A memory-mapped file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9bed8-118">사용 하 여 다음 예제는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> 메모리 매핑된 파일을 만드는 메서드를 다음 매우 큰 파일의 일부분에 메모리 매핑된 뷰를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-118">The following example uses the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> method to create a memory-mapped file, and then creates a memory-mapped view to a portion of an extremely large file.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-119">
            <paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-119">
              <paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span>
          </span>
          <span data-ttu-id="9bed8-120">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-120">-or-</span>
          </span>
          <span data-ttu-id="9bed8-121">
            <paramref name="path" />는 잘못된 장치로 간주합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-121">
              <paramref name="path" /> refers to an invalid device.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-122">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-122">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9bed8-123">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-123">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9bed8-124">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-124">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
          <span data-ttu-id="9bed8-125">Windows에서 경로에 248자 미만이 포함되어야 하며 파일 이름은 260자 미만을 포함해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-125">In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9bed8-126">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-126">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9bed8-127">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-127">The path to file to map.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="9bed8-128">액세스 모드는 <see cref="F:System.IO.FileMode.Open" />이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-128">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-129">디스크의 파일에서 지정된 액세스 모드를 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-129">Creates a memory-mapped file that has the specified access mode from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-130">지정된 액세스 모드를 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-130">A memory-mapped file that has the specified access mode.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-131">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-131">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="9bed8-132">만 사용할 수는 <xref:System.IO.FileMode.Open> 디스크에 있는 소스 파일에서 메모리 매핑된 파일을 만들려면 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-132">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-133">
            <paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-133">
              <paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span>
          </span>
          <span data-ttu-id="9bed8-134">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-134">-or-</span>
          </span>
          <span data-ttu-id="9bed8-135">
            <paramref name="path" />는 잘못된 장치로 간주합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-135">
              <paramref name="path" /> refers to an invalid device.</span>
          </span>
          <span data-ttu-id="9bed8-136">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-136">-or-</span>
          </span>
          <span data-ttu-id="9bed8-137">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Append" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-137">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-138">
            <paramref name="path" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-138">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9bed8-139">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" /> 또는 <see cref="F:System.IO.FileMode.Truncate" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-139">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span>
          </span>
          <span data-ttu-id="9bed8-140">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-140">-or-</span>
          </span>
          <span data-ttu-id="9bed8-141">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.OpenOrCreate" />이고 디스크에 파일이 존재하지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-141">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span>
          </span>
          <span data-ttu-id="9bed8-142">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-142">-or-</span>
          </span>
          <span data-ttu-id="9bed8-143">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-143">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9bed8-144">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-144">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
          <span data-ttu-id="9bed8-145">Windows에서 경로에 248자 미만이 포함되어야 하며 파일 이름은 260자 미만을 포함해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-145">In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9bed8-146">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-146">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9bed8-147">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-147">The path to the file to map.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="9bed8-148">액세스 모드는 <see cref="F:System.IO.FileMode.Open" />이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-148">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="9bed8-149">메모리 매핑된 파일에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-149">A name to assign to the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-150">디스크의 파일에서 지정된 액세스 모드와 이름을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-150">Creates a memory-mapped file that has the specified access mode and name from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-151">지정된 이름과 액세스 모드를 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-151">A memory-mapped file that has the specified name and access mode.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-152">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-152">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="9bed8-153">만 사용할 수는 <xref:System.IO.FileMode.Open> 디스크에 있는 소스 파일에서 메모리 매핑된 파일을 만들려면 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-153">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-154">
            <paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-154">
              <paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span>
          </span>
          <span data-ttu-id="9bed8-155">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-155">-or-</span>
          </span>
          <span data-ttu-id="9bed8-156">
            <paramref name="path" />는 잘못된 장치로 간주합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-156">
              <paramref name="path" /> refers to an invalid device.</span>
          </span>
          <span data-ttu-id="9bed8-157">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-157">-or-</span>
          </span>
          <span data-ttu-id="9bed8-158">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-158">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="9bed8-159">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-159">-or-</span>
          </span>
          <span data-ttu-id="9bed8-160">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Append" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-160">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-161">
            <paramref name="path" /> 또는 <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-161">
              <paramref name="path" /> or <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9bed8-162">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" /> 또는 <see cref="F:System.IO.FileMode.Truncate" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-162">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span>
          </span>
          <span data-ttu-id="9bed8-163">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-163">-or-</span>
          </span>
          <span data-ttu-id="9bed8-164">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.OpenOrCreate" />이고 디스크에 파일이 존재하지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-164">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span>
          </span>
          <span data-ttu-id="9bed8-165">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-165">-or-</span>
          </span>
          <span data-ttu-id="9bed8-166">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-166">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9bed8-167">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-167">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
          <span data-ttu-id="9bed8-168">Windows에서 경로에 248자 미만이 포함되어야 하며 파일 이름은 260자 미만을 포함해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-168">In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9bed8-169">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-169">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9bed8-170">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-170">The path to the file to map.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="9bed8-171">액세스 모드는 <see cref="T:System.IO.FileMode" />를 제외하고는 <see cref="F:System.IO.FileMode.Append" /> 열거형이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-171">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="9bed8-172">메모리 매핑된 파일에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-172">A name to assign to the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="9bed8-173">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-173">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-174">용량을 디스크에 있는 파일의 크기로 설정하려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-174">Specify 0 to set the capacity to the size of the file on disk.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-175">디스크의 파일에서 지정된 액세스 모드, 이름 및 용량을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-175">Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-176">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-176">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-177">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-177">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="9bed8-178">경우 `capacity` 데이터가 없는 메모리 매핑된 파일에 기록 되는 경우에 지정된 된 용량에 맞게 디스크에 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-178">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="9bed8-179">발생 하지 않도록 하려면이 0 (영)은 내부적으로 설정 되어 있는 기본 용량에 대 한 지정 `capacity` 디스크에 있는 파일의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-179">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-180">
            <paramref name="path" />가 길이가 빈 문자열이거나 공백만 포함하거나 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 메서드에 정의된 하나 이상의 잘못된 문자를 포함하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-180">
              <paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span>
          </span>
          <span data-ttu-id="9bed8-181">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-181">-or-</span>
          </span>
          <span data-ttu-id="9bed8-182">
            <paramref name="path" />는 잘못된 장치로 간주합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-182">
              <paramref name="path" /> refers to an invalid device.</span>
          </span>
          <span data-ttu-id="9bed8-183">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-183">-or-</span>
          </span>
          <span data-ttu-id="9bed8-184">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-184">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="9bed8-185">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-185">-or-</span>
          </span>
          <span data-ttu-id="9bed8-186">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Append" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-186">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-187">
            <paramref name="path" /> 또는 <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-187">
              <paramref name="path" /> or <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-188">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-188">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="9bed8-189">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-189">-or-</span>
          </span>
          <span data-ttu-id="9bed8-190">
            <paramref name="capacity" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-190">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="9bed8-191">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-191">-or-</span>
          </span>
          <span data-ttu-id="9bed8-192">
            <paramref name="capacity" />가 파일 크기보다 작습니다(0은 아님).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-192">
              <paramref name="capacity" /> is less than the file size (but not zero).</span>
          </span>
          <span data-ttu-id="9bed8-193">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-193">-or-</span>
          </span>
          <span data-ttu-id="9bed8-194">
            <paramref name="capacity" />가 0 이고 디스크의 파일 크기도 0 입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-194">
              <paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9bed8-195">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-195">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9bed8-196">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-196">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
          <span data-ttu-id="9bed8-197">Windows에서 경로에 248자 미만이 포함되어야 하며 파일 이름은 260자 미만을 포함해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-197">In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9bed8-198">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-198">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9bed8-199">매핑할 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-199">The path to the file to map.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="9bed8-200">액세스 모드는 <see cref="T:System.IO.FileMode" />를 제외하고는 <see cref="F:System.IO.FileMode.Append" /> 열거형이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-200">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="9bed8-201">메모리 매핑된 파일에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-201">A name to assign to the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="9bed8-202">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-202">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-203">용량을 디스크에 있는 파일의 크기로 설정하려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-203">Specify 0 to set the capacity to the size of the file on disk.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9bed8-204">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-204">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-205">디스크의 파일에서 지정된 액세스 모드, 이름, 용량 및 액세스 형식을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-205">Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-206">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-206">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-207">`mode` 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-207">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="9bed8-208">경우 `capacity` 데이터가 없는 메모리 매핑된 파일에 기록 되는 경우에 지정된 된 용량에 맞게 디스크에 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-208">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="9bed8-209">발생 하지 않도록 하려면이 0 (영)은 내부적으로 설정 되어 있는 기본 용량에 대 한 지정 `capacity` 디스크에 있는 파일의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-209">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-210">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-210">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="9bed8-211">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-211">-or-</span>
          </span>
          <span data-ttu-id="9bed8-212">
            <paramref name="access" />이 허용되는 값이 아닌 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-212">
              <paramref name="access" /> is not an allowed value.</span>
          </span>
          <span data-ttu-id="9bed8-213">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-213">-or-</span>
          </span>
          <span data-ttu-id="9bed8-214">
            <paramref name="path" />는 빈 파일을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-214">
              <paramref name="path" /> specifies an empty file.</span>
          </span>
          <span data-ttu-id="9bed8-215">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-215">-or-</span>
          </span>
          <span data-ttu-id="9bed8-216">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />로 지정되고 용량이 <paramref name="path" />에 지정된 파일 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-216">
              <paramref name="access" /> is specified as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and capacity is greater than the size of the file indicated by <paramref name="path" />.</span>
          </span>
          <span data-ttu-id="9bed8-217">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-217">-or-</span>
          </span>
          <span data-ttu-id="9bed8-218">
            <paramref name="mode" />가 <see cref="F:System.IO.FileMode.Append" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-218">
              <paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-219">
            <paramref name="path" /> 또는 <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-219">
              <paramref name="path" /> or <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-220">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-220">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="9bed8-221">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-221">-or-</span>
          </span>
          <span data-ttu-id="9bed8-222">
            <paramref name="capacity" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-222">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="9bed8-223">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-223">-or-</span>
          </span>
          <span data-ttu-id="9bed8-224">
            <paramref name="capacity" />가 파일 크기보다 작습니다(0은 아님).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-224">
              <paramref name="capacity" /> is less than the file size (but not zero).</span>
          </span>
          <span data-ttu-id="9bed8-225">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-225">-or-</span>
          </span>
          <span data-ttu-id="9bed8-226">
            <paramref name="capacity" />가 0 이고 디스크의 파일 크기도 0 입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-226">
              <paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span>
          </span>
          <span data-ttu-id="9bed8-227">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-227">-or-</span>
          </span>
          <span data-ttu-id="9bed8-228">
            <paramref name="access" />는 정의된 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-228">
              <paramref name="access" /> is not a defined <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> value.</span>
          </span>
          <span data-ttu-id="9bed8-229">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-229">-or-</span>
          </span>
          <span data-ttu-id="9bed8-230">
            <paramref name="path" />에 나타난 파일 크기가 <paramref name="capacity" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-230">The size of the file indicated by <paramref name="path" /> is greater than <paramref name="capacity" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9bed8-231">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-231">-or-</span>
          </span>
          <span data-ttu-id="9bed8-232">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-232">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="9bed8-233">
            <paramref name="path" />가 운영 체제에 정의된 최대 길이를 초과하는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-233">
              <paramref name="path" /> exceeds the maximum length defined by the operating system.</span>
          </span>
          <span data-ttu-id="9bed8-234">Windows에서 경로에 248자 미만이 포함되어야 하며 파일 이름은 260자 미만을 포함해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-234">In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9bed8-235">호출자에게 파일에 필요한 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-235">The caller does not have the required permissions for the file.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9bed8-236">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-236">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="9bed8-237">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-237">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileStream">
          <span data-ttu-id="9bed8-238">기존 파일의 파일 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-238">The file stream of the existing file.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="9bed8-239">메모리 매핑된 파일에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-239">A name to assign to the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="9bed8-240">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-240">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-241">용량을 <c>파일 스트림</c>의 크기로 설정하려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-241">Specify 0 to set the capacity to the size of <c>filestream</c>.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9bed8-242">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-242">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-243">이 매개 변수는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />로 설정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-243">This parameter can’t be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="9bed8-244">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-244">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="9bed8-245">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-245">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="9bed8-246">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />이 삭제되면 소스 파일 스트림을 닫을지 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-246">A value that indicates whether to close the source file stream when the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is disposed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-247">지정된 액세스 모드, 이름, 상속 및 용량을 사용하여 기존 파일에서 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-247">Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-248">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-248">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-249">
            <paramref name="mapName" />이 <see langword="null" /> 또는 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-249">
              <paramref name="mapName" /> is <see langword="null" /> or an empty string.</span>
          </span>
          <span data-ttu-id="9bed8-250">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-250">-or-</span>
          </span>
          <span data-ttu-id="9bed8-251">
            <paramref name="capacity" /> 및 파일 길이가 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-251">
              <paramref name="capacity" /> and the length of the file are zero.</span>
          </span>
          <span data-ttu-id="9bed8-252">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-252">-or-</span>
          </span>
          <span data-ttu-id="9bed8-253">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값으로 설정되며, 허용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-253">
              <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span>
          </span>
          <span data-ttu-id="9bed8-254">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-254">-or-</span>
          </span>
          <span data-ttu-id="9bed8-255">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />로 설정되고 <paramref name="capacity" />는 <see langword="filestream" />의 길이 보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-255">
              <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and <paramref name="capacity" /> is larger than the length of <see langword="filestream" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-256">
            <paramref name="fileStream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-256">
              <paramref name="fileStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-257">
            <paramref name="capacity" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-257">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="9bed8-258">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-258">-or-</span>
          </span>
          <span data-ttu-id="9bed8-259">
            <paramref name="capacity" />가 파일 크기보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-259">
              <paramref name="capacity" /> is less than the file size.</span>
          </span>
          <span data-ttu-id="9bed8-260">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-260">-or-</span>
          </span>
          <span data-ttu-id="9bed8-261">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-261">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="9bed8-262">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-262">-or-</span>
          </span>
          <span data-ttu-id="9bed8-263">
            <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-263">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileStream">
          <span data-ttu-id="9bed8-264">매핑할 파일에 대한 <c>파일 스트림</c>입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-264">The <c>fileStream</c> to the file to map.</span>
          </span>
        </param>
        <param name="mapName">
          <span data-ttu-id="9bed8-265">메모리 매핑된 파일에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-265">A name to assign to the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="9bed8-266">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-266">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-267">용량을 디스크에 있는 파일의 크기로 설정하려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-267">Specify 0 to set the capacity to the size of the file on disk.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9bed8-268">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-268">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-269">이 매개 변수는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />로 설정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-269">This parameter can’t be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span>
          </span>
        </param>
        <param name="memoryMappedFileSecurity">
          <span data-ttu-id="9bed8-270">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-270">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
          <span data-ttu-id="9bed8-271">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-271">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="9bed8-272">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-272">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="9bed8-273">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-273">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <param name="leaveOpen">
          <span data-ttu-id="9bed8-274">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />이 닫힌 후 <c>파일 스트림</c>을 삭제하지 않으려면 <see langword="true" />이고 <c>파일 스트림</c>을 삭제하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-274">
              <see langword="true" /> to not dispose <c>fileStream</c> after the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is closed; <see langword="false" /> to dispose <c>fileStream</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-275">디스크의 파일에서 지정된 이름, 용량, 액세스 형식, 보안 권한, 상속 가능성 및 삭제 요구 사항을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-275">Creates a memory-mapped file that has the specified name, capacity, access type, security permissions, inheritability, and disposal requirement from a file on disk.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-276">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-276">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-277">경우 `capacity` 데이터가 없는 메모리 매핑된 파일에 기록 되는 경우에 지정된 된 용량에 맞게 디스크에 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-277">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="9bed8-278">발생 하지 않도록 하려면이 0 (영)은 내부적으로 설정 되어 있는 기본 용량에 대 한 지정 `capacity` 디스크에 있는 파일의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-278">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-279">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-279">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="9bed8-280">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-280">-or-</span>
          </span>
          <span data-ttu-id="9bed8-281">
            <paramref name="capacity" /> 및 파일 길이가 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-281">
              <paramref name="capacity" /> and the length of the file are zero.</span>
          </span>
          <span data-ttu-id="9bed8-282">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-282">-or-</span>
          </span>
          <span data-ttu-id="9bed8-283">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형으로 설정되며, 허용되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-283">
              <paramref name="access" /> is set to the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-284">
            <paramref name="fileStream" /> 또는 <paramref name="mapname" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-284">
              <paramref name="fileStream" /> or <paramref name="mapname" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-285">
            <paramref name="capacity" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-285">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
          <span data-ttu-id="9bed8-286">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-286">-or-</span>
          </span>
          <span data-ttu-id="9bed8-287">
            <paramref name="capacity" />가 파일 크기보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-287">
              <paramref name="capacity" /> is less than the file size.</span>
          </span>
          <span data-ttu-id="9bed8-288">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-288">-or-</span>
          </span>
          <span data-ttu-id="9bed8-289">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-289">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="9bed8-290">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-290">-or-</span>
          </span>
          <span data-ttu-id="9bed8-291">
            <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-291">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9bed8-292">
            <paramref name="fileStream" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-292">
              <paramref name="fileStream" /> was closed.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9bed8-293">
            <paramref name="access" />의 액세스가 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> 또는 <see cref="F:System.IO.FileAccess.Read" />로 설정된 경우 <paramref name="fileStream" />는 <see cref="F:System.IO.FileAccess.Write" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-293">
              <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> when <paramref name="fileStream" />'s access is set to <see cref="F:System.IO.FileAccess.Read" /> or <see cref="F:System.IO.FileAccess.Write" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9bed8-294">
            <paramref name="mapName" />이(가) 이미 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-294">
              <paramref name="mapName" /> already exists.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9bed8-295">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-295">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="9bed8-296">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-296">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNew">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9bed8-297">시스템 메모리에 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-297">Creates a memory-mapped file in system memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="9bed8-298">메모리 매핑된 파일에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-298">A name to assign to the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="9bed8-299">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-299">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-300">시스템 메모리에서 지정된 용량을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-300">Creates a memory-mapped file that has the specified capacity in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-301">지정된 이름과 용량을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-301">A memory-mapped file that has the specified name and capacity.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-302">지속 되지 않는 메모리 매핑된 파일을 만들려면이 메서드를 사용 하 여 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-302">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bed8-303">다음 예제에서는 작성 하는 세 가지 별도 프로세스 (콘솔 응용 프로그램)로 이루어져 `Boolean` 메모리 매핑된 파일에는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-303">The following example is composed of three separate processes (console applications) that write `Boolean` values to a memory-mapped file.</span></span> <span data-ttu-id="9bed8-304">다음 작업 시퀀스가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-304">The following sequence of actions occur:</span></span>  
  
1.  <span data-ttu-id="9bed8-305">프로세스 A 메모리 매핑된 파일을 만들고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-305">Process A creates the memory-mapped file and writes a value to it.</span></span>  
  
2.  <span data-ttu-id="9bed8-306">B 프로세스 메모리 매핑된 파일 열리고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-306">Process B opens the memory-mapped file and writes a value to it.</span></span>  
  
3.  <span data-ttu-id="9bed8-307">C 프로세스 메모리 매핑된 파일 열리고 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-307">Process C opens the memory-mapped file and writes a value to it.</span></span>  
  
4.  <span data-ttu-id="9bed8-308">프로세스 A를 읽고 메모리 매핑된 파일의 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-308">Process A reads and displays the values from the memory-mapped file.</span></span>  
  
5.  <span data-ttu-id="9bed8-309">메모리 매핑된 파일 프로세스는 완료 되 면 파일이 가비지 수집에 의해 즉시 회수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-309">After Process A is finished with the memory-mapped file, the file is immediately reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="9bed8-310">이 예제를 실행하려면 다음을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-310">To run this example, do the following:</span></span>  
  
1.  <span data-ttu-id="9bed8-311">응용 프로그램을 컴파일하고 세 개의 명령 창을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-311">Compile the applications and open three Command windows.</span></span>  
  
2.  <span data-ttu-id="9bed8-312">첫 번째 명령 창에서 프로세스 A를 실행</span><span class="sxs-lookup"><span data-stu-id="9bed8-312">In the first Command window, run Process A.</span></span>  
  
3.  <span data-ttu-id="9bed8-313">두 번째 명령 창에서 2. 프로세스를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-313">In the second Command window, run Process B.</span></span>  
  
4.  <span data-ttu-id="9bed8-314">프로세스 A 돌아가서 ENTER 키를 누릅니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-314">Return to Process A and press ENTER.</span></span>  
  
5.  <span data-ttu-id="9bed8-315">세 번째 명령 창에서 3. 프로세스를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-315">In the third Command window, run Process C.</span></span>  
  
6.  <span data-ttu-id="9bed8-316">프로세스 A 돌아가서 ENTER 키를 누릅니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-316">Return to Process A and press ENTER.</span></span>  
  
 <span data-ttu-id="9bed8-317">프로세스의 출력은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-317">The output of Process A is as follows:</span></span>  
  
```  
Start Process B and press ENTER to continue.  
Start Process C and press ENTER to continue.  
Process A says: True  
Process B says: False  
Process C says: True  
```  
  
 <span data-ttu-id="9bed8-318">**프로세스 A**</span><span class="sxs-lookup"><span data-stu-id="9bed8-318">**Process A**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#1)]  
  
 <span data-ttu-id="9bed8-319">**프로세스 B**</span><span class="sxs-lookup"><span data-stu-id="9bed8-319">**Process B**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/vb/program.vb#1)]  
  
 <span data-ttu-id="9bed8-320">**프로세스 C**</span><span class="sxs-lookup"><span data-stu-id="9bed8-320">**Process C**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-321">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-321">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-322">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-322">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-323">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-323">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="9bed8-324">메모리 매핑된 파일에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-324">A name to assign to the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="9bed8-325">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-325">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9bed8-326">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-326">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-327">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-327">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-328">시스템 메모리에서 지정된 용량과 액세스 형식을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-328">Creates a memory-mapped file that has the specified capacity and access type in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-329">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-329">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-330">지속 되지 않는 메모리 매핑된 파일을 만들려면이 메서드를 사용 하 여 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-330">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-331">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-331">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="9bed8-332">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-332">-or-</span>
          </span>
          <span data-ttu-id="9bed8-333">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-333">
              <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-334">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-334">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-335">
            <paramref name="capacity" />가 0보다 작거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-335">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="9bed8-336">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-336">-or-</span>
          </span>
          <span data-ttu-id="9bed8-337">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-337">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="9bed8-338">메모리 매핑된 파일에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-338">A name to assign to the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="9bed8-339">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-339">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9bed8-340">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-340">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-341">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-341">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9bed8-342">메모리 매핑된 파일에 대한 메모리 할당 옵션을 지정하는 열거형 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-342">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="9bed8-343">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-343">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="9bed8-344">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-344">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-345">지정된 이름, 용량, 액세스 형식, 메모리 할당 옵션 및 상속을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-345">Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-346">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-346">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-347">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-347">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="9bed8-348">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-348">-or-</span>
          </span>
          <span data-ttu-id="9bed8-349">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-349">
              <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-350">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-350">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-351">
            <paramref name="capacity" />가 0보다 작거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-351">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="9bed8-352">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-352">-or-</span>
          </span>
          <span data-ttu-id="9bed8-353">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-353">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="9bed8-354">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-354">-or-</span>
          </span>
          <span data-ttu-id="9bed8-355">
            <paramref name="inheritability" />은 유효한 <see cref="T:System.IO.HandleInheritability" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-355">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="9bed8-356">메모리 매핑된 파일에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-356">A name to assign to the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="9bed8-357">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-357">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9bed8-358">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-358">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-359">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-359">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9bed8-360">메모리 매핑된 파일에 대한 메모리 할당 옵션을 지정하는 열거형 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-360">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span>
          </span>
        </param>
        <param name="memoryMappedFileSecurity">
          <span data-ttu-id="9bed8-361">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-361">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
          <span data-ttu-id="9bed8-362">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-362">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="9bed8-363">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-363">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="9bed8-364">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-364">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-365">시스템 메모리에서 지정된 용량, 액세스 형식, 메모리 할당, 보안 권한 및 상속 가능성을 가진 메모리 매핑된 파일을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-365">Creates a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-366">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-366">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-367">지속 되지 않는 메모리 매핑된 파일을 만들려면이 메서드를 사용 하 여 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-367">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-368">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-368">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="9bed8-369">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-369">-or-</span>
          </span>
          <span data-ttu-id="9bed8-370">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-370">
              <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-371">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-371">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-372">
            <paramref name="capacity" />가 0보다 작거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-372">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="9bed8-373">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-373">-or-</span>
          </span>
          <span data-ttu-id="9bed8-374">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-374">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="9bed8-375">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-375">-or-</span>
          </span>
          <span data-ttu-id="9bed8-376">
            <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-376">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9bed8-377">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-377">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="9bed8-378">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-378">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateOrOpen">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9bed8-379">시스템 메모리에 메모리 매핑된 파일을 만들거나 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-379">Creates or opens a memory-mapped file in system memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="9bed8-380">메모리 매핑된 파일에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-380">A name to assign to the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="9bed8-381">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-381">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-382">시스템 메모리에서 지정된 용량을 가진 메모리 매핑된 파일을 만들거나 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-382">Creates or opens a memory-mapped file that has the specified capacity in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-383">지정된 이름과 크기를 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-383">A memory-mapped file that has the specified name and size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-384">이 메서드를 사용 하 여 만들거나 지속 되지 않는 메모리 매핑된 파일을 열 수 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-384">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-385">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-385">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-386">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-386">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-387">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-387">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="9bed8-388">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-388">-or-</span>
          </span>
          <span data-ttu-id="9bed8-389">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-389">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="9bed8-390">메모리 매핑된 파일에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-390">A name to assign to the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="9bed8-391">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-391">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9bed8-392">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-392">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-393">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-393">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-394">시스템 메모리에서 지정된 용량과 액세스 형식을 가진 메모리 매핑된 파일을 만들거나 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-394">Creates or opens a memory-mapped file that has the specified capacity and access type in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-395">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-395">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-396">이 메서드를 사용 하 여 만들거나 지속 되지 않는 메모리 매핑된 파일을 열 수 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-396">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-397">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-397">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="9bed8-398">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-398">-or-</span>
          </span>
          <span data-ttu-id="9bed8-399">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-399">
              <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-400">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-400">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-401">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-401">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="9bed8-402">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-402">-or-</span>
          </span>
          <span data-ttu-id="9bed8-403">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-403">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="9bed8-404">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-404">-or-</span>
          </span>
          <span data-ttu-id="9bed8-405">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-405">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9bed8-406">운영 체제에서 파일에 지정된 액세스 권한을 거부했습니다. 예를 들어, 액세스 권한이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />로 설정되어 있지만 파일 또는 디렉터리가 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-406">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="9bed8-407">메모리 매핑된 파일에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-407">A name to assign to the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="9bed8-408">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-408">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9bed8-409">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-409">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-410">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-410">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9bed8-411">파일에 적용할 메모리 할당 옵션을 나타내는 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-411">A bitwise combination of values that indicate the memory allocation options to apply to the file.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="9bed8-412">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-412">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="9bed8-413">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-413">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-414">동일한 이름의 파일이 있는 경우 비어 있는 새 메모리 매핑된 파일을 만들거나 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-414">Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name.</span>
          </span>
          <span data-ttu-id="9bed8-415">기존 파일을 여는 경우 용량, 옵션 및 메모리 인수가 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-415">If opening an existing file, the capacity, options, and memory arguments will be ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-416">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-416">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-417">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-417">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="9bed8-418">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-418">-or-</span>
          </span>
          <span data-ttu-id="9bed8-419">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-419">
              <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-420">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-420">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-421">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-421">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="9bed8-422">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-422">-or-</span>
          </span>
          <span data-ttu-id="9bed8-423">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-423">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="9bed8-424">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-424">-or-</span>
          </span>
          <span data-ttu-id="9bed8-425">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-425">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="9bed8-426">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-426">-or-</span>
          </span>
          <span data-ttu-id="9bed8-427">
            <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-427">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9bed8-428">운영 체제에서 파일에 지정된 액세스 권한을 거부했습니다. 예를 들어, 액세스 권한이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />로 설정되어 있지만 파일 또는 디렉터리가 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-428">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="9bed8-429">메모리 매핑된 파일에 할당할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-429">A name to assign to the memory-mapped file.</span>
          </span>
        </param>
        <param name="capacity">
          <span data-ttu-id="9bed8-430">메모리 매핑된 파일에 할당할 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-430">The maximum size, in bytes, to allocate to the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9bed8-431">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-431">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-432">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-432">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9bed8-433">메모리 매핑된 파일에 대한 메모리 할당 옵션을 지정하는 열거형 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-433">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span>
          </span>
        </param>
        <param name="memoryMappedFileSecurity">
          <span data-ttu-id="9bed8-434">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-434">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
          <span data-ttu-id="9bed8-435">이 매개 변수는 <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-435">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="9bed8-436">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-436">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="9bed8-437">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-437">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-438">시스템 메모리에서 지정된 용량, 액세스 형식, 메모리 할당, 보안 권한 및 상속 가능성을 가진 메모리 매핑된 파일을 만들거나 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-438">Creates or opens a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-439">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-439">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-440">이 메서드를 사용 하 여 만들거나 지속 되지 않는 메모리 매핑된 파일을 열 수 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-440">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-441">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-441">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
          <span data-ttu-id="9bed8-442">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-442">-or-</span>
          </span>
          <span data-ttu-id="9bed8-443">
            <paramref name="access" />는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 열거형 값이 있는 쓰기 전용으로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-443">
              <paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-444">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-444">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-445">
            <paramref name="capacity" />는 논리 주소 공간의 크기보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-445">
              <paramref name="capacity" /> is greater than the size of the logical address space.</span>
          </span>
          <span data-ttu-id="9bed8-446">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-446">-or-</span>
          </span>
          <span data-ttu-id="9bed8-447">
            <paramref name="capacity" />가 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-447">
              <paramref name="capacity" /> is less than or equal to zero.</span>
          </span>
          <span data-ttu-id="9bed8-448">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-448">-or-</span>
          </span>
          <span data-ttu-id="9bed8-449">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-449">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
          <span data-ttu-id="9bed8-450">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-450">-or-</span>
          </span>
          <span data-ttu-id="9bed8-451">
            <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-451">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9bed8-452">운영 체제에서 파일에 지정된 <paramref name="access" /> 권한을 거부했습니다. 예를 들어, <paramref name="access" /> 권한이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 또는 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />로 설정되어 있지만 파일 또는 디렉터리가 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-452">The operating system denied the specified <paramref name="access" /> to the file; for example, <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9bed8-453">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-453">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="9bed8-454">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-454">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewAccessor">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9bed8-455">메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-455">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor () As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bed8-456">메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-456">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-457">임의로 액세스 가능한 메모리 블록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-457">A randomly accessible block of memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-458">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-458">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9bed8-459">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-459">Access to the memory-mapped file is unauthorized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="9bed8-460">뷰를 시작할 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-460">The byte at which to start the view.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="9bed8-461">뷰의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-461">The size of the view.</span>
          </span>
          <span data-ttu-id="9bed8-462">
            <c>오프셋</c>에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-462">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-463">지정된 오프셋과 크기를 가지고 메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-463">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset and size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-464">임의로 액세스 가능한 메모리 블록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-464">A randomly accessible block of memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-465">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-465">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="9bed8-466">메모리 매핑된 파일의 전체 보기를 만들려면 0 (영)을 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-466">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="9bed8-467">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-467">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="9bed8-468">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-468">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bed8-469">다음 예제에서는 메모리 매핑된 파일의 보기를 만들고 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-469">The following example creates a view of a memory-mapped file and edits it.</span></span> <span data-ttu-id="9bed8-470">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-470">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#2)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-471">
            <paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-471">
              <paramref name="offset" /> or <paramref name="size" /> is a negative value.</span>
          </span>
          <span data-ttu-id="9bed8-472">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-472">-or-</span>
          </span>
          <span data-ttu-id="9bed8-473">
            <paramref name="size" />가 논리 주소 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-473">
              <paramref name="size" /> is greater than the logical address space.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9bed8-474">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-474">Access to the memory-mapped file is unauthorized.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9bed8-475">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-475">An I/O error occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="9bed8-476">뷰를 시작할 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-476">The byte at which to start the view.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="9bed8-477">뷰의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-477">The size of the view.</span>
          </span>
          <span data-ttu-id="9bed8-478">
            <c>오프셋</c>에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-478">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9bed8-479">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-479">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-480">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-480">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-481">지정된 오프셋, 크기 및 액세스 제한을 가지고 메모리 매핑된 파일의 뷰에 매핑되는 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-481">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-482">임의로 액세스 가능한 메모리 블록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-482">A randomly accessible block of memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-483">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-483">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="9bed8-484">메모리 매핑된 파일의 전체 보기를 만들려면 0 (영)을 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-484">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="9bed8-485">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-485">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="9bed8-486">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-486">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-487">
            <paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-487">
              <paramref name="offset" /> or <paramref name="size" /> is a negative value.</span>
          </span>
          <span data-ttu-id="9bed8-488">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-488">-or-</span>
          </span>
          <span data-ttu-id="9bed8-489">
            <paramref name="size" />가 논리 주소 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-489">
              <paramref name="size" /> is greater than the logical address space.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9bed8-490">
            <paramref name="access" />는 메모리 매핑된 파일에 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-490">
              <paramref name="access" /> is invalid for the memory-mapped file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9bed8-491">I/O 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-491">An I/O error occurred.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9bed8-492">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-492">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="9bed8-493">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-493">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewStream">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9bed8-494">메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-494">Creates a stream that maps to a view of the memory-mapped file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream () As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bed8-495">메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-495">Creates a stream that maps to a view of the memory-mapped file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-496">메모리 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-496">A stream of memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-497">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-497">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bed8-498">다음 예제에서는 스트림을 만들고는 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-498">The following example creates a stream and writes a value to it.</span></span> <span data-ttu-id="9bed8-499">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9bed8-499">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> method.</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#2)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9bed8-500">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-500">Access to the memory-mapped file is unauthorized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="9bed8-501">뷰를 시작할 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-501">The byte at which to start the view.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="9bed8-502">뷰의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-502">The size of the view.</span>
          </span>
          <span data-ttu-id="9bed8-503">
            <c>오프셋</c>에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-503">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-504">지정된 오프셋과 크기를 가지고 메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-504">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-505">지정된 오프셋과 크기를 가진 메모리 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-505">A stream of memory that has the specified offset and size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-506">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-506">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="9bed8-507">메모리 매핑된 파일의 전체 보기를 만들려면 0 (영)을 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-507">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="9bed8-508">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-508">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="9bed8-509">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-509">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-510">
            <paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-510">
              <paramref name="offset" /> or <paramref name="size" /> is a negative value.</span>
          </span>
          <span data-ttu-id="9bed8-511">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-511">-or-</span>
          </span>
          <span data-ttu-id="9bed8-512">
            <paramref name="size" />가 논리 주소 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-512">
              <paramref name="size" /> is greater than the logical address space.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9bed8-513">메모리 매핑된 파일에 대한 액세스 권한이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-513">Access to the memory-mapped file is unauthorized.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9bed8-514">
            <paramref name="size" />가 총 가상 메모리보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-514">
              <paramref name="size" /> is greater than the total virtual memory.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="9bed8-515">뷰를 시작할 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-515">The byte at which to start the view.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="9bed8-516">뷰의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-516">The size of the view.</span>
          </span>
          <span data-ttu-id="9bed8-517">
            <c>오프셋</c>에서 시작하고 메모리 매핑된 파일의 끝에서 대략적으로 끝나는 뷰를 만들려면 0을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-517">Specify 0 (zero) to create a view that starts at <c>offset</c> and ends approximately at the end of the memory-mapped file.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="9bed8-518">메모리 매핑된 파일에 허용되는 액세스 형식을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-518">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span>
          </span>
          <span data-ttu-id="9bed8-519">기본값은 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-519">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-520">지정된 오프셋, 크기 및 액세스 형식을 가지고 메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-520">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-521">지정된 특성을 가진 메모리 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-521">A stream of memory that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-522">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-522">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="9bed8-523">메모리 매핑된 파일의 전체 보기를 만들려면 0 (영)을 지정 된 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-523">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="9bed8-524">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-524">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="9bed8-525">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-525">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-526">
            <paramref name="offset" /> 또는 <paramref name="size" />는 음수 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-526">
              <paramref name="offset" /> or <paramref name="size" /> is a negative value.</span>
          </span>
          <span data-ttu-id="9bed8-527">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-527">-or-</span>
          </span>
          <span data-ttu-id="9bed8-528">
            <paramref name="size" />가 논리 주소 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-528">
              <paramref name="size" /> is greater than the logical address space.</span>
          </span>
          <span data-ttu-id="9bed8-529">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-529">-or-</span>
          </span>
          <span data-ttu-id="9bed8-530">
            <paramref name="access" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-530">
              <paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9bed8-531">
            <paramref name="access" />는 메모리 매핑된 파일에 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-531">
              <paramref name="access" /> is invalid for the memory-mapped file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9bed8-532">
            <paramref name="size" />가 총 가상 메모리보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-532">
              <paramref name="size" /> is greater than the total virtual memory.</span>
          </span>
          <span data-ttu-id="9bed8-533">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-533">-or-</span>
          </span>
          <span data-ttu-id="9bed8-534">
            <paramref name="access" />는 메모리 매핑된 파일에 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-534">
              <paramref name="access" /> is invalid for the memory-mapped file.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9bed8-535">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-535">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="9bed8-536">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-536">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9bed8-537">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-537">Releases the resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bed8-538">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-538">Releases all resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="9bed8-539">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-539">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-540">
            <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-540">Releases the unmanaged resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As MemoryMappedFileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ GetAccessControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFileSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9bed8-541">메모리 매핑된 파일 리소스에 대한 액세스 제어를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-541">Gets the access control to the memory-mapped file resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-542">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-542">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9bed8-543">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-543">An underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9bed8-544">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-544">An underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="9bed8-545">메모리 매핑된 파일이 닫혀 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-545">The memory-mapped file is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="9bed8-546">현재 플랫폼은 Windows 98 또는 이전 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-546">The current platform is Windows 98 or earlier.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9bed8-547">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-547">An underlying call to set security information failed.</span>
          </span>
          <span data-ttu-id="9bed8-548">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-548">-or-</span>
          </span>
          <span data-ttu-id="9bed8-549">메모리 매핑된 파일이 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />로만 열렸습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-549">The memory-mapped file was opened as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9bed8-550">시스템 메모리에서 명명된 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-550">Opens an existing named memory-mapped file in system memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="9bed8-551">열려는 메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-551">The name of the memory-mapped file to open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-552">시스템 메모리에서 지정된 이름을 가진 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-552">Opens an existing memory-mapped file that has the specified name in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-553">지정된 이름을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-553">A memory-mapped file that has the specified name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9bed8-554">비지속형 또는 메모리 매핑된 파일 중 하나는 지속형된 메모리 매핑된 파일 (디스크의 파일에 연결)을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-554">The memory-mapped file can be either a persisted memory-mapped file (associated with a file on disk) or non persisted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9bed8-555">**지속형된 메모리 매핑된 파일 열기**</span><span class="sxs-lookup"><span data-stu-id="9bed8-555">**Opening a Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="9bed8-556">다음 예에서는 라는 메모리 매핑된 파일을 엽니다 `ImgA` 이미 디스크에 있는 파일 로부터 만들어진 (예제에 나와 있는 것 처럼는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> 메서드).</span><span class="sxs-lookup"><span data-stu-id="9bed8-556">The following example opens a memory-mapped file named `ImgA` that has already been created from a file on disk (as shown in the example for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> method).</span></span>  
  
 [!code-csharp[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/cs/program.cs#1)]
 [!code-vb[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/vb/program.vb#1)]  
  
 <span data-ttu-id="9bed8-557">**비지속형 메모리 매핑된 파일 열기**</span><span class="sxs-lookup"><span data-stu-id="9bed8-557">**Opening a Non-Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="9bed8-558">다음 예제에서는 프로세스 간 통신에 사용 되는 메모리 매핑된 파일을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="9bed8-558">The following example opens a memory-mapped file used for inter-process communication.</span></span> <span data-ttu-id="9bed8-559">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9bed8-559">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-560">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-560">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-561">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-561">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9bed8-562">
            <paramref name="mapName" />에 지정된 파일이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-562">The file specified for <paramref name="mapName" /> does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="9bed8-563">열려는 메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-563">The name of the memory-mapped file to open.</span>
          </span>
        </param>
        <param name="desiredAccessRights">
          <span data-ttu-id="9bed8-564">메모리 매핑된 파일에 적용할 액세스 권한을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-564">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-565">시스템 메모리에서 지정된 이름과 액세스 권한을 가진 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-565">Opens an existing memory-mapped file that has the specified name and access rights in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-566">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-566">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-567">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-567">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-568">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-568">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-569">
            <paramref name="desiredAccessRights" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-569">
              <paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9bed8-570">
            <paramref name="mapName" />에 지정된 파일이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-570">The file specified for <paramref name="mapName" /> does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights, System::IO::HandleInheritability inheritability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName">
          <span data-ttu-id="9bed8-571">열려는 메모리 매핑된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-571">The name of the memory-mapped file to open.</span>
          </span>
        </param>
        <param name="desiredAccessRights">
          <span data-ttu-id="9bed8-572">메모리 매핑된 파일에 적용할 액세스 권한을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-572">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span>
          </span>
        </param>
        <param name="inheritability">
          <span data-ttu-id="9bed8-573">메모리 매핑된 파일의 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-573">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span>
          </span>
          <span data-ttu-id="9bed8-574">기본값은 <see cref="F:System.IO.HandleInheritability.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-574">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-575">시스템 메모리에서 지정된 이름, 액세스 권한 및 상속 가능성을 가진 기존의 메모리 매핑된 파일을 엽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-575">Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9bed8-576">지정된 특성을 가진 메모리 매핑된 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-576">A memory-mapped file that has the specified characteristics.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9bed8-577">
            <paramref name="mapName" />이 빈 문자열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-577">
              <paramref name="mapName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-578">
            <paramref name="mapName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-578">
              <paramref name="mapName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9bed8-579">
            <paramref name="desiredAccessRights" />가 유효한 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-579">
              <paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span>
          </span>
          <span data-ttu-id="9bed8-580">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-580">-or-</span>
          </span>
          <span data-ttu-id="9bed8-581">
            <paramref name="inheritability" />가 유효한 <see cref="T:System.IO.HandleInheritability" /> 열거형 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-581">
              <paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9bed8-582">요청된 액세스는 메모리 매핑된 파일에 유효하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-582">The requested access is invalid for the memory-mapped file.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="9bed8-583">
            <paramref name="mapName" />에 지정된 파일이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-583">The file specified for <paramref name="mapName" /> does not exist.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9bed8-584">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-584">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="9bed8-585">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-585">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SafeMemoryMappedFileHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeMemoryMappedFileHandle As SafeMemoryMappedFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ SafeMemoryMappedFileHandle { Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9bed8-586">메모리 매핑된 파일의 파일 핸들을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-586">Gets the file handle of a memory-mapped file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9bed8-587">메모리 매핑된 파일의 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-587">The handle to the memory-mapped file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9bed8-588">비관리 코드에 액세스 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-588">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="9bed8-589">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-589">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" />
      </Parameters>
      <Docs>
        <param name="memoryMappedFileSecurity">
          <span data-ttu-id="9bed8-590">메모리 매핑된 파일에 대한 파일 액세스 및 작업에 부여할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-590">The permissions that can be granted for file access and operations on memory-mapped files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9bed8-591">메모리 매핑된 파일 리소스에 대한 액세스 제어를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-591">Sets the access control to the memory-mapped file resource.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9bed8-592">
            <paramref name="memoryMappedFileSecurity" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-592">
              <paramref name="memoryMappedFileSecurity" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9bed8-593">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-593">An underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9bed8-594">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-594">An underlying call to set security information failed.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9bed8-595">보안 정보를 설정하기 위한 내부 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9bed8-595">An underlying call to set security information failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>