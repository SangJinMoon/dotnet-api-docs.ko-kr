<Type Name="DictationGrammar" FullName="System.Speech.Recognition.DictationGrammar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="03cbcbf150eedd38688c32681c06070f0170c03d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DictationGrammar : System.Speech.Recognition.Grammar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DictationGrammar extends System.Speech.Recognition.Grammar" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.DictationGrammar" />
  <TypeSignature Language="VB.NET" Value="Public Class DictationGrammar&#xA;Inherits Grammar" />
  <TypeSignature Language="C++ CLI" Value="public ref class DictationGrammar : System::Speech::Recognition::Grammar" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.Grammar</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="50a22-101">자유 텍스트 받아쓰기를 위해 사용하는 스피치 인식 그래머를 표현한다</span>
      <span class="sxs-lookup">
        <span data-stu-id="50a22-101">Represents a speech recognition grammar used for free text dictation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a22-102">이 클래스는 응용 프로그램 텍스트에 대 한 음성된 사용자 입력을 처리할 수 있는 미리 정의 된 언어 모델을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-102">This class provides applications with a predefined language model that can process spoken user input into text.</span></span> <span data-ttu-id="50a22-103">이 클래스는 기본 및 사용자 지정 둘 다 지원 <xref:System.Speech.Recognition.DictationGrammar> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-103">This class supports both default and custom <xref:System.Speech.Recognition.DictationGrammar> objects.</span></span> <span data-ttu-id="50a22-104">선택 받아쓰기 문법에 대 한 정보를 참조 하십시오.는 <xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-104">For information about selecting a dictation grammar, see the <xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29> constructor.</span></span>  
  
 <span data-ttu-id="50a22-105">기본적으로는 <xref:System.Speech.Recognition.DictationGrammar> 언어 모델에서 사용 가능한 컨텍스트.</span><span class="sxs-lookup"><span data-stu-id="50a22-105">By default, the <xref:System.Speech.Recognition.DictationGrammar> language model is context free.</span></span> <span data-ttu-id="50a22-106">특정 단어의 사용 하거나 순서를 식별 하 여 오디오 입력 해석 단어 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-106">It does not make use of specific words or word order to identify and interpret audio input.</span></span> <span data-ttu-id="50a22-107">받아쓰기 문법에 컨텍스트를 추가 하려면 사용 된 <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="50a22-107">To add context to the dictation grammar, use the <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="50a22-108"><xref:System.Speech.Recognition.DictationGrammar> 개체는 지원 하지는 <xref:System.Speech.Recognition.Grammar.Priority%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-108"><xref:System.Speech.Recognition.DictationGrammar> objects do not support the <xref:System.Speech.Recognition.Grammar.Priority%2A> property.</span></span> <span data-ttu-id="50a22-109"><xref:System.Speech.Recognition.DictationGrammar> throw 한 <xref:System.NotSupportedException> 경우 <xref:System.Speech.Recognition.Grammar.Priority%2A> 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-109"><xref:System.Speech.Recognition.DictationGrammar> throws a <xref:System.NotSupportedException> if <xref:System.Speech.Recognition.Grammar.Priority%2A> is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50a22-110">다음 예제에서는 세 받아쓰기 문법을 만들고, 새에 추가 <xref:System.Speech.Recognition.SpeechRecognitionEngine> 개체를 새 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-110">The following example creates three dictation grammars, adds them to a new <xref:System.Speech.Recognition.SpeechRecognitionEngine> object, and returns the new object.</span></span> <span data-ttu-id="50a22-111">첫 번째 문법 기본 받아쓰기 문법이입니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-111">The first grammar is the default dictation grammar.</span></span> <span data-ttu-id="50a22-112">두 번째 문법 맞춤법 받아쓰기 문법이입니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-112">The second grammar is the spelling dictation grammar.</span></span> <span data-ttu-id="50a22-113">세 번째 문법 컨텍스트 구를 포함 하는 기본 받아쓰기 문법이입니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-113">The third grammar is the default dictation grammar that includes a context phrase.</span></span> <span data-ttu-id="50a22-114"><xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> 메서드에 로드 된 후 상황에 맞는 구 받아쓰기 문법을 연결할 때 사용 되는 <xref:System.Speech.Recognition.SpeechRecognitionEngine> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-114">The <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> method is used to associate the context phrase with the dictation grammar after it is loaded to the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object.</span></span>  
  
```csharp  
  
private SpeechRecognitionEngine LoadDictationGrammars()  
{  
  
  // Create a default dictation grammar.  
  DictationGrammar defaultDictationGrammar = new DictationGrammar();  
  defaultDictationGrammar.Name = "default dictation";  
  defaultDictationGrammar.Enabled = true;  
  
  // Create the spelling dictation grammar.  
  DictationGrammar spellingDictationGrammar =  
    new DictationGrammar("grammar:dictation#spelling");  
  spellingDictationGrammar.Name = "spelling dictation";  
  spellingDictationGrammar.Enabled = true;  
  
  // Create the question dictation grammar.  
  DictationGrammar customDictationGrammar =  
    new DictationGrammar("grammar:dictation");  
  customDictationGrammar.Name = "question dictation";  
  customDictationGrammar.Enabled = true;  
  
  // Create a SpeechRecognitionEngine object and add the grammars to it.  
  SpeechRecognitionEngine recoEngine = new SpeechRecognitionEngine();  
  recoEngine.LoadGrammar(defaultDictationGrammar);  
  recoEngine.LoadGrammar(spellingDictationGrammar);  
  recoEngine.LoadGrammar(customDictationGrammar);  
  
  // Add a context to customDictationGrammar.  
  customDictationGrammar.SetDictationContext("How do you", null);  
  
  return recoEngine;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Grammar" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="50a22-115">
            <see cref="T:System.Speech.Recognition.DictationGrammar" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a22-115">Initializes a new instance of the <see cref="T:System.Speech.Recognition.DictationGrammar" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DictationGrammar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.DictationGrammar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DictationGrammar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50a22-116">Windows 데스크톱 음성 기술을 통해 제공되는 기본 받아쓰기 문법에 대한 <see cref="T:System.Speech.Recognition.DictationGrammar" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a22-116">Initializes a new instance of the <see cref="T:System.Speech.Recognition.DictationGrammar" /> class for the default dictation grammar provided by Windows Desktop Speech Technology.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a22-117">기본 받아쓰기 문법 문장 부호를 포함 하 여 표준 받아쓰기 사례를 에뮬레이션 합니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-117">The default dictation grammar emulates standard dictation practices, including punctuation.</span></span> <span data-ttu-id="50a22-118">단어의 맞춤법을 지원 하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-118">It does not support the spelling of a word.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DictationGrammar (string topic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string topic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.DictationGrammar.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (topic As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DictationGrammar(System::String ^ topic);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="topic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="topic">
          <span data-ttu-id="50a22-119">받아쓰기 문법인 <c>grammar:dictation</c> 또는 <c>grammar:dictation#spelling</c>을 지정하는 XML 규격 URI(Universal Resource Identifier)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a22-119">An XML-compliant Universal Resource Identifier (URI) that specifies the dictation grammar, either <c>grammar:dictation</c> or <c>grammar:dictation#spelling</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a22-120">지정된 받아쓰기 문법을 사용하여 <see cref="T:System.Speech.Recognition.DictationGrammar" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a22-120">Initializes a new instance of the <see cref="T:System.Speech.Recognition.DictationGrammar" /> class with a specific dictation grammar.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a22-121">음성 플랫폼 특별 한 URI 구문을 사용 하 여 사용자 지정 받아쓰기 문법을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-121">The Speech platform uses a specialized URI syntax to define the custom dictation grammar.</span></span> <span data-ttu-id="50a22-122">값 `grammar:dictation` 기본 받아쓰기 문법을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-122">The value `grammar:dictation` indicates the default dictation grammar.</span></span> <span data-ttu-id="50a22-123">값 `grammar:dictation#spelling` 맞춤법 받아쓰기 문법을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-123">The value `grammar:dictation#spelling` indicates the spelling dictation grammar.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDictationContext">
      <MemberSignature Language="C#" Value="public void SetDictationContext (string precedingText, string subsequentText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDictationContext(string precedingText, string subsequentText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDictationContext (precedingText As String, subsequentText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDictationContext(System::String ^ precedingText, System::String ^ subsequentText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="precedingText" Type="System.String" />
        <Parameter Name="subsequentText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="precedingText">
          <span data-ttu-id="50a22-124">받아쓰기 컨텍스트의 시작을 나타내는 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a22-124">Text that indicates the start of a dictation context.</span>
          </span>
        </param>
        <param name="subsequentText">
          <span data-ttu-id="50a22-125">받아쓰기 컨텍스트의 끝을 나타내는 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a22-125">Text that indicates the end of a dictation context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50a22-126">
            <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 또는 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 개체에 의해 로드된 받아쓰기 문법에 컨텍스트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="50a22-126">Adds a context to a dictation grammar that has been loaded by a <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> or a <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50a22-127">기본적으로 받아쓰기 문법 미치지 않으며 특정 단어의 사용 또는 단어 순서를 식별 하 여 오디오 입력을 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-127">By default, the dictation grammar does not make use of specific words or word order to identify and interpret audio input.</span></span> <span data-ttu-id="50a22-128">인식 엔진에 사용 하 여 컨텍스트를 받아쓰기 문법에 추가 되는 `precedingText` 및 `subsequentText` 음성 받아쓰기로 해석 하는 시기를 식별 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-128">When a context is added to a dictation grammar, the recognition engine uses the `precedingText` and `subsequentText` to identify when to interpret speech as dictation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="50a22-129">받아쓰기 문법을 로드 해야는 <xref:System.Speech.Recognition.SpeechRecognizer> 또는 <xref:System.Speech.Recognition.SpeechRecognitionEngine> 개체를 사용 하려면 먼저 <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> 컨텍스트를 추가 하려면.</span><span class="sxs-lookup"><span data-stu-id="50a22-129">A dictation grammar must be loaded by a <xref:System.Speech.Recognition.SpeechRecognizer> or <xref:System.Speech.Recognition.SpeechRecognitionEngine> object before you can use <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> to add a context.</span></span>  
  
 <span data-ttu-id="50a22-130">다음 표에서 인식 엔진 받아쓰기 문법을 사용 하는 시기를 결정 하는 두 개의 매개 변수를 사용 하는 방법을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-130">The following table describes how the recognition engine uses the two parameters to determine when to use the dictation grammar.</span></span>  
  
|`precedingText`|`subsequentText`|<span data-ttu-id="50a22-131">설명</span><span class="sxs-lookup"><span data-stu-id="50a22-131">Description</span></span>|  
|---------------------|----------------------|-----------------|  
|<span data-ttu-id="50a22-132">`null` 아님</span><span class="sxs-lookup"><span data-stu-id="50a22-132">not `null`</span></span>|<span data-ttu-id="50a22-133">`null` 아님</span><span class="sxs-lookup"><span data-stu-id="50a22-133">not `null`</span></span>|<span data-ttu-id="50a22-134">인식 엔진 용어를 사용 하 여 가능한 후보 구 묶습니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-134">The recognition engine uses the terms to bracket possible candidate phrases.</span></span>|  
|`null`|<span data-ttu-id="50a22-135">`null` 아님</span><span class="sxs-lookup"><span data-stu-id="50a22-135">not `null`</span></span>|<span data-ttu-id="50a22-136">인식 엔진 사용 하 여는 `subsequentText` 받아쓰기 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-136">The recognition engine uses the `subsequentText` to finish dictation.</span></span>|  
|<span data-ttu-id="50a22-137">`null` 아님</span><span class="sxs-lookup"><span data-stu-id="50a22-137">not `null`</span></span>|`null`|<span data-ttu-id="50a22-138">인식 엔진 사용 하 여는 `precedingText` 받아쓰기를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-138">The recognition engine uses the `precedingText` to start dictation.</span></span>|  
|`null`|`null`|<span data-ttu-id="50a22-139">인식 엔진 받아쓰기 문법을 사용 하는 경우 컨텍스트를 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="50a22-139">The recognition engine does not use a context when using the dictation grammar.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
  </Members>
</Type>