<Type Name="RecognitionResult" FullName="System.Speech.Recognition.RecognitionResult">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1e538dba56f5ae1d20a702be3b5e1f4a888524db" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36409260" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RecognitionResult : System.Speech.Recognition.RecognizedPhrase, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit RecognitionResult extends System.Speech.Recognition.RecognizedPhrase implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.RecognitionResult" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RecognitionResult&#xA;Inherits RecognizedPhrase&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RecognitionResult sealed : System::Speech::Recognition::RecognizedPhrase, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type RecognitionResult = class&#xA;    inherit RecognizedPhrase&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.RecognizedPhrase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b8b92-101">
        <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 또는 <see cref="T:System.Speech.Recognition.SpeechRecognizer" />의 인스턴스에 의해 인식된 입력에 대한 자세한 정보를 포함합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b8b92-101">Contains detailed information about input that was recognized by instances of <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> or <see cref="T:System.Speech.Recognition.SpeechRecognizer" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8b92-102">이 클래스에서 파생 <xref:System.Speech.Recognition.RecognizedPhrase> 하 고 다음을 포함 한 음성 인식 하는 방법에 대 한 자세한 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-102">This class derives from <xref:System.Speech.Recognition.RecognizedPhrase> and provides detailed information about speech recognition, including the following:</span></span>  
  
-   <span data-ttu-id="b8b92-103"><xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A> 속성 참조는 <xref:System.Speech.Recognition.Grammar> 인식기에서 음성을 식별 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-103">The <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A> property references the <xref:System.Speech.Recognition.Grammar> that the recognizer used to identify the speech.</span></span>  
  
-   <span data-ttu-id="b8b92-104"><xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> 속성 구에 대 한 정규화 된 텍스트를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-104">The <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> property contains the normalized text for the phrase.</span></span> <span data-ttu-id="b8b92-105">텍스트 정규화 하는 방법에 대 한 자세한 내용은 참조 <xref:System.Speech.Recognition.ReplacementText>합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-105">For more information about text normalization, see <xref:System.Speech.Recognition.ReplacementText>.</span></span>  
  
-   <span data-ttu-id="b8b92-106"><xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> 속성 결과에 포함 된 의미 체계 정보를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-106">The <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property references the semantic information contained in the result.</span></span> <span data-ttu-id="b8b92-107">의미 체계 정보에는 키 이름 및 연결 된 의미 체계 데이터의 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-107">The semantic information is a dictionary of the key names and associated semantic data.</span></span>  
  
-   <span data-ttu-id="b8b92-108"><xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> 속성의 컬렉션을 포함 <xref:System.Speech.Recognition.RecognizedPhrase> 다른 후보 해석을 오디오 입력을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-108">The <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property contains a collection of <xref:System.Speech.Recognition.RecognizedPhrase> objects that represent other candidate interpretations of the audio input.</span></span> <span data-ttu-id="b8b92-109">자세한 내용은 <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b8b92-109">See <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> for additional information.</span></span>  
  
-   <span data-ttu-id="b8b92-110"><xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> 속성의 정렬된 된 컬렉션에 포함 <xref:System.Speech.Recognition.RecognizedWordUnit> 각각 나타내는 개체를 입력의 단어를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-110">The <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property contains an ordered collection of <xref:System.Speech.Recognition.RecognizedWordUnit> objects that represent each recognized word in the input.</span></span> <span data-ttu-id="b8b92-111">각 <xref:System.Speech.Recognition.RecognizedWordUnit> 표시 형식, 어휘 형식 및 해당 단어에 대 한 발음 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-111">Each <xref:System.Speech.Recognition.RecognizedWordUnit> contains display format, lexical format, and pronunciation information for the corresponding word.</span></span>  
  
 <span data-ttu-id="b8b92-112">특정 멤버는 <xref:System.Speech.Recognition.SpeechRecognitionEngine>, <xref:System.Speech.Recognition.SpeechRecognizer>, 및 <xref:System.Speech.Recognition.Grammar> 클래스를 생성할 수는 <xref:System.Speech.Recognition.RecognitionResult>합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-112">Certain members of the <xref:System.Speech.Recognition.SpeechRecognitionEngine>, <xref:System.Speech.Recognition.SpeechRecognizer>, and <xref:System.Speech.Recognition.Grammar> classes can generate a <xref:System.Speech.Recognition.RecognitionResult>.</span></span> <span data-ttu-id="b8b92-113">자세한 내용은 다음 메서드 및 이벤트를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="b8b92-113">For more information, see the following methods and events.</span></span>  
  
-   <span data-ttu-id="b8b92-114">메서드 및 이벤트는 <xref:System.Speech.Recognition.SpeechRecognitionEngine> 클래스:</span><span class="sxs-lookup"><span data-stu-id="b8b92-114">Methods and events of the <xref:System.Speech.Recognition.SpeechRecognitionEngine> class:</span></span>  
  
    -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize%2A>  
  
    -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync%2A>  
  
    -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized>  
  
    -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected>  
  
    -   <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized>  
  
-   <span data-ttu-id="b8b92-115">메서드 및 이벤트는 <xref:System.Speech.Recognition.SpeechRecognizer> 클래스:</span><span class="sxs-lookup"><span data-stu-id="b8b92-115">Methods and events of the <xref:System.Speech.Recognition.SpeechRecognizer> class:</span></span>  
  
    -   <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize%2A>  
  
    -   <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync%2A>  
  
    -   <xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized>  
  
    -   <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected>  
  
    -   <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized>  
  
-   <span data-ttu-id="b8b92-116"><xref:System.Speech.Recognition.Grammar.SpeechRecognized> 의 이벤트는 <xref:System.Speech.Recognition.Grammar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-116">The <xref:System.Speech.Recognition.Grammar.SpeechRecognized> event of the <xref:System.Speech.Recognition.Grammar> class.</span></span>  
  
 <span data-ttu-id="b8b92-117">인식 이벤트에 대 한 자세한 내용은 참조 [음성 인식 이벤트를 사용 하 여](http://msdn.microsoft.com/library/01c598ca-2e0e-4e89-b303-cd1cef9e8482)합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-117">For more information about recognition events, see [Using Speech Recognition Events](http://msdn.microsoft.com/library/01c598ca-2e0e-4e89-b303-cd1cef9e8482).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8b92-118">다음 예제에 대 한 처리기는 `SpeechRecognized` 의 이벤트는 <xref:System.Speech.Recognition.SpeechRecognitionEngine> 또는 <xref:System.Speech.Recognition.SpeechRecognizer> 개체와 연결 된 작업에 대 한 정보의 일부 <xref:System.Speech.Recognition.RecognitionResult>합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-118">The following example shows a handler for the `SpeechRecognized` event of a <xref:System.Speech.Recognition.SpeechRecognitionEngine> or <xref:System.Speech.Recognition.SpeechRecognizer> object, and some of the information about the associated <xref:System.Speech.Recognition.RecognitionResult>.</span></span>  
  
```csharp  
  
// Handle the SpeechRecognized event.   
void SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  // Add event handler code here.  
  
  // The following code illustrates some of the information available  
  // in the recognition result.  
  Console.WriteLine("Grammar({0}), {1}: {2}",  
    e.Result.Grammar.Name, e.Result.Audio.Duration, e.Result.Text);  
  
  // Display the semantic values in the recognition result.  
  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  
  {  
    Console.WriteLine(" {0} key: {1}",  
      child.Key, child.Value.Value ?? "null");  
  }  
  Console.WriteLine();  
  
  // Display information about the words in the recognition result.  
  foreach (RecognizedWordUnit word in e.Result.Words)  
  {  
    RecognizedAudio audio = e.Result.GetAudioForWordRange(word, word);  
    Console.WriteLine(" {0,-10} {1,-10} {2,-10} {3} ({4})",  
      word.Text, word.LexicalForm, word.Pronunciation,  
      audio.Duration, word.DisplayAttributes);  
  }  
  
  // Display the recognition alternates for the result.  
  foreach (RecognizedPhrase phrase in e.Result.Alternates)  
  {  
    Console.WriteLine(" alt({0}) {1}", phrase.Confidence, phrase.Text);  
  }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.RecognitionEventArgs" />
    <altmember cref="T:System.Speech.Recognition.RecognizedPhrase" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected" />
    <altmember cref="E:System.Speech.Recognition.Grammar.SpeechRecognized" />
  </Docs>
  <Members>
    <Member MemberName="Alternates">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedPhrase&gt; Alternates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Recognition.RecognizedPhrase&gt; Alternates" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognitionResult.Alternates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Alternates As ReadOnlyCollection(Of RecognizedPhrase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedPhrase ^&gt; ^ Alternates { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Recognition::RecognizedPhrase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Alternates : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedPhrase&gt;" Usage="System.Speech.Recognition.RecognitionResult.Alternates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Recognition.RecognizedPhrase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b8b92-119">음성 인식기 입력이 가능한 일치 항목의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8b92-119">Gets the collection of possible matches for input to the speech recognizer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b8b92-120">인식 대체의 읽기 전용 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8b92-120">A read-only collection of the recognition alternates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8b92-121">인식 <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> 의 값으로 정렬 됩니다 자신의 <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-121">Recognition <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> are ordered by the values of their <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> properties.</span></span> <span data-ttu-id="b8b92-122">특정된 구문의 신뢰성 값 구 입력과 일치 확률을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-122">The confidence value of a given phrase indicates the probability that the phrase matches the input.</span></span> <span data-ttu-id="b8b92-123">가장 높은 신뢰도 값을 가진 입력을 가장 일치 하는 구를 이라는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-123">The phrase with the highest confidence value is the phrase that most likely matches the input.</span></span>  
  
 <span data-ttu-id="b8b92-124">각 <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> 개별적으로 및 다른의 신뢰도 값에 대 한 참조 없이 값을 평가 해야 <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-124">Each <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> value should be evaluated individually and without reference to the confidence values of other <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>.</span></span> <span data-ttu-id="b8b92-125">속성 하는 <xref:System.Speech.Recognition.RecognitionResult> 에서 상속 <xref:System.Speech.Recognition.RecognizedPhrase> 와 신뢰성 점수가 가장 높은 구를 검색 하는 방법에 대 한 자세한 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-125">The properties that the <xref:System.Speech.Recognition.RecognitionResult> inherits from <xref:System.Speech.Recognition.RecognizedPhrase> provide detailed information about the phrase with the highest confidence score.</span></span>  
  
 <span data-ttu-id="b8b92-126">에 대 한 용도 중 하나는 <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> 컬렉션은 자동화 된 오류를 수정 하기 위한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-126">One use for the <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> collection is for automated error correction.</span></span> <span data-ttu-id="b8b92-127">예를 들어 디렉터리 대화 상자를 디자인할 때 응용 프로그램 묻는 메시지가 응용 프로그램에서와 같이 인식 이벤트에서 올바른 정보를 보유 하는 경우 "가 있습니다 'Anna'?"를 확인 하려면 사용자가 "no" 인 경우 응용 프로그램에서 충분히 높은 수 있었던 모든 대체 항목에 대 한 사용자를 쿼리할 수 <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> 점수입니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-127">For example, when designing a directory dialog, an application could prompt the user to check if the application has the correct information from a recognition event, as in, "Did you say 'Anna'?" If the user says "no", then the application could query the user about any alternates that had a high enough <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> score.</span></span>  
  
 <span data-ttu-id="b8b92-128">음성 인식 및 인식 대체 항목을 사용 하는 방법에 대 한 자세한 내용은 참조 [음성 인식](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) 및 [음성 인식 이벤트를 사용 하 여](http://msdn.microsoft.com/library/01c598ca-2e0e-4e89-b303-cd1cef9e8482)합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-128">For more information about speech recognition and the use of recognition alternates, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Using Speech Recognition Events](http://msdn.microsoft.com/library/01c598ca-2e0e-4e89-b303-cd1cef9e8482).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8b92-129">다음 예제에 대 한 처리기는 `SpeechRecognized` 이벤트와 연결 된 작업에 대 한 정보의 일부 <xref:System.Speech.Recognition.RecognitionResult>합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-129">The following example shows a handler for the `SpeechRecognized` event and some of the information about the associated <xref:System.Speech.Recognition.RecognitionResult>.</span></span>  
  
```csharp  
  
// Handle the SpeechRecognized event.   
void SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  // Add event handler code here.  
  
  // The following code illustrates some of the information available  
  // in the recognition result.  
  Console.WriteLine("Grammar({0}), {1}: {2}",  
    e.Result.Grammar.Name, e.Result.Audio.Duration, e.Result.Text);  
  
  // Display the semantic values in the recognition result.  
  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  
  {  
    Console.WriteLine(" {0} key: {1}",  
      child.Key, child.Value.Value ?? "null");  
  }  
  Console.WriteLine();  
  
  // Display information about the words in the recognition result.  
  foreach (RecognizedWordUnit word in e.Result.Words)  
  {  
    RecognizedAudio audio = e.Result.GetAudioForWordRange(word, word);  
    Console.WriteLine(" {0,-10} {1,-10} {2,-10} {3} ({4})",  
      word.Text, word.LexicalForm, word.Pronunciation,  
      audio.Duration, word.DisplayAttributes);  
  }  
  
  // Display the recognition alternates for the result.  
  foreach (RecognizedPhrase phrase in e.Result.Alternates)  
  {  
    Console.WriteLine(" alt({0}) {1}", phrase.Confidence, phrase.Text);  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognitionEventArgs" />
        <altmember cref="T:System.Speech.Recognition.RecognizedPhrase" />
      </Docs>
    </Member>
    <Member MemberName="Audio">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.RecognizedAudio Audio { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.RecognizedAudio Audio" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognitionResult.Audio" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Audio As RecognizedAudio" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::RecognizedAudio ^ Audio { System::Speech::Recognition::RecognizedAudio ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Audio : System.Speech.Recognition.RecognizedAudio" Usage="System.Speech.Recognition.RecognitionResult.Audio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.RecognizedAudio</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b8b92-130">인식 결과와 연결된 오디오를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8b92-130">Gets the audio associated with the recognition result.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b8b92-131">인식기가 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 또는 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 인스턴스의 <see langword="null" /> 또는 <see langword="EmulateRecognize" /> 메서드 호출로 인한 결과를 생성하는 경우, 인식 결과와 연결된 오디오 또는 <see langword="EmulateRecognizeAsync" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b8b92-131">The audio associated with the recognition result or <see langword="null" /> if the recognizer generated the result from a call to the <see langword="EmulateRecognize" /> or <see langword="EmulateRecognizeAsync" /> methods of a <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> or <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8b92-132">인식 결과 있는 단어의 특정 범위와 연결 된 오디오의 한 섹션을 사용은 <xref:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b8b92-132">To get a section of the audio that is associated with a specific range of words in the recognition result, use the <xref:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8b92-133">다음 예제에 대 한 처리기는 **SpeechRecognized** 이벤트와 연결 된 작업에 대 한 정보의 일부 <xref:System.Speech.Recognition.RecognitionResult>합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-133">The following example shows a handler for the **SpeechRecognized** event and some of the information about the associated <xref:System.Speech.Recognition.RecognitionResult>.</span></span>  
  
```csharp  
  
// Handle the SpeechRecognized event.   
void SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  // Add event handler code here.  
  
  // The following code illustrates some of the information available  
  // in the recognition result.  
      Console.WriteLine("Grammar({0}): {1}", e.Result.Grammar.Name, e.Result.Text);  
      Console.WriteLine("Audio for result:");  
      Console.WriteLine("  Start time: "+ e.Result.Audio.StartTime);  
      Console.WriteLine("  Duration: " + e.Result.Audio.Duration);  
      Console.WriteLine("  Format: " + e.Result.Audio.Format.EncodingFormat);  
  
  // Display the semantic values in the recognition result.  
  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  
  {  
    Console.WriteLine(" {0} key: {1}",  
      child.Key, child.Value.Value ?? "null");  
  }  
  Console.WriteLine();  
  
  // Display information about the words in the recognition result.  
  foreach (RecognizedWordUnit word in e.Result.Words)  
  {  
    RecognizedAudio audio = e.Result.GetAudioForWordRange(word, word);  
    Console.WriteLine(" {0,-10} {1,-10} {2,-10} {3} ({4})",  
      word.Text, word.LexicalForm, word.Pronunciation,  
      audio.Duration, word.DisplayAttributes);  
  }  
  
  // Display the recognition alternates for the result.  
  foreach (RecognizedPhrase phrase in e.Result.Alternates)  
  {  
    Console.WriteLine(" alt({0}) {1}", phrase.Confidence, phrase.Text);  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.RecognitionEventArgs" />
        <altmember cref="T:System.Speech.Recognition.RecognizedPhrase" />
        <altmember cref="M:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioForWordRange">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.RecognizedAudio GetAudioForWordRange (System.Speech.Recognition.RecognizedWordUnit firstWord, System.Speech.Recognition.RecognizedWordUnit lastWord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.RecognizedAudio GetAudioForWordRange(class System.Speech.Recognition.RecognizedWordUnit firstWord, class System.Speech.Recognition.RecognizedWordUnit lastWord) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAudioForWordRange (firstWord As RecognizedWordUnit, lastWord As RecognizedWordUnit) As RecognizedAudio" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::RecognizedAudio ^ GetAudioForWordRange(System::Speech::Recognition::RecognizedWordUnit ^ firstWord, System::Speech::Recognition::RecognizedWordUnit ^ lastWord);" />
      <MemberSignature Language="F#" Value="member this.GetAudioForWordRange : System.Speech.Recognition.RecognizedWordUnit * System.Speech.Recognition.RecognizedWordUnit -&gt; System.Speech.Recognition.RecognizedAudio" Usage="recognitionResult.GetAudioForWordRange (firstWord, lastWord)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.RecognizedAudio</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstWord" Type="System.Speech.Recognition.RecognizedWordUnit" />
        <Parameter Name="lastWord" Type="System.Speech.Recognition.RecognizedWordUnit" />
      </Parameters>
      <Docs>
        <param name="firstWord">
          <span data-ttu-id="b8b92-134">범위 내에서 첫 번째 단어입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8b92-134">The first word in the range.</span>
          </span>
        </param>
        <param name="lastWord">
          <span data-ttu-id="b8b92-135">범위 내에서 마지막 단어입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8b92-135">The last word in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8b92-136">인식 결과에서 특정 단어 범위와 연결된 오디오 섹션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8b92-136">Gets a section of the audio that is associated with a specific range of words in the recognition result.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8b92-137">단어 범위와 관련된 오디오 섹션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8b92-137">The section of audio associated with the word range.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8b92-138">인식 결과와 관련 된 전체 오디오를 가져오려면는 <xref:System.Speech.Recognition.RecognitionResult.Audio%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-138">To get the complete audio associated with the recognition result, use the <xref:System.Speech.Recognition.RecognitionResult.Audio%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8b92-139">다음 예제에서는 이름 입력을 허용 하도록 문법을 만들고에 대 한 처리기를 연결 된 `SpeechRecognized` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-139">The following example creates a grammar to accept name input and attaches to it a handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="b8b92-140">문법은 구문의 name 요소에 대 한 와일드 카드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-140">The grammar uses a wildcard for the name element of the phrase.</span></span> <span data-ttu-id="b8b92-141">이벤트 처리기는 와일드 카드에서 오디오를 사용 하 여 만들고 인사말 프롬프트를 재생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-141">The event handler uses the audio from the wildcard to create and play a greeting prompt.</span></span>  
  
```csharp  
  
private Grammar CreateNameInputGrammar()  
{  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey nameKey =  
    new SemanticResultKey("Name", wildcardBuilder);  
  
  GrammarBuilder nameBuilder =  
    new GrammarBuilder("My name is");  
  nameBuilder.Append(nameKey);  
  
  Grammar nameGrammar = new Grammar(nameBuilder);  
  nameGrammar.Name = "Name input";  
  
  nameGrammar.SpeechRecognized +=  
    new EventHandler<SpeechRecognizedEventArgs>(  
      NameInputHandler);  
  
  return nameGrammar;  
}  
  
// Handle the SpeechRecognized event for the name grammar.  
private void NameInputHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  RecognitionResult result = e.Result;  
  SemanticValue semantics = e.Result.Semantics;  
  
  if (semantics.ContainsKey("Name"))  
  {  
    RecognizedAudio nameAudio =  
      result.GetAudioForWordRange(  
        result.Words[3], result.Words[result.Words.Count - 1]);  
  
    // Save the audio. Create a directory and file as necessary.  
    FileInfo fi = new FileInfo(@"C:\temp\temp.wav");  
    if (!fi.Directory.Exists)  
    {  
      fi.Directory.Create();  
    }  
    FileStream stream = new FileStream(fi.FullName, FileMode.Create);  
    nameAudio.WriteToWaveStream(stream);  
    stream.Close();  
  
    // Greet the person using the saved audio.  
    SpeechSynthesizer synthesizer = new SpeechSynthesizer();  
    PromptBuilder builder = new PromptBuilder();  
    builder.AppendText("Hello");  
    builder.AppendAudio(fi.FullName);  
    synthesizer.Speak(builder);  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b8b92-142">
            <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 또는 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 개체의 <see langword="EmulateRecognize" /> 또는 <see langword="EmulateRecognizeAsync" /> 메서드에 대한 호출 결과 생성된 인식기</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8b92-142">The recognizer generated the result from a call to <see langword="EmulateRecognize" /> or <see langword="EmulateRecognizeAsync" /> methods of the <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> or <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> objects.</span>
          </span>
        </exception>
        <altmember cref="T:System.Speech.Recognition.RecognitionEventArgs" />
        <altmember cref="T:System.Speech.Recognition.RecognizedPhrase" />
        <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
        <altmember cref="P:System.Speech.Recognition.RecognitionResult.Audio" />
        <altmember cref="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="b8b92-143">데이터로 채울 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8b92-143">The object to populate with data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="b8b92-144">serialization의 대상입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8b92-144">The destination for the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8b92-145">대상 개체를 serialize하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 채웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8b92-145">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance with the data needed to serialize the target object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8b92-146">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="b8b92-146">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b8b92-147"><xref:System.Speech.Recognition.RecognitionResult> 인스턴스가 <xref:System.Runtime.Serialization.ISerializable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b8b92-147">It can be used only when the <xref:System.Speech.Recognition.RecognitionResult> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
  </Members>
</Type>