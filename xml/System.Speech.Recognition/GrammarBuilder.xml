<Type Name="GrammarBuilder" FullName="System.Speech.Recognition.GrammarBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="315163e21cdcb6f40a118f739a1b4767077c316f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36608830" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GrammarBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GrammarBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.GrammarBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class GrammarBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class GrammarBuilder" />
  <TypeSignature Language="F#" Value="type GrammarBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3641d-101">음성 인식 문법에 대 한 제약 조건을 프로그래밍 방식으로 작성 하는 메커니즘을 제공 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3641d-101">Provides a mechanism for programmatically building the constraints for a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-102">음성 인식 문법에 정의 된 XML 형식에서 일반적으로 작성 된 [음성 인식 문법 사양 (SRGS) 버전 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-102">Speech recognition grammars are commonly authored in the XML format defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761).</span></span> <span data-ttu-id="3641d-103">사용할 수는 있지만 SRGS 문법을 프로그래밍 방식으로 생성 하는 잘 알고 있다면는 <xref:System.Speech.Recognition.SrgsGrammar> 네임 스페이스, 해당 구성원이 요소와 SRGS에 정의 된 특성에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-103">If you are familiar with SRGS but want to generate the grammars programmatically, you can use the <xref:System.Speech.Recognition.SrgsGrammar> namespace, whose members correspond closely to the elements and attributes defined by SRGS.</span></span> <span data-ttu-id="3641d-104">SRGS와 모르는 하거나를 효율적으로 수행할 수 여러 가지 일반적인 시나리오; 문법 제작 하는 간단 하 고 프로그래밍 방식으로 접근 방식 사용할 수는 <xref:System.Speech.Recognition.GrammarBuilder> 및 <xref:System.Speech.Recognition.Choices> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-104">If you are unfamiliar with SRGS, or you want a lightweight, programmatic approach to authoring grammars with which you can efficiently accomplish many common scenarios; you can use the <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> classes.</span></span>  
  
 <span data-ttu-id="3641d-105">사용 하 여 <xref:System.Speech.Recognition.GrammarBuilder> 계층적 트리를 만드는 개체는로 구성 <xref:System.Speech.Recognition.Choices> 프리앰블 및 각 노드에서 이후 amble 구를 사용 하 여 섞어서 및 의미를 전달 하는 값을 의미 체계를 사용 하 여 시드할 대체 구가 포함 된 개체를 다시는 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-105">Use <xref:System.Speech.Recognition.GrammarBuilder> objects to build a hierarchical tree composed of <xref:System.Speech.Recognition.Choices> objects that contain alternate phrases, interspersed with preamble and post-amble phrases at each node, and seeded with semantic values that convey  meaning back to the application.</span></span>  
  
 <span data-ttu-id="3641d-106">사용 하는 <xref:System.Speech.Recognition.GrammarBuilder> 만들려는 <xref:System.Speech.Recognition.Grammar> 개체, 다음 단계를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-106">To use a <xref:System.Speech.Recognition.GrammarBuilder> to create a <xref:System.Speech.Recognition.Grammar> object, use the following steps.</span></span>  
  
1.  <span data-ttu-id="3641d-107"><xref:System.Speech.Recognition.GrammarBuilder> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-107">Create a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
2.  <span data-ttu-id="3641d-108">제약 조건을 추가 하는 <xref:System.Speech.Recognition.GrammarBuilder>와 같은 <xref:System.String> 개체 <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, 및 기타 <xref:System.Speech.Recognition.GrammarBuilder> 문법에 대 한 제약 조건을 정의 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-108">Append constraints to the <xref:System.Speech.Recognition.GrammarBuilder>, such as <xref:System.String> objects, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, and other <xref:System.Speech.Recognition.GrammarBuilder> objects that define the constraints for the grammar.</span></span>  
  
3.  <span data-ttu-id="3641d-109">중 하나를 사용 하 여는 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 를 만드는 생성자는 <xref:System.Speech.Recognition.Grammar> 개체는 전체에서 <xref:System.Speech.Recognition.GrammarBuilder> 문법입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-109">Use one of the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructors to create a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder> grammar.</span></span>  
  
 <span data-ttu-id="3641d-110">제작 <xref:System.Speech.Recognition.GrammarBuilder> 목록 또는의 단일 아마도 목록을 포함 하는 단일 규칙이 문법에 가장 잘 맞습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-110">Authoring with <xref:System.Speech.Recognition.GrammarBuilder> is best suited to grammars that have a single rule containing lists, or perhaps lists of lists.</span></span> <span data-ttu-id="3641d-111">여러 규칙 또는 필요로 하는 내부 규칙입니다. 참조할 문법을 프로그래밍 방식으로 작성 하려면의 클래스를 사용 하는 <xref:System.Speech.Recognition.SrgsGrammar> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-111">To programmatically build grammars that have multiple rules, or that need to make internal rule references, use the classes of the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="3641d-112">인스턴스 <xref:System.Speech.Recognition.GrammarBuilder> 다른 특정 클래스에서 암시적 변환 하거나 결합 하 여 얻을 수도 있습니다는 <xref:System.Speech.Recognition.GrammarBuilder> 문법에 대 한 제약 조건이 포함 된 두 번째 개체와...</span><span class="sxs-lookup"><span data-stu-id="3641d-112">Instances of <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained by implicit conversions from certain other classes or by combining a  <xref:System.Speech.Recognition.GrammarBuilder> with a second object that contains constraints for a grammar..</span></span> <span data-ttu-id="3641d-113">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자와 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3641d-113">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators and the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="3641d-114">기존 규칙을 추가 하려면 <xref:System.Speech.Recognition.GrammarBuilder>를 사용 하 여는 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, 및 <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3641d-114">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-115">음성 인식기에서 동일한 키 이름의 의미 체계는 중복 요소 또는 동일한 의미 체계 요소의 값을 수정할 반복 해 서 수 있는 여러 의미 요소를 포함 하는 음성 인식 문법을 사용 하는 경우 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-115">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="3641d-116">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [를 사용 하 여 SemanticResultKey 및 SemanticResultValue 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-116">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3641d-117">디버깅에 도움이 되는 <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> 속성의 현재 상태를 반환 합니다.는 <xref:System.Speech.Recognition.GrammarBuilder> 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-117">To help with debugging, the <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> property returns the current status of the <xref:System.Speech.Recognition.GrammarBuilder> as a string.</span></span>  
  
 <span data-ttu-id="3641d-118">빌드 및 음성 인식 문법을 사용 하는 방법에 대 한 자세한 내용은 참조 [음성 인식](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) 및 [GrammarBuilder 문법 만드는](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-118">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-119">다음 예제에서는 <xref:System.Speech.Recognition.GrammarBuilder> 및 <xref:System.Speech.Recognition.Choices> 두 구 중 하나를 인식할 수 있는 문법을 생성 하는 개체 "배경 *colorChoice*" 또는 "배경 설정 *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3641d-119">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3641d-120">이 예제에서는 사용는 <xref:System.Speech.Recognition.Choices> 개체에 대 한 허용 되는 값 목록을 만드는 데 *colorChoice* 의 배열에서 <xref:System.String> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-120">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="3641d-121">A <xref:System.Speech.Recognition.Choices> 개체는 비슷합니다는 `one-of` SRGS 사양의 요소에에서 고 말할 때 인식할 수 있는, 즉 대체 구 집합을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-121">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="3641d-122">또한이 예제에서는 한 <xref:System.Speech.Recognition.Choices> 두 배열 그룹화 하는 개체 <xref:System.Speech.Recognition.GrammarBuilder> 한 쌍의 대체 구 결과 문법 인식할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-122">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="3641d-123">대체 단어 또는 구를 대부분 문법의 구성 요소 및 <xref:System.Speech.Recognition.Choices> 개체 변수로 생성 된 문법에 대 한이 기능을 제공 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-123">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3641d-124">이 예에서는 마지막으로 만듭니다는 <xref:System.Speech.Recognition.Grammar> 에서 개체는 <xref:System.Speech.Recognition.GrammarBuilder> 에서 생성 되는 <xref:System.Speech.Recognition.Choices> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-124">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Choices" />
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3641d-125">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-125">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-126">이 클래스의 인스턴스는 다른 클래스에서 암시적 변환 하거나 결합 하 여 얻을 수도 있습니다는 <xref:System.Speech.Recognition.GrammarBuilder> 새에서 두 번째 개체를 가진 개체가 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-126">Instances of this class can also be obtained by implicit conversions from other classes or by combining a <xref:System.Speech.Recognition.GrammarBuilder> object with a second object to from a new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3641d-127">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3641d-127">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods.</span></span>  
  
 <span data-ttu-id="3641d-128">기존 제약 조건을 추가 하려면 <xref:System.Speech.Recognition.GrammarBuilder>를 사용 하 여는 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, 및 <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> 메서드 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-128">To add constraints to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-129">음성 인식기에서 동일한 키 이름의 의미 체계는 중복 요소 또는 동일한 의미 체계 요소의 값을 수정할 반복 해 서 수 있는 여러 의미 요소를 포함 하는 음성 인식 문법을 사용 하는 경우 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-129">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="3641d-130">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [를 사용 하 여 SemanticResultKey 및 SemanticResultValue 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-130">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3641d-131">빌드 및 음성 인식 문법을 사용 하는 방법에 대 한 자세한 내용은 참조 [음성 인식](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) 및 [GrammarBuilder 문법 만드는](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-131">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3641d-132">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 비어 있는 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-132">Initializes a new, empty instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-133">기존 규칙을 추가 하려면 <xref:System.Speech.Recognition.GrammarBuilder> 개체를 가져오려면는 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, 및 <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> 메서드 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-133">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder> object, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-134">음성 인식기에서 동일한 키 이름의 의미 체계는 중복 요소 또는 동일한 의미 체계 요소의 값을 수정할 반복 해 서 수 있는 여러 의미 요소를 포함 하는 음성 인식 문법을 사용 하는 경우 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-134">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="3641d-135">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [를 사용 하 여 SemanticResultKey 및 SemanticResultValue 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-135">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-136">다음 예제에서는 <xref:System.Speech.Recognition.GrammarBuilder> 및 <xref:System.Speech.Recognition.Choices> 두 구 중 하나를 인식할 수 있는 문법을 생성 하는 개체 "배경 *colorChoice*" 또는 "배경 설정 *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3641d-136">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3641d-137">이 예제에서는 사용는 <xref:System.Speech.Recognition.Choices> 개체에 대 한 허용 되는 값 목록을 만드는 데 *colorChoice* 의 배열에서 <xref:System.String> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-137">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="3641d-138">A <xref:System.Speech.Recognition.Choices> 개체는 비슷합니다는 `one-of` SRGS 사양의 요소에에서 고 말할 때 인식할 수 있는, 즉 대체 구 집합을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-138">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any one of which can be recognized when spoken.</span></span> <span data-ttu-id="3641d-139">또한이 예제에서는 한 <xref:System.Speech.Recognition.Choices> 두 배열 그룹화 하는 개체 <xref:System.Speech.Recognition.GrammarBuilder> 한 쌍의 대체 구 결과 문법 인식할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-139">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="3641d-140">대체 단어 또는 구를 대부분 문법의 구성 요소 및 <xref:System.Speech.Recognition.Choices> 개체 변수로 생성 된 문법에 대 한이 기능을 제공 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-140">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3641d-141">이 예에서는 마지막으로 만듭니다는 <xref:System.Speech.Recognition.Grammar> 에서 개체는 <xref:System.Speech.Recognition.GrammarBuilder> 에서 생성 되는 <xref:System.Speech.Recognition.Choices> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-141">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  GrammarBuilder bothPhrases = new GrammarBuilder();  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  bothPhrases.Append(bothChoices);  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="3641d-142">대체 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-142">The set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-143">대체 집합에서 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-143">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a set of alternatives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-144">대체 단어를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [GrammarBuilder 문법 만들려는 사용 하 여 선택 항목](http://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-144">For more information about building a speech recognition grammar that contains alternatives, see [Using Choices to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-145">다음 예제에서는 <xref:System.Speech.Recognition.GrammarBuilder> 및 <xref:System.Speech.Recognition.Choices> 두 구 중 하나를 인식할 수 있는 문법을 생성 하는 개체 "배경 *colorChoice*" 또는 "배경 설정 *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3641d-145">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3641d-146">이 예제에서는 사용는 <xref:System.Speech.Recognition.Choices> 개체에 대 한 허용 되는 값 목록을 만드는 데 *colorChoice* 의 배열에서 <xref:System.String> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-146">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="3641d-147">A <xref:System.Speech.Recognition.Choices> 개체는 비슷합니다는 `one-of` SRGS 사양의 요소에에서 고 말할 때 인식할 수 있는, 즉 대체 구 집합을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-147">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="3641d-148">또한이 예제에서는 한 <xref:System.Speech.Recognition.Choices> 두 배열 그룹화 하는 개체 <xref:System.Speech.Recognition.GrammarBuilder> 한 쌍의 대체 구 결과 문법 인식할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-148">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="3641d-149">대체 단어 또는 구를 대부분 문법의 구성 요소 및 <xref:System.Speech.Recognition.Choices> 개체 변수로 생성 된 문법에 대 한이 기능을 제공 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-149">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3641d-150">이 예에서는 마지막으로 만듭니다는 <xref:System.Speech.Recognition.Grammar> 에서 개체는 <xref:System.Speech.Recognition.GrammarBuilder> 에서 생성 되는 <xref:System.Speech.Recognition.Choices> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-150">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3641d-151">의미 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-151">The semantic key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-152">의미 키에서 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-152">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-153">만들 때 한 <xref:System.Speech.Recognition.GrammarBuilder> 에서 인스턴스는 <xref:System.Speech.Recognition.SemanticResultValue> 개체를 인식 결과에서 반환 될 수 있는 문법에 의미 체계 정보를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-153">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="3641d-154">사용 하 여 인식 결과에서 의미 체계 정보에 액세스할 수 있습니다는 <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> 속성 <xref:System.Speech.Recognition.RecognizedPhrase>, 이벤트의 처리기에서 제공 되는 `SpeechRecognized` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-154">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="3641d-155">경우는 <xref:System.Speech.Recognition.GrammarBuilder> 정의 <xref:System.Speech.Recognition.SemanticResultKey>,이 키와 연결 된 인식 결과에서 의미 체계 정보 검색에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-155">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="3641d-156">예를 참조 <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, 있는지도 <xref:System.Speech.Recognition.SemanticResultValue> 및 <xref:System.Speech.Recognition.SemanticResultKey>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-156">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-157">생성할 때 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 반복적으로 수정할 수 있는 여러 의미 체계 요소 또는 키 이름이 동일한 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인은 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 속성의는 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-157">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-158">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-158">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-159">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [를 사용 하 여 SemanticResultKey 및 SemanticResultValue 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-159">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-160">다음 예제에서는 두 개의 구 인식할 수 있는 음성 인식 문법 "배경 *colorChoice*" 및 "로 배경 설정 *colorChoice*" 여기서 * colorChoice* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-160">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="3641d-161">문법은 사용자가 여러 색 이름 중 하나는 서로 통신할 수 있도록 하 고 응용 프로그램에 인식 된 색 이름에 대 한 의미 체계 정보를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-161">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="3641d-162">이 예제에서는 단일 사용 <xref:System.Speech.Recognition.SemanticResultKey> 를 검색할 수 있습니다는 <xref:System.Speech.Recognition.SemanticValue> 사용자가 읽을 색과 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-162">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="3641d-163">예를 들어, 입력에는 구 "집합 배경이 빨강"를 인식 결과 의미 체계에 대 한 처리기를 사용 하 여 검색할 수 있습니다 "#FF0000" 값이 포함 된는 `SpeechRecognized` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-163">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="3641d-164">이 예에서는 사용 <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 마지막에 모두 포함 되어 있는 제약 조건을 만들려는 개체 <xref:System.Speech.Recognition.GrammarBuilder> 개체 `bothPhrases`합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-164">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="3641d-165">마지막으로 구성 하는 예제는 <xref:System.Speech.Recognition.Grammar> 개체는 전체에서 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-165">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices object for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the Grammar object from the GrammarBuilder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3641d-166">의미 값이거나 이름/값 쌍입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-166">The semantic value or name/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-167">의미 값에서 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-167">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-168">만들 때 한 <xref:System.Speech.Recognition.GrammarBuilder> 에서 인스턴스는 <xref:System.Speech.Recognition.SemanticResultValue> 개체를 인식 결과에서 반환 될 수 있는 문법에 의미 체계 정보를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-168">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="3641d-169">사용 하 여 인식 결과에서 의미 체계 정보에 액세스할 수 있습니다는 <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> 속성 <xref:System.Speech.Recognition.RecognizedPhrase>, 이벤트의 처리기에서 제공 되는 `SpeechRecognized` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-169">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="3641d-170">경우는 <xref:System.Speech.Recognition.GrammarBuilder> 정의 <xref:System.Speech.Recognition.SemanticResultKey>,이 키와 연결 된 인식 결과에서 의미 체계 정보 검색에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-170">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="3641d-171">예를 참조 <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, 있는지도 <xref:System.Speech.Recognition.SemanticResultValue> 및 <xref:System.Speech.Recognition.SemanticResultKey>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-171">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-172">생성할 때 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 반복적으로 수정할 수 있는 여러 의미 체계 요소 또는 키 이름이 동일한 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인은 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 속성의는 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-172">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-173">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-173">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-174">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [를 사용 하 여 SemanticResultKey 및 SemanticResultValue 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-174">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-175">다음 예제에서는 두 개의 구 인식할 수 있는 음성 인식 문법 "배경 *colorChoice*" 및 "로 배경 설정 *colorChoice*" 여기서 * colorChoice* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-175">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="3641d-176">문법은 사용자가 여러 색 이름 중 하나는 서로 통신할 수 있도록 하 고 응용 프로그램에 인식 된 색 이름에 대 한 의미 체계 정보를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-176">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="3641d-177">이 예제에서는 단일 사용 <xref:System.Speech.Recognition.SemanticResultKey> 를 검색할 수 있습니다는 <xref:System.Speech.Recognition.SemanticValue> 사용자가 읽을 색과 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-177">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="3641d-178">예를 들어, 입력에는 구 "집합 배경이 빨강"를 인식 결과 의미 체계에 대 한 처리기를 사용 하 여 검색할 수 있습니다 "#FF0000" 값이 포함 된는 `SpeechRecognized` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-178">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="3641d-179">이 예에서는 사용 <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 마지막에 모두 포함 되어 있는 제약 조건을 만들려는 개체 <xref:System.Speech.Recognition.GrammarBuilder> 개체 `bothPhrases`합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-179">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="3641d-180">마지막으로 구성 하는 예제는 <xref:System.Speech.Recognition.Grammar> 개체는 전체에서 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-180">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the grammar from the grammar builder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder phrase" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3641d-181">단어의 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-181">The sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-182">단어 시퀀스에서 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-182">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-183">구를 음성 인식 문법 인식할 수 있는 정확한 음성된 구를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-183">The phrase represents an exact spoken phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="3641d-184">문자열을 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [GrammarBuilder 문법을 만들기 위해 사용 하 여 문자열](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-184">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-185">다음 예제에서는 <xref:System.Speech.Recognition.GrammarBuilder> 및 <xref:System.Speech.Recognition.Choices> 두 구 중 하나를 인식할 수 있는 문법을 생성 하는 개체 "배경 *colorChoice*" 또는 "배경 설정 *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3641d-185">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3641d-186">에 대 한 허용 되는 값의 목록을 만든 후 *colorChoice* 를 사용 하 여는 <xref:System.Speech.Recognition.Choices> 개체를 예제에서는 두 개의 초기화 합니다 <xref:System.Speech.Recognition.GrammarBuilder> 개체 `makePhrase` 및 `setPhrase`, 인수로 문자열을 사용 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-186">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using a string as an argument.</span></span>  
  
 <span data-ttu-id="3641d-187">이 예에서는 마지막으로 만듭니다는 <xref:System.Speech.Recognition.Grammar> 에서 개체는 <xref:System.Speech.Recognition.Choices> 개체 캐스팅는 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-187">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * System.Speech.Recognition.SubsetMatchingMode -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, subsetMatchingCriteria)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3641d-188">단어의 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-188">The sequence of words.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="3641d-189">일치하는 모드는 언어 인식 문법을 사용하여 구를 인식합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-189">The matching mode the speech recognition grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-190">단어 시퀀스의 하위 집합에 대한 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-190">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class for a subset of a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-191">`phrase` 구를 음성 인식 문법 인식할 수 있는 매개 변수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-191">The `phrase` parameter represents the phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="3641d-192">`subsetMatchingMode` 매개 변수 전체 구의 성공적으로 인식을 달성 하기 위해 통용 될 구의 하위 집합을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-192">The `subsetMatchingMode` parameter specifies a subset of the phrase that can be spoken to achieve successful recognition of the entire phrase.</span></span> <span data-ttu-id="3641d-193">문법 항목과 일치 하는 전체 이름을 사용자가 요구 하지 않고 긴 이름이 포함 된 항목의 목록으로 작성 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-193">You can use this to create a grammar with a list of entries that have long names, without requiring users to speak an entire name to match an item.</span></span>  
  
 <span data-ttu-id="3641d-194">일치 하는 모드에 대 한 자세한 내용은 참조 <xref:System.Speech.Recognition.SubsetMatchingMode>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-194">For more information about the matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode>.</span></span> <span data-ttu-id="3641d-195">문자열을 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [GrammarBuilder 문법을 만들기 위해 사용 하 여 문자열](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-195">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-196">다음 예제에서는 각각에 대해 음성 인식 문법 만듭니다 <xref:System.Speech.Recognition.SubsetMatchingMode> 값과 일치 하는 모드 문법 중에서 선택에 대 한 문법입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-196">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value and a grammar for choosing between the matching mode grammars.</span></span> <span data-ttu-id="3641d-197">경우의 값 `phrase` 는 "하나 두 세 4 개의 5 6 7", 하위 시퀀스 문법 인식 입력 한 다음 "두 세 4 개의", 있지만 입력 하지 "하나 세 5"입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-197">If the value of `phrase` is "one two three four five six seven", then the Subsequence grammar recognizes the input "two three four", but not the input "one three five".</span></span> <span data-ttu-id="3641d-198">그러나 정렬 하위 집합 문법 모두 이러한 입력을 인식합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-198">However, the Ordered Subset grammar recognizes both of these inputs.</span></span>  
  
```csharp  
  
private static IEnumerable<Grammar>  
  CreateMatchingModeGrammars(string phrase)  
{  
  List<Grammar> grammars = new List<Grammar>(5);  
  
  Choices modeChoice = new Choices();  
  Type enumType = typeof(SubsetMatchingMode);  
  foreach (SubsetMatchingMode mode in Enum.GetValues(enumType))  
  {  
    string modeName = Enum.GetName(enumType, mode);  
    modeName = BreakAtCaps(modeName);  
  
    GrammarBuilder builder = new GrammarBuilder(phrase, mode);  
    Grammar modeGrammar = new Grammar(builder);  
    modeGrammar.Name = modeName;  
    modeGrammar.Enabled = false;  
    grammars.Add(modeGrammar);  
  
    modeChoice.Add(modeName);  
  }  
  
  Grammar choiceGrammar = new Grammar(modeChoice);  
  choiceGrammar.Name = "choice";  
  grammars.Add(choiceGrammar);  
  
  return grammars;  
}  
  
// Insert spaces preceding each uppercase letter in a string.   
private static string BreakAtCaps(string item)  
{  
  if (item == null || item.Length == 0)  
  {  
    return item;  
  }  
  
  StringBuilder sb = new StringBuilder(item[0].ToString());  
  for (int i = 1; i < item.Length; i++)  
  {  
    char c = item[i];  
    if (char.IsUpper(c))  
    {  
      sb.Append(" ");  
    }  
    sb.Append(c);  
  }  
  
  return sb.ToString();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SubsetMatchingMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.GrammarBuilder * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (builder, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3641d-199">반복된 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-199">The repeated element.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="3641d-200">입력이 <c>builder</c>가 정의한 요소와 일치하여 일치 항목을 구성해야 하는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-200">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="3641d-201">입력이 <c>builder</c>가 정의한 요소와 일치하여 일치 항목을 구성할 수 있는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-201">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-202">반복된 요소에서 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-202">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a repeated element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-203">하는 경우의 값 `minRepeat` 가 0 이면 새 <xref:System.Speech.Recognition.GrammarBuilder> 는 선택적 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-203">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="3641d-204">값 `minRepeat` 0 보다 크거나 해야의 값 보다 작거나 `maxRepeat`합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-204">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-205">에 대 한 반복을 지정 하는 경우 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스는 를반복해서수정할수있는여러의미체계요소또는키이름이동일한의미체계는중복요소를만들지않으려면있는지확인<xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-205">When you specify repeats for <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-206">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-206">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-207">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [를 사용 하 여 SemanticResultKey 및 SemanticResultValue 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-207">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-208">다음 예제는 피자를 순서에 대 한 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-208">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="3641d-209">선택적, opening 구문 1 ~ 4 개의 토 핑 다음으로 시작 하 고 "피자" 라는 단어를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-209">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object from a string array of alternative toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3641d-210">반복된 단어의 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-210">The repeated sequence of words.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="3641d-211">입력이 구에 일치하여 일치 항목을 구성해야 하는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-211">The minimum number of times that input matching the phrase must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="3641d-212">입력이 구에 일치하여 일치 항목을 구성할 수 있는 최대 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-212">The maximum number of times that input matching the phrase can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-213">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" />의 단어의 시퀀스에서의 <see cref="T:System.String" /> 클래스의 새 인스턴스를 초기화하며 <see cref="T:System.String" />이 얼마나 반복될 수 있는지를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-213">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from the sequence of words in a <see cref="T:System.String" /> and specifies how many times the <see cref="T:System.String" /> can be repeated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-214">하는 경우의 값 `minRepeat` 가 0 이면 새 <xref:System.Speech.Recognition.GrammarBuilder> 는 선택적 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-214">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="3641d-215">값 `minRepeat` 0 보다 크거나 해야의 값 보다 작거나 `maxRepeat`합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-215">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span> <span data-ttu-id="3641d-216">문자열을 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [GrammarBuilder 문법을 만들기 위해 사용 하 여 문자열](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-216">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-217">다음 예제는 피자를 순서에 대 한 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-217">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="3641d-218">선택적, opening 구문 1 ~ 4 개의 토 핑 다음으로 시작 하 고 "피자" 라는 단어를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-218">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3641d-219">두 문법 요소의 시퀀스를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-219">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-220">정적 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> 메서드를 다양성을 만드는 다양 한 형식을 결합할 수 있습니다 및 유연성 문법에 사용 하 여 빌드한 다른 메커니즘을 제공 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-220">The static <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods provide another mechanism by which you can combine various types to create diversity and flexibility in grammars built with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3641d-221">이러한 메서드는 정적에 해당 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 에 정의 하는 메서드는 <xref:System.Speech.Recognition.GrammarBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-221">These methods correspond to the static <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods, which are also defined on the <xref:System.Speech.Recognition.GrammarBuilder> class.</span></span> <span data-ttu-id="3641d-222">새 요소의 순서를 결정 하는 매개 변수의 순서 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-222">The order of the parameters determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3641d-223">A <xref:System.Speech.Recognition.GrammarBuilder> 에서 얻을 수 있습니다 <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, 및 [문자열](http://go.microsoft.com/fwlink/?LinkId=159733) 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-223">A <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and [String](http://go.microsoft.com/fwlink/?LinkId=159733) objects.</span></span> <span data-ttu-id="3641d-224">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-224">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-225">음성 인식기에서 동일한 키 이름의 의미 체계는 중복 요소 또는 동일한 의미 체계 요소의 값을 수정할 반복 해 서 수 있는 여러 의미 요소를 포함 하는 음성 인식 문법을 사용 하는 경우 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-225">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="3641d-226">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [를 사용 하 여 SemanticResultKey 및 SemanticResultValue 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-226">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3641d-227">빌드 및 음성 인식 문법을 사용 하는 방법에 대 한 자세한 내용은 참조 [음성 인식](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) 및 [GrammarBuilder 문법 만드는](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-227">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (choices, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="3641d-228">대체 항목 집합을 나타내는 첫 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-228">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="3641d-229">두 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-229">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-230">
            <see cref="T:System.Speech.Recognition.Choices" /> 개체와 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체를 차례로 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-230">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-231">
            <paramref name="choices" /> 요소와 <paramref name="builder" /> 요소 시퀀스에 대한 <see cref="T:System.Speech.Recognition.GrammarBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-231">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-232"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 암시적 변환을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-232"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3641d-233">이 메서드에 대 한 위에 나열 된 개체는 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-233">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="3641d-234">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-234">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-235">결합 하면 <xref:System.Speech.Recognition.Choices> 및 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 반복적으로 수정할 수 있는 여러 의미 체계 요소 또는 키 이름이 동일한 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인은 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-235">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-236">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-236">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-237">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [GrammarBuilder 문법에 추가 의미 체계](https://msdn.microsoft.com/library/hh361581.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-237">For more information about building a speech recognition grammar that contains semantic information, see [Add Semantics to a GrammarBuilder Grammar](https://msdn.microsoft.com/library/hh361581.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, choices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3641d-238">문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-238">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="3641d-239">두 번째 문법 요소로, 대체 요소의 집합을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-239">The second grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-240">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체와 <see cref="T:System.Speech.Recognition.Choices" /> 개체를 차례로 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-240">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-241">
            <paramref name="builder" /> 요소와 <paramref name="choices" /> 요소 시퀀스에 대한 <see cref="T:System.Speech.Recognition.GrammarBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-241">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="choices" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-242"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 암시적 변환을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-242"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3641d-243">이 메서드에 대 한 위에 나열 된 개체는 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-243">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="3641d-244">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-244">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-245">결합 하면 <xref:System.Speech.Recognition.Choices> 및 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스 다른 문법 요소와 동일한 키 이름의 여러 의미 체계 요소와 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 반복 해 서 수정할 수는 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-245">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-246">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-246">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-247">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [를 사용 하 여 SemanticResultKey 및 SemanticResultValue 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-247">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-248">다음 예제에서는 두 개의 구 인식할 수 있는 음성 인식 문법 "배경 *색*" 및 "로 배경 설정 *색*" 여기서 *색* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-248">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3641d-249">다양 한 형식을 사용 하는 최종 문법 등 빌드를 [문자열](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-249">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="3641d-250">에 대 한 호출의 명시적 캐스트 연산자는 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> 메서드는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-250">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder1, builder2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="3641d-251">문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-251">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="3641d-252">두 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-252">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-253">두 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체의 시퀀스를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-253">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-254">
            <paramref name="builder1" /> 요소와 <paramref name="builder2" /> 요소 시퀀스에 대한 <see cref="T:System.Speech.Recognition.GrammarBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-254">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> element followed by the <paramref name="builder2" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-255"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 암시적 변환을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-255"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3641d-256">이 메서드에 대 한 위에 나열 된 개체는 `builder1` 또는 `builder2` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-256">This method accepts the objects listed above for the `builder1` or `builder2` parameter.</span></span>  
  
 <span data-ttu-id="3641d-257">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-257">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-258">결합 하면 <xref:System.Speech.Recognition.Choices> 및 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스 다른 문법 요소와 동일한 키 이름의 여러 의미 체계 요소와 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 반복 해 서 수정할 수는 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-258">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-259">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-259">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-260">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [를 사용 하 여 SemanticResultKey 및 SemanticResultValue 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-260">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-261">다음 예제에서는 두 개의 구 인식할 수 있는 음성 인식 문법 "배경 *색*" 및 "로 배경 설정 *색*" 여기서 *색* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-261">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3641d-262">다양 한 형식을 사용 하는 최종 문법 등 빌드를 [문자열](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-262">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="3641d-263">에 대 한 호출의 명시적 캐스트 연산자는 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> 메서드는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-263">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, phrase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3641d-264">문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-264">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="3641d-265">두 번째 문법 요소로, 단어의 시퀀스를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-265">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-266">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체와 그 뒤에 구를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-266">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-267">
            <paramref name="builder" /> 요소와 <paramref name="phrase" /> 요소 시퀀스에 대한 <see cref="T:System.Speech.Recognition.GrammarBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-267">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="phrase" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-268"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 암시적 변환을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-268"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3641d-269">이 메서드에 대 한 위에 나열 된 개체는 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-269">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="3641d-270">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-270">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-271">다음 예제에서는 두 개의 구 인식할 수 있는 음성 인식 문법 "배경 *색*" 및 "로 배경 설정 *색*" 여기서 *색* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-271">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3641d-272">다양 한 형식을 사용 하는 최종 문법 등 빌드를 [문자열](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-272">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="3641d-273">에 대 한 호출의 명시적 캐스트 연산자는 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> 메서드는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-273">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (phrase, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3641d-274">첫 번째 문법 요소로, 단어의 시퀀스를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-274">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="3641d-275">두 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-275">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-276">구와 그 뒤에 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-276">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-277">
            <paramref name="phrase" /> 요소와 <paramref name="builder" /> 요소 시퀀스에 대한 <see cref="T:System.Speech.Recognition.GrammarBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-277">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-278"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 암시적 변환을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-278"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3641d-279">이 메서드에 대 한 위에 나열 된 개체는 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-279">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="3641d-280">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-280">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-281">다음 예제에서는 두 개의 구 인식할 수 있는 음성 인식 문법 "배경 *색*" 및 "로 배경 설정 *색*" 여기서 *색* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-281">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3641d-282">다양 한 형식을 사용 하는 최종 문법 등 빌드를 [문자열](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-282">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="3641d-283">에 대 한 호출의 명시적 캐스트 연산자는 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> 메서드는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-283">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3641d-284">문법 요소를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-284">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-285">이러한 메서드를 사용 하 여 기존 문법 요소를 추가할 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-285">Use these methods to append grammar elements to an existing <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3641d-286">문법 요소를 만들 때 음성 인식 문법에 대 한 제약 조건을 점진적으로 개발 하는 기존 작성기에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-286">As you create grammar elements, you can append them to the existing builder to progressively develop the constraints for a speech recognition grammar.</span></span> <span data-ttu-id="3641d-287">각 요소는 요소의 현재 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-287">Each element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="3641d-288">이 메서드는 추가 대 한 오버 로드가 <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, 및 <xref:System.Speech.Recognition.SemanticResultValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-288">This method has overloads for appending <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-289">음성 인식기에서 동일한 키 이름의 의미 체계는 중복 요소 또는 동일한 의미 체계 요소의 값을 수정할 반복 해 서 수 있는 여러 의미 요소를 포함 하는 음성 인식 문법을 사용 하는 경우 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-289">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="3641d-290">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [를 사용 하 여 SemanticResultKey 및 SemanticResultValue 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-290">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3641d-291">빌드 및 음성 인식 문법을 사용 하는 방법에 대 한 자세한 내용은 참조 [음성 인식](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) 및 [GrammarBuilder 문법 만드는](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-291">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.Choices -&gt; unit" Usage="grammarBuilder.Append alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="3641d-292">추가할 대체 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-292">The set of alternatives to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-293">대체 항목의 집합을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-293">Appends a set of alternatives to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-294">`alternateChoices` 현재 요소 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-294">`alternateChoices` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-295">추가 하면 <xref:System.Speech.Recognition.Choices> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스는 <xref:System.Speech.Recognition.GrammarBuilder> 개체를 반복 해 서 할 수 있는 여러 의미 체계 요소 또는 키 이름이 동일한 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 수정 된 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 속성은 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-295">When you append <xref:System.Speech.Recognition.Choices> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-296">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-296">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-297">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [이해 SemanticResultValue 및 SemanticResultKey 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-297">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-298">다음 예제에서는 "전화" 라는 단어는 선택 사항 "직장 호출 James" 및 "그녀의 휴대 전화에 전화 Anne" 같은 구를 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-298">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="3641d-299">예제를 사용 하는 강조 표시는 <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3641d-299">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder -&gt; unit" Usage="grammarBuilder.Append builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3641d-300">추가할 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-300">The grammar element to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-301">문법 요소를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-301">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-302">`builder` 현재 문법 요소 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-302">`builder` is added to the end of the current sequence of grammar elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3641d-303">추가 하면 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스는 <xref:System.Speech.Recognition.GrammarBuilder> 개체를 반복 해 서 할 수 있는 여러 의미 체계 요소 또는 키 이름이 동일한 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 수정 된 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 속성은 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-303">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-304">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-304">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-305">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [를 사용 하 여 SemanticResultKey 및 SemanticResultValue 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-305">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-306">다음 예제에서는 "전화" 라는 단어는 선택 사항 "직장 호출 James" 및 "그녀의 휴대 전화에 전화 Anne" 같은 구를 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-306">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="3641d-307"><xref:System.Speech.Recognition.GrammarBuilder> 및 <xref:System.Speech.Recognition.Choices> 개체 문법을 생성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-307"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="3641d-308">예제를 사용 하는 강조 표시는 <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3641d-308">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultKey -&gt; unit" Usage="grammarBuilder.Append key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="3641d-309">추가할 의미 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-309">The semantic key to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-310">의미 키를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-310">Appends a semantic key to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-311">`key` 현재 요소 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-311">`key` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-312">추가 하면 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스는 <xref:System.Speech.Recognition.GrammarBuilder> 개체를 반복 해 서 수정할 수 있는 여러 의미 체계 요소 또는 키 이름이 동일한 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인는 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 속성은 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-312">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-313">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-313">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-314">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [이해 SemanticResultValue 및 SemanticResultKey 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-314">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-315">다음 예제는 항공편에 대 한 원본 및 대상 도시를 선택 하기 위한 콘솔 응용 프로그램의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-315">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="3641d-316">"시카고 마이애미에서 고객이 싶습니다."와 같은 응용 프로그램 인식 구</span><span class="sxs-lookup"><span data-stu-id="3641d-316">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="3641d-317">에 대 한 처리기는 <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> 이벤트가 사용 하는 <xref:System.Speech.Recognition.SemanticResultKey> 에 지정 된 공항 코드를 추출 하는 <xref:System.Speech.Recognition.SemanticResultValue> 원본 및 대상 도시에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-317">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create a Choices object and add  cities and airport codes  
        // using SemanticResultValue objects.  
        Choices cities = new Choices();  
        cities.Add(new SemanticResultValue("Chicago", "ORD"));  
        cities.Add(new SemanticResultValue("Boston", "BOS"));  
        cities.Add(new SemanticResultValue("Miami", "MIA"));  
        cities.Add(new SemanticResultValue("Dallas", "DFW"));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultValue -&gt; unit" Usage="grammarBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3641d-318">추가할 의미 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-318">The semantic value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-319">의미 값을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-319">Appends a semantic value to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-320">`value` 현재 요소 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-320">`value` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-321">추가 하면 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스는 <xref:System.Speech.Recognition.GrammarBuilder> 개체를 반복 해 서 수정할 수 있는 여러 의미 체계 요소 또는 키 이름이 동일한 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인는 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 속성은 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-321">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-322">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-322">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-323">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [이해 SemanticResultValue 및 SemanticResultKey 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-323">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-324">다음 예제는 항공편에 대 한 원본 및 대상 도시를 선택 하기 위한 콘솔 응용 프로그램의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-324">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="3641d-325">"시카고 마이애미에서 고객이 싶습니다."와 같은 응용 프로그램 인식 구</span><span class="sxs-lookup"><span data-stu-id="3641d-325">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="3641d-326">에 대 한 처리기는 <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> 이벤트가 사용 하는 <xref:System.Speech.Recognition.SemanticResultKey> 에 지정 된 공항 코드를 추출 하는 <xref:System.Speech.Recognition.SemanticResultValue> 원본 및 대상 도시에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-326">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create GrammarBuilder objects and append SemanticResultValue objects   
        // that contain cities and airport codes.  
  
        GrammarBuilder chicago = new GrammarBuilder();  
        chicago.Append(new SemanticResultValue("Chicago", "ORD"));  
  
        GrammarBuilder boston = new GrammarBuilder();  
        boston.Append(new SemanticResultValue("Boston", "BOS"));  
  
        GrammarBuilder miami = new GrammarBuilder();  
        miami.Append(new SemanticResultValue("Miami", "MIA"));  
  
        GrammarBuilder dallas = new GrammarBuilder();  
        dallas.Append(new SemanticResultValue("Dallas", "DFW"));  
  
        // Create a Choices object and add the cities using implicit conversion from   
        // SemanticResultValue to GrammarBuilder.  
        Choices cities = new Choices();  
        cities.Add(new Choices(new GrammarBuilder[] { chicago, boston, miami, dallas }));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; unit" Usage="grammarBuilder.Append phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3641d-327">추가할 단어의 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-327">The sequence of words to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-328">구를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-328">Appends a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-329">`phrase` 현재 요소 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-329">`phrase` is added to the end of the current sequence of elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="member this.Append : string * System.Speech.Recognition.SubsetMatchingMode -&gt; unit" Usage="grammarBuilder.Append (phrase, subsetMatchingCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3641d-330">추가할 단어의 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-330">The sequence of words to append.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="3641d-331">일치하는 모드는 문법을 사용하여 구를 인식합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-331">The matching mode the grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-332">구의 하위 집합에 대한 요소를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-332">Appends an element for a subset of a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-333">하위 집합 요소가 현재 요소 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-333">The subset element is added to the end of the current sequence of elements.</span></span> <span data-ttu-id="3641d-334">문자열을 사용 하 여 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [GrammarBuilder 문법을 만들기 위해 사용 하 여 문자열](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-334">For more information about building a speech recognition grammar using strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
 <span data-ttu-id="3641d-335">모드와 일치 하는 하위 집합의 사용에 대 한 자세한 정보를 참조 하십시오. <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-335">For detailed information on the use of subset matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-336">다음 예제에서는 각각에 대해 음성 인식 문법 만듭니다 <xref:System.Speech.Recognition.SubsetMatchingMode> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-336">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value.</span></span> <span data-ttu-id="3641d-337">예를 들어 생성 된 문법 `OrderedSubset` 인식, 구 "세 4 개의 5" 및 "하나 세 5", 및 문법 `Subsequence` 구문을 인식 "세 4 개의 5", 하지만 구 하지 "하나 세 5"입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-337">For example, the generated grammar `OrderedSubset` recognizes the phrases, "three four five" and "one three five", and the grammar `Subsequence` recognizes the phrase "three four five", but not the phrase, "one three five".</span></span>  
  
```csharp  
  
private Grammar[] CreateSubsetMatchTest()  
{  
  List<Grammar> grammars = new List<Grammar>(4);  
  
  string phrase = "one two three four five six";  
  foreach (SubsetMatchingMode mode in  
    Enum.GetValues(typeof(SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder();  
    gb.Append(phrase, mode);  
  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammars.Add(grammar);  
  }  
  
  return grammars.ToArray();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder * int * int -&gt; unit" Usage="grammarBuilder.Append (builder, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3641d-338">추가할 반복된 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-338">The repeated grammar element to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="3641d-339">입력이 <c>builder</c>가 정의한 요소와 일치하여 일치 항목을 구성해야 하는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-339">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="3641d-340">입력이 <c>builder</c>가 정의한 요소와 일치하여 일치 항목을 구성할 수 있는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-340">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-341">반복된 문법 요소를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-341">Appends a repeated grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-342">값 `minRepeat` 0 보다 크거나 해야의 값 보다 작거나 `maxRepeat`합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-342">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-343">추가 하면 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스는 <xref:System.Speech.Recognition.GrammarBuilder> 개체를 반복 해 서 할 수 있는 여러 의미 체계 요소 또는 키 이름이 동일한 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 수정 된 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 속성은 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-343">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-344">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-344">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-345">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [이해 SemanticResultValue 및 SemanticResultKey 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-345">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-346">다음 예제에서는 "전화" 라는 단어는 선택 사항 "직장 호출 James" 및 "그녀의 휴대 전화에 전화 Anne" 같은 구를 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-346">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="3641d-347"><xref:System.Speech.Recognition.GrammarBuilder> 및 <xref:System.Speech.Recognition.Choices> 개체 문법을 생성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-347"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="3641d-348">예제를 사용 하는 강조 표시는 <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3641d-348">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; unit" Usage="grammarBuilder.Append (phrase, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3641d-349">추가할 반복된 단어의 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-349">The repeated sequence of words to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="3641d-350">입력이 <c>구</c>에 일치하여 일치 항목을 구성해야 하는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-350">The minimum number of times that input matching <c>phrase</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="3641d-351">입력이 <c>구</c>에 일치하여 일치 항목을 구성할 수 있는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-351">The maximum number of times that input matching <c>phrase</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-352">반복된 구를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-352">Appends a repeated phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-353">값 `minRepeat` 0 보다 크거나 해야의 값 보다 작거나 `maxRepeat`합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-353">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-354">다음 예제에서는 "전화" 라는 단어는 선택 사항 "직장 호출 James" 및 "그녀의 휴대 전화에 전화 Anne" 같은 구를 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-354">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="3641d-355"><xref:System.Speech.Recognition.GrammarBuilder> 및 <xref:System.Speech.Recognition.Choices> 개체 문법을 생성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-355"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="3641d-356">예제를 사용 하는 강조 표시는 <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3641d-356">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendDictation">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3641d-357">받아쓰기 문법을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-357">Appends a dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-358"><xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> 메서드를 사용 하면 받아쓰기 문법에 규칙으로 추가 하는 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-358">The <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> methods allow you to append a dictation grammar as a rule to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="3641d-359">받아쓰기 문법에 대 한 자세한 내용은 참조 하십시오. <xref:System.Speech.Recognition.DictationGrammar>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-359">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation();" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : unit -&gt; unit" Usage="grammarBuilder.AppendDictation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3641d-360">기본 받아쓰기 문법을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-360">Appends the default dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-361">받아쓰기 문법에 대 한 자세한 내용은 참조 하십시오. <xref:System.Speech.Recognition.DictationGrammar>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-361">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-362">다음 예제에서는 받아쓰기를 통합 하는 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-362">The following example creates a speech recognition grammar that incorporates dictation.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation();  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation (string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation (category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation(System::String ^ category);" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : string -&gt; unit" Usage="grammarBuilder.AppendDictation category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">
          <span data-ttu-id="3641d-363">추가할 받아쓰기 문법의 범주입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-363">The category of the dictation grammar to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-364">지정된 받아쓰기 문법을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-364">Appends the specified dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-365">맞춤법 받아쓰기 문법을 사용 하려면 설정 `category` 를 `spelling`합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-365">To use the spelling dictation grammar, set `category` to `spelling`.</span></span>  
  
 <span data-ttu-id="3641d-366">받아쓰기 문법에 대 한 자세한 내용은 참조 하십시오. <xref:System.Speech.Recognition.DictationGrammar>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-366">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-367">다음 예제에는 맞춤법 받아쓰기 문법 규칙을 통합 하는 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-367">The following example creates a speech recognition grammar that incorporates the spelling dictation grammar rules.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation("spelling");  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendRuleReference">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3641d-368">문법 파일 또는 문법 규칙을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-368">Appends a grammar file or a grammar rule to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-369"><xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> 문법 파일 또는 파일에서 문법 규칙이 메서드에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-369">The <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> methods can append a grammar file or a grammar rule from a file.</span></span> <span data-ttu-id="3641d-370">이러한 메서드를 사용 하도록 응용 프로그램을 미리 배포 또는 공개적으로 사용할 수 있는 문법 규칙을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-370">These methods allow applications to make use of pre-deployed or publicly available grammar rules.</span></span> <span data-ttu-id="3641d-371">응용 프로그램에는 지정 된 문법 파일의 위치를 읽기 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-371">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="3641d-372">이러한 메서드는 다음 형식에서 음성 인식 문법을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-372">These methods can read a speech recognition grammar from the following formats.</span></span>  
  
-   <span data-ttu-id="3641d-373">W3C에 맞는 XML 형식 파일 [음성 인식 문법 사양 (SRGS) 버전 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)</span><span class="sxs-lookup"><span data-stu-id="3641d-373">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="3641d-374">Microsoft 음성 인식 문법 이진 형식 (.cfg 파일 확장명)를 준수 하는 이진 파일</span><span class="sxs-lookup"><span data-stu-id="3641d-374">Binary files that conform to the Microsoft Speech Recognition Grammar Binary Format (.cfg file extension)</span></span>  
  
 <span data-ttu-id="3641d-375">컴파일 XML 형식 SRGS 문법 파일.cfg 확장명을 가진 이진 문법 파일을 줄일 수는 일치 항목을 검색 하 여 사용 하는 시간 문법 단어와 구 많은 수의 인식을 요구 하는 경우에 특히.</span><span class="sxs-lookup"><span data-stu-id="3641d-375">Compiling an XML-format SRGS grammar file to a binary grammar file with the .cfg extension can reduce the time consumed by searches for a match, especially if the grammar requires recognition of a large number of words and phrases.</span></span> <span data-ttu-id="3641d-376">SRGS 문법 CFG 이진 형식으로 컴파일하는 방법에 대 한 정보를 참조 하십시오. <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-376">For information about compiling SRGS grammars to the CFG binary format, see <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string -&gt; unit" Usage="grammarBuilder.AppendRuleReference path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="3641d-377">지원되는 형식으로 음성 인식 문법을 설명하는 파일 경로나 유니버설 리소스 식별자(URI)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-377">The path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-378">문법 정의 파일을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-378">Appends a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-379">제공 하는 URI는 `path` 인수는 로컬 또는 원격 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-379">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="3641d-380">응용 프로그램에는 지정 된 문법 파일의 위치를 읽기 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-380">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="3641d-381">W3C 음성 인식 문법 사양 (SRGS) 표현 루트 규칙을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-381">A W3C Speech Recognition Grammar Specification (SRGS) representation can define a root rule.</span></span> <span data-ttu-id="3641d-382">이 메서드는 현재 문법 요소 시퀀스를 해당 루트 규칙이 부터는 문법을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-382">This method appends the grammar, beginning with its root rule, to the current sequence of grammar elements.</span></span> <span data-ttu-id="3641d-383">특정 문법 규칙에 추가 하려면 사용 하 여는 <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3641d-383">To append a specific grammar rule, use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-384">다음 C# 예제에서는 이라는 규칙을 사용 하는 음성 인식 문법 `Cities` 로컬 SRGS 파일에 cities.grxml 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-384">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="3641d-385">C# 코드 예제에서는 아래 cities.grxml 파일의 내용이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-385">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar1()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.AppendRuleReference("file://c:/temp/cities.grxml");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 1";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-16" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path, string rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path, string rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String, rule As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path, System::String ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string * string -&gt; unit" Usage="grammarBuilder.AppendRuleReference (path, rule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rule" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="3641d-386">지원되는 형식으로 음성 인식 문법을 설명하는 파일의 경로나 파일의 유니버설 리소스 식별자(URI)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-386">The file path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <param name="rule">
          <span data-ttu-id="3641d-387">추가하는 규칙의 식별자 또는 문법 파일의 기본 루트 규칙을 추가하는 <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-387">The identifier of the rule to append, or <see langword="null" /> to append the default root rule of the grammar file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-388">문법 정의 파일의 지정된 규칙을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-388">Appends the specified rule of a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-389">제공 하는 URI는 `path` 인수는 로컬 또는 원격 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-389">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="3641d-390">응용 프로그램에는 지정 된 문법 파일의 위치를 읽기 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-390">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="3641d-391">사용 하 여 사용할 수 있습니다는 <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> 메서드를 해당 루트 규칙이로 시작 하는 문법 파일을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-391">You can use the use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method to append a grammar file beginning with its root rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-392">다음 C# 예제에서는 이라는 규칙을 사용 하는 음성 인식 문법 `Cities` 로컬 SRGS 파일에 cities.grxml 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-392">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="3641d-393">C# 코드 예제에서는 아래 cities.grxml 파일의 내용이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-393">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar2()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.Append("Does");  
  builder.AppendRuleReference(@"c:\temp\cities.grxml", "Cities");  
  builder.Append("have a shuttle");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendWildcard">
      <MemberSignature Language="C#" Value="public void AppendWildcard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendWildcard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendWildcard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendWildcard();" />
      <MemberSignature Language="F#" Value="member this.AppendWildcard : unit -&gt; unit" Usage="grammarBuilder.AppendWildcard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3641d-394">입력과 일치하는 인식 문법 요소를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-394">Appends a recognition grammar element that matches any input to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-395">와일드 카드 요소의 요소의 현재 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-395">The wildcard element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="3641d-396">와일드 카드 요소의 음성된 단어를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-396">The wildcard element matches any spoken word.</span></span> <span data-ttu-id="3641d-397">배경 잡음 또는 대기 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-397">It does not match background noise or silence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-398">다음 예제를 와일드 카드로 암호 입력을 허용 하는 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-398">The following example creates a grammar that accepts password input as a wildcard.</span></span> <span data-ttu-id="3641d-399">이 예제에서는 연결는 <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> 문법을 암호 입력의 유효성을 검사 하는 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-399">The example attaches a <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event handler to the grammar that validates the password input.</span></span>  
  
```csharp  
private Grammar CreatePasswordGrammar()  
{  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey passwordKey =  
    new SemanticResultKey("Password", wildcardBuilder);  
  
  GrammarBuilder passwordBuilder =  
    new GrammarBuilder("My Password is");  
  passwordBuilder.Append(passwordKey);  
  
  Grammar passwordGrammar = new Grammar(passwordBuilder);  
  passwordGrammar.Name = "Password input";  
  
  passwordGrammar.SpeechRecognized +=  
    new EventHandler<SpeechRecognizedEventArgs>(  
      PasswordInputHandler);  
  
  return passwordGrammar;  
}  
  
// Handle the SpeechRecognized event for the password grammar.  
private void PasswordInputHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  RecognitionResult result = e.Result;  
  SemanticValue semantics = e.Result.Semantics;  
  
  if (semantics.ContainsKey("Password"))  
  {  
    RecognizedAudio passwordAudio =  
      result.GetAudioForWordRange(  
        result.Words[3], result.Words[result.Words.Count - 1]);  
  
    if (IsValidPassword(passwordAudio))  
    {  
      Console.WriteLine("Password accepted.");  
  
      // Add code to handle a valid password here.  
    }  
    else  
    {  
      Console.WriteLine("Invalid password.");  
  
      // Add code to handle an invalid password here.  
    }  
  }  
}  
  
// Validate the password input.   
private bool IsValidPassword(RecognizedAudio passwordAudio)  
{  
  Console.WriteLine("Validating password.");  
  
  // Add password validation code here.  
  
  return false;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3641d-400">음성 인식 문법의 문화권을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-400">Gets or sets the culture of the speech recognition grammar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3641d-401">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" />의 문화권입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-401">The culture of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
          <span data-ttu-id="3641d-402">기본값은 실행 중인 스레드의 <see cref="P:System.Threading.Thread.CurrentUICulture" /> 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-402">The default is the executing thread's <see cref="P:System.Threading.Thread.CurrentUICulture" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-403"><xref:System.Speech.Recognition.Grammar.%23ctor%2A> 생성자 만듭니다는 <xref:System.Speech.Recognition.Grammar> 해당 문화권의 음성 인식기에서 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-403">The <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor creates a <xref:System.Speech.Recognition.Grammar> object that can be used by a speech recognizer of the corresponding culture.</span></span> <span data-ttu-id="3641d-404">만 <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> 의 속성은 <xref:System.Speech.Recognition.GrammarBuilder> 제공 하는 그룹 문법 생성자에 매개 변수가 결과 음성 인식 문법의 culture를 설정 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-404">Only the <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> property of the <xref:System.Speech.Recognition.GrammarBuilder> that is provided as the parameter to the Grammar constructor is used to set the culture of the resulting speech recognition grammar.</span></span>  
  
 <span data-ttu-id="3641d-405">Microsoft Windows와 System.Speech API는 모든 유효한 언어 국가 코드를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-405">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="3641d-406">에 지정 된 언어를 사용 하 여 음성 인식을 수행 하는 `Culture` 속성을 지 원하는 언어 국가 코드를 설치 해야 하는 음성 인식 엔진입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-406">To perform speech recognition using the language specified in the `Culture` property, a speech recognition engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="3641d-407">Microsoft Windows 7과 함께 제공 된 음성 인식 엔진 다음 언어 국가 코드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-407">The speech recognition engines that shipped with Microsoft Windows 7 work with the following language-country codes.</span></span>  
  
-   <span data-ttu-id="3641d-408">en GB입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-408">en-GB.</span></span> <span data-ttu-id="3641d-409">영어 (영국)</span><span class="sxs-lookup"><span data-stu-id="3641d-409">English (United Kingdom)</span></span>  
  
-   <span data-ttu-id="3641d-410">EN-US입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-410">en-US.</span></span> <span data-ttu-id="3641d-411">영어 (미국)</span><span class="sxs-lookup"><span data-stu-id="3641d-411">English (United States)</span></span>  
  
-   <span data-ttu-id="3641d-412">de-DE.</span><span class="sxs-lookup"><span data-stu-id="3641d-412">de-DE.</span></span> <span data-ttu-id="3641d-413">독일어 (독일)</span><span class="sxs-lookup"><span data-stu-id="3641d-413">German (Germany)</span></span>  
  
-   <span data-ttu-id="3641d-414">es-ES 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-414">es-ES.</span></span> <span data-ttu-id="3641d-415">스페인어 (스페인)</span><span class="sxs-lookup"><span data-stu-id="3641d-415">Spanish (Spain)</span></span>  
  
-   <span data-ttu-id="3641d-416">fr-FR.</span><span class="sxs-lookup"><span data-stu-id="3641d-416">fr-FR.</span></span> <span data-ttu-id="3641d-417">프랑스어 (프랑스)</span><span class="sxs-lookup"><span data-stu-id="3641d-417">French (France)</span></span>  
  
-   <span data-ttu-id="3641d-418">일본 JP 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-418">ja-JP.</span></span> <span data-ttu-id="3641d-419">일본어 (일본)</span><span class="sxs-lookup"><span data-stu-id="3641d-419">Japanese (Japan)</span></span>  
  
-   <span data-ttu-id="3641d-420">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="3641d-420">zh-CN.</span></span> <span data-ttu-id="3641d-421">중국어 (중국)</span><span class="sxs-lookup"><span data-stu-id="3641d-421">Chinese (China)</span></span>  
  
-   <span data-ttu-id="3641d-422">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="3641d-422">zh-TW.</span></span> <span data-ttu-id="3641d-423">중국어 (대만)</span><span class="sxs-lookup"><span data-stu-id="3641d-423">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="3641d-424">두 문자 언어 코드 등 "en", "fr" 또는 "es" 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-424">Two-letter language codes such as "en", "fr", or "es" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3641d-425">다음 예제에서는 최대 4 개의 토 핑와 피자 순서에 대 한 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-425">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="3641d-426">구체적으로 설정 된 <xref:System.Speech.Recognition.GrammarBuilder> 개체의 문화권을 영어 (미국)입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-426">It specifically sets the <xref:System.Speech.Recognition.GrammarBuilder> object's culture to English (United States).</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="DebugShowPhrases">
      <MemberSignature Language="C#" Value="public string DebugShowPhrases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DebugShowPhrases" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DebugShowPhrases As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DebugShowPhrases { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DebugShowPhrases : string" Usage="System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3641d-427">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" />가 포함하는 문법의 콘텐츠와 구조를 보여주는 문자열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-427">Gets a string that shows the contents and structure of the grammar contained by the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3641d-428">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" />의 현재 콘텐츠 및 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-428">The current content and structure of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3641d-429">다음 예제에서는 최대 4 개의 토 핑와 피자 순서에 대 한 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-429">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="3641d-430">상태를 기록는 <xref:System.Speech.Recognition.GrammarBuilder> 문법을 만들기 전에 콘솔에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-430">It writes the status of the <xref:System.Speech.Recognition.GrammarBuilder> to the console before creating the grammar.</span></span> <span data-ttu-id="3641d-431">이 메서드는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-431">This method generates the following output:</span></span>  
  
-   `GrammarBuilder status: I would like a [cheese,mushroom,tomato,onion,anchovy,chic ken,pepperoni] and [cheese,mushroom,tomato,onion,anchovy,chicken,pepperoni] pizza`  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Write the contents and structure of the GrammarBuilder to the console.  
  Console.WriteLine("Grammar content and structure: {0}", gb.DebugShowPhrases);  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Addition">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3641d-432">두 문법 요소의 시퀀스에 해당하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-432">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that corresponds to a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-433">새 요소의 순서를 결정 하는 피연산자의 순서 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-433">The order of the operands determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-434">결합 하는 경우 주의 것이 좋습니다 <xref:System.Speech.Recognition.Choices> 또는 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 다른 문법 요소와 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="3641d-434">Caution is recommended when combining <xref:System.Speech.Recognition.Choices> or <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements.</span></span> <span data-ttu-id="3641d-435">음성 인식기에서 동일한 키 이름의 의미 체계는 중복 요소 또는 동일한 의미 체계 요소의 값을 수정할 반복 해 서 수 있는 여러 의미 요소를 포함 하는 음성 인식 문법을 사용 하는 경우 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-435">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> <span data-ttu-id="3641d-436">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [를 사용 하 여 SemanticResultKey 및 SemanticResultValue 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-436">For more information about building a speech recognition grammar that contains semantic information, see [Using SemanticResultKey and SemanticResultValue Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3641d-437">빌드 및 음성 인식 문법을 사용 하는 방법에 대 한 자세한 내용은 참조 [음성 인식](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) 및 [GrammarBuilder 문법 만드는](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-437">For more information about building and using speech recognition grammars, see [Speech Recognition](http://msdn.microsoft.com/library/6a7dc524-07fc-4862-8d48-8c10dc64b919) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="3641d-438">대체 항목 집합을 나타내는 첫 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-438">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="3641d-439">두 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-439">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-440">
            <see cref="T:System.Speech.Recognition.Choices" /> 개체와 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체를 차례로 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-440">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-441">
            <paramref name="choices" /> 매개 변수 다음에 나오는 <paramref name="builder" /> 매개 변수의 시퀀스에 대해 <see cref="T:System.Speech.Recognition.GrammarBuilder" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-441">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-442"><xref:System.Speech.Recognition.GrammarBuilder> 변환할 때 다음과 같은 클래스를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-442"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3641d-443">이 메서드에 대 한 위에 나열 된 개체는 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-443">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="3641d-444">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-444">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-445">결합 하면 <xref:System.Speech.Recognition.Choices> 및 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 반복적으로 수정할 수 있는 여러 의미 체계 요소 또는 키 이름이 동일한 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인은 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-445">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-446">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-446">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-447">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [이해 SemanticResultValue 및 SemanticResultKey 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-447">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3641d-448">이 연산자는 해당 하는 방법은 <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3641d-448">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3641d-449">문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-449">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="3641d-450">두 번째 문법 요소로, 대체 요소의 집합을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-450">The second grammar element, which represents a set of alternative elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-451">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" />와 그 뒤에 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 포함하는 새 <see cref="T:System.Speech.Recognition.Choices" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-451">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a <see cref="T:System.Speech.Recognition.Choices" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-452">
            <paramref name="builder" /> 매개 변수 다음에 나오는 <paramref name="choices" /> 매개 변수의 시퀀스에 대해 <see cref="T:System.Speech.Recognition.GrammarBuilder" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-452">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="choices" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-453"><xref:System.Speech.Recognition.GrammarBuilder> 변환할 때 다음과 같은 클래스를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-453"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3641d-454">이 메서드에 대 한 위에 나열 된 개체는 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-454">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="3641d-455">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-455">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-456">결합 하면 <xref:System.Speech.Recognition.Choices> 및 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 반복적으로 수정할 수 있는 여러 의미 체계 요소 또는 키 이름이 동일한 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인은 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-456">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-457">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-457">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-458">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [이해 SemanticResultValue 및 SemanticResultKey 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-458">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3641d-459">이 연산자는 해당 하는 방법은 <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3641d-459">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3641d-460">다음 예제에서는 두 개의 구 인식할 수 있는 음성 인식 문법 "배경 *색*" 및 "로 배경 설정 *색*" 여기서 *색* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-460">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3641d-461">다양 한 형식을 사용 하는 최종 문법 등 빌드를 [문자열](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-461">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder1 + builder2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="3641d-462">문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-462">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="3641d-463">두 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-463">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-464">두 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체의 시퀀스를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-464">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-465">
            <paramref name="builder1" /> 매개 변수 다음에 나오는 <paramref name="builder2" /> 매개 변수의 시퀀스에 대해 <see cref="T:System.Speech.Recognition.GrammarBuilder" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-465">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> parameter followed by the <paramref name="builder2" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-466"><xref:System.Speech.Recognition.GrammarBuilder> 변환할 때 다음과 같은 클래스를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-466"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3641d-467">이 메서드에 대 한 위에 나열 된 개체는 `builder1` 및 `builder2` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-467">This method accepts the objects listed above for the `builder1` and `builder2` parameters.</span></span> <span data-ttu-id="3641d-468">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-468">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3641d-469">결합 하면 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 반복적으로 수정할 수 있는 여러 의미 체계 요소 또는 키 이름이 동일한 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인은 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 속성의는 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-469">When you combine <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="3641d-470">음성 인식기에서 이러한 상황이 발생 하는 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-470">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="3641d-471">의미 체계 정보를 포함 하는 음성 인식 문법을 작성 하는 방법에 대 한 자세한 내용은 참조 [이해 SemanticResultValue 및 SemanticResultKey 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c)합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-471">For more information about building a speech recognition grammar that contains semantic information, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c).</span></span>  
  
 <span data-ttu-id="3641d-472">이 연산자는 해당 하는 방법은 <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3641d-472">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="3641d-473">문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-473">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="3641d-474">두 번째 문법 요소로, 단어의 시퀀스를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-474">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-475">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" />와 그 뒤에 구를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-475">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-476">
            <paramref name="builder" /> 매개 변수 다음에 나오는 <paramref name="phrase" /> 매개 변수의 시퀀스에 대해 <see cref="T:System.Speech.Recognition.GrammarBuilder" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-476">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="phrase" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-477"><xref:System.Speech.Recognition.GrammarBuilder> 변환할 때 다음과 같은 클래스를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-477"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3641d-478">이 메서드에 대 한 위에 나열 된 개체는 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-478">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="3641d-479">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-479">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="3641d-480">이 연산자는 해당 하는 방법은 <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3641d-480">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="phrase + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3641d-481">첫 번째 문법 요소로, 단어의 시퀀스를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-481">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="3641d-482">두 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-482">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-483">구와 그 뒤에 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-483">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-484">
            <paramref name="phrase" /> 매개 변수 다음에 나오는 <paramref name="builder" /> 매개 변수의 시퀀스에 대해 <see cref="T:System.Speech.Recognition.GrammarBuilder" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-484">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-485"><xref:System.Speech.Recognition.GrammarBuilder> 변환할 때 다음과 같은 클래스를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-485"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3641d-486">이 메서드에 대 한 위에 나열 된 개체는 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-486">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="3641d-487">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-487">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="3641d-488">이 연산자는 해당 하는 방법은 <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3641d-488">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3641d-489">다음 예제에서는 두 개의 구 인식할 수 있는 음성 인식 문법 "배경 *색*" 및 "로 배경 설정 *색*" 여기서 *색* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-489">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="3641d-490">다양 한 형식을 사용 하는 최종 문법 등 빌드를 [문자열](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-490">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3641d-491">다른 형식을 <see cref="T:System.Speech.Recognition.GrammarBuilder" />로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-491">Converts another type to a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-492">암시적 변환의 새 인스턴스를 만듭니다. <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-492">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3641d-493">각각의 다음 클래스를 캐스팅할 수 있습니다는 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-493">You can cast each of the following classes to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="3641d-494">각각의 암시적 변환에서는 생성자를 호출 하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-494">Each of the implicit casts is equivalent to calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="3641d-495">변환할 대체 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-495">The set of alternatives to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-496">
            <see cref="T:System.Speech.Recognition.Choices" /> 개체를 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-496">Converts a <see cref="T:System.Speech.Recognition.Choices" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-497">변환된 <see cref="T:System.Speech.Recognition.Choices" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-497">The converted <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-498">암시적 변환의 새 인스턴스를 만듭니다. <xref:System.Speech.Recognition.GrammarBuilder>합니다. 이 변환 연산자가 호출 같음 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> 지정 하 고 `choices` 에 대 한는 `alternateChoices`합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-498">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `choices` for the `alternateChoices`.</span></span>  
  
 <span data-ttu-id="3641d-499">이 연산자는 해당 하는 방법은 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3641d-499">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3641d-500">다음 예제에서는 "yes" 또는 "no" 질문에 대 한 응답을 인식할 수 있는 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-500">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="3641d-501">암시적 변환 연산자의 생성에 사용 되는 <xref:System.Speech.Recognition.SemanticResultValue> 에서 개체는 <xref:System.Speech.Recognition.Choices> 생성 하는 개체는 <xref:System.Speech.Recognition.Choices> 개체 두 개에서 <xref:System.Speech.Recognition.SemanticResultValue> 개체를 및 생성에는 <xref:System.Speech.Recognition.Grammar> 는 에서개체<xref:System.Speech.Recognition.SemanticResultKey> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-501">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultKey semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultKey semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticKey As SemanticResultKey) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultKey ^ semanticKey);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticKey" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="semanticKey">
          <span data-ttu-id="3641d-502">변환할 의미 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-502">The semantic key to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-503">
            <see cref="T:System.Speech.Recognition.SemanticResultKey" /> 개체를 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-503">Converts a <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-504">변환된 <see cref="T:System.Speech.Recognition.SemanticResultKey" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-504">The converted <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-505">암시적 변환의 새 인스턴스를 만듭니다. <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-505">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3641d-506">이 변환 연산자가 호출 같음 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> 지정 하 고 `semanticKey` 에 대 한는 `key`합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-506">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticKey` for the `key`.</span></span>  
  
 <span data-ttu-id="3641d-507">이 연산자는 해당 하는 방법은 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3641d-507">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3641d-508">다음 예제에서는 "yes" 또는 "no" 질문에 대 한 응답을 인식할 수 있는 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-508">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="3641d-509">암시적 변환 연산자의 생성에 사용 되는 <xref:System.Speech.Recognition.SemanticResultValue> 에서 개체는 <xref:System.Speech.Recognition.Choices> 생성 하는 개체는 <xref:System.Speech.Recognition.Choices> 개체 두 개에서 <xref:System.Speech.Recognition.SemanticResultValue> 개체를 및 생성에는 <xref:System.Speech.Recognition.Grammar> 는 에서개체<xref:System.Speech.Recognition.SemanticResultKey> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-509">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultValue semanticValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultValue semanticValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticValue As SemanticResultValue) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultValue ^ semanticValue);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticValue" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="semanticValue">
          <span data-ttu-id="3641d-510">변환할 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-510">The <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-511">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 개체를 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-511">Converts a <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-512">변환된 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-512">The converted <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-513">암시적 변환의 새 인스턴스를 만듭니다. <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-513">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3641d-514">이 변환 연산자가 호출 같음 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> 지정 하 고 `semanticValue` 에 대 한는 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-514">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticValue` for the `value`.</span></span>  
  
 <span data-ttu-id="3641d-515">이 연산자는 해당 하는 방법은 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3641d-515">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3641d-516">다음 예제에서는 "yes" 또는 "no" 질문에 대 한 응답을 인식할 수 있는 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-516">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="3641d-517">암시적 변환 연산자의 생성에 사용 되는 <xref:System.Speech.Recognition.SemanticResultValue> 에서 개체는 <xref:System.Speech.Recognition.Choices>생성 하는 개체는 <xref:System.Speech.Recognition.Choices> 개체 두 개에서 <xref:System.Speech.Recognition.SemanticResultValue> 개체를 및 생성에는 <xref:System.Speech.Recognition.Grammar> 는 에서개체<xref:System.Speech.Recognition.SemanticResultKey> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-517">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices>object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="3641d-518">변환할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-518">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3641d-519">문자열을 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-519">Converts a string to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3641d-520">변환된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3641d-520">The converted string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3641d-521">암시적 변환의 새 인스턴스를 만듭니다. <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-521">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="3641d-522">이 변환 연산자가 호출 같음 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> 동일한를 지정 하 고 `phrase`합니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-522">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying the same `phrase`.</span></span>  
  
 <span data-ttu-id="3641d-523">이 연산자는 해당 하는 방법은 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3641d-523">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="3641d-524">다음 예제에서는 <xref:System.Speech.Recognition.GrammarBuilder> 및 <xref:System.Speech.Recognition.Choices> 두 구 중 하나를 인식할 수 있는 문법을 생성 하는 개체 "배경 *colorChoice*" 또는 "배경 설정 *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="3641d-524">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="3641d-525">에 대 한 허용 되는 값의 목록을 만든 후 *colorChoice* 를 사용 하는 <xref:System.Speech.Recognition.Choices> 개체를 예제에서는 두 개의 초기화 합니다 <xref:System.Speech.Recognition.GrammarBuilder> 개체 `makePhrase` 및 `setPhrase`, 문자열에서 암시적 변환을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-525">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using implicit conversion from string objects.</span></span>  
  
 <span data-ttu-id="3641d-526">이 예에서는 마지막으로 만듭니다는 <xref:System.Speech.Recognition.Grammar> 에서 개체는 <xref:System.Speech.Recognition.Choices> 개체 캐스팅는 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3641d-526">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
  </Members>
</Type>