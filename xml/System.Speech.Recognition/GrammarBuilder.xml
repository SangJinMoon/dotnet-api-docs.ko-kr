<Type Name="GrammarBuilder" FullName="System.Speech.Recognition.GrammarBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b9acf95eaa6f22da284f0c7784b2bb67c022774" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51893039" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GrammarBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GrammarBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.GrammarBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class GrammarBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class GrammarBuilder" />
  <TypeSignature Language="F#" Value="type GrammarBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4f93e-101">음성 인식 문법에 대 한 제약 조건을 프로그래밍 방식으로 작성 하는 메커니즘을 제공 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4f93e-101">Provides a mechanism for programmatically building the constraints for a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-102">음성 인식 문법 정의 된 XML 형식에 일반적으로 작성 되는 [음성 인식 문법 Specification (SRGS) 버전 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-102">Speech recognition grammars are commonly authored in the XML format defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761).</span></span> <span data-ttu-id="4f93e-103">SRGS 문법을 프로그래밍 방식으로 생성 하려는 같지만 잘 알고 있다면 사용할 수는 <xref:System.Speech.Recognition.SrgsGrammar> 네임 스페이스에는 요소와 특성 SRGS 정의한 멤버가 정확 하 게 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-103">If you are familiar with SRGS but want to generate the grammars programmatically, you can use the <xref:System.Speech.Recognition.SrgsGrammar> namespace, whose members correspond closely to the elements and attributes defined by SRGS.</span></span> <span data-ttu-id="4f93e-104">SRGS, 익숙한 되지 않거나 문법은 효율적으로 수행할 수 많은 일반적인 시나리오를 작성 하는 간단 하 고 프로그래밍 방식으로 접근 방법을 사용할 경우 사용할 수는 <xref:System.Speech.Recognition.GrammarBuilder> 고 <xref:System.Speech.Recognition.Choices> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-104">If you are unfamiliar with SRGS, or you want a lightweight, programmatic approach to authoring grammars with which you can efficiently accomplish many common scenarios; you can use the <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> classes.</span></span>  
  
 <span data-ttu-id="4f93e-105">사용 하 여 <xref:System.Speech.Recognition.GrammarBuilder> 계층적 트리를 작성 하는 개체 구성 <xref:System.Speech.Recognition.Choices> 프리앰블 및 각 노드에서 후 amble 구를 사용 하 여 섞어서 및 의미를 전달 하는 값 의미 체계를 사용 하 여 시드 대체 구가 포함 된 개체를 다시는 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-105">Use <xref:System.Speech.Recognition.GrammarBuilder> objects to build a hierarchical tree composed of <xref:System.Speech.Recognition.Choices> objects that contain alternate phrases, interspersed with preamble and post-amble phrases at each node, and seeded with semantic values that convey  meaning back to the application.</span></span>  
  
 <span data-ttu-id="4f93e-106">사용 하는 <xref:System.Speech.Recognition.GrammarBuilder> 만들려면를 <xref:System.Speech.Recognition.Grammar> 개체, 다음 단계를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-106">To use a <xref:System.Speech.Recognition.GrammarBuilder> to create a <xref:System.Speech.Recognition.Grammar> object, use the following steps.</span></span>  
  
1.  <span data-ttu-id="4f93e-107"><xref:System.Speech.Recognition.GrammarBuilder> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-107">Create a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
2.  <span data-ttu-id="4f93e-108">제약 조건을 추가 합니다 <xref:System.Speech.Recognition.GrammarBuilder>와 같은 <xref:System.String> 개체를 <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, 및 기타 <xref:System.Speech.Recognition.GrammarBuilder> 문법에 대 한 제약 조건을 정의 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-108">Append constraints to the <xref:System.Speech.Recognition.GrammarBuilder>, such as <xref:System.String> objects, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, and other <xref:System.Speech.Recognition.GrammarBuilder> objects that define the constraints for the grammar.</span></span>  
  
3.  <span data-ttu-id="4f93e-109">중 하나를 사용 합니다 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 만들려면 생성자를 <xref:System.Speech.Recognition.Grammar> 개체에서 완료 된 <xref:System.Speech.Recognition.GrammarBuilder> 문법입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-109">Use one of the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructors to create a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder> grammar.</span></span>  
  
 <span data-ttu-id="4f93e-110">사용 하 여 작성 <xref:System.Speech.Recognition.GrammarBuilder> 는 단일 규칙이 목록 또는 목록의 목록 등을 포함 하는 문법에 가장 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-110">Authoring with <xref:System.Speech.Recognition.GrammarBuilder> is best suited to grammars that have a single rule containing lists, or perhaps lists of lists.</span></span> <span data-ttu-id="4f93e-111">여러 규칙이 있는 또는 내부 규칙 참조를 확인 해야 하는 문법을 프로그래밍 방식으로 빌드의 클래스를 사용 합니다 <xref:System.Speech.Recognition.SrgsGrammar> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-111">To programmatically build grammars that have multiple rules, or that need to make internal rule references, use the classes of the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="4f93e-112">인스턴스의 <xref:System.Speech.Recognition.GrammarBuilder> 다른 특정 클래스에서 암시적 변환 하거나 결합 하 여 가져올 수도 있습니다는 <xref:System.Speech.Recognition.GrammarBuilder> 문법에 대 한 제약 조건을 포함 하는 두 번째 개체를 사용 하 여...</span><span class="sxs-lookup"><span data-stu-id="4f93e-112">Instances of <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained by implicit conversions from certain other classes or by combining a  <xref:System.Speech.Recognition.GrammarBuilder> with a second object that contains constraints for a grammar..</span></span> <span data-ttu-id="4f93e-113">자세한 내용은 참조 하세요. 합니다 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 하 고 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자 및 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4f93e-113">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators and the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="4f93e-114">기존 규칙을 추가할 <xref:System.Speech.Recognition.GrammarBuilder>를 사용 합니다 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, 및 <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4f93e-114">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-115">음성 인식기 키 이름이 같은 중복 된 의미 체계 요소 또는 동일한 의미 체계 요소의 값을 반복적으로 수정할 수 있는 여러 의미 체계 요소가 포함 된 음성 인식 문법을 사용 하는 경우 예외가 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-115">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="4f93e-116">디버깅에 도움이 되는 <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> 속성의 현재 상태를 반환 합니다 <xref:System.Speech.Recognition.GrammarBuilder> 문자열로 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-116">To help with debugging, the <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> property returns the current status of the <xref:System.Speech.Recognition.GrammarBuilder> as a string.</span></span>  
  
 <span data-ttu-id="4f93e-117">빌드 및 음성 인식 문법을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [음성 인식](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) 하 고 [GrammarBuilder 문법을 만드는](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-117">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-118">다음 예제에서는 <xref:System.Speech.Recognition.GrammarBuilder> 하 고 <xref:System.Speech.Recognition.Choices> 두 구 중 하나를 인식할 수 있는 문법 구성 하는 개체 "배경 *colorChoice*" 또는 "백그라운드로 *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="4f93e-118">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="4f93e-119">이 예제에서는 사용을 <xref:System.Speech.Recognition.Choices> 개체에 대 한 허용 가능한 값 목록을 만드는 데 *colorChoice* 배열에서 <xref:System.String> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-119">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="4f93e-120">A <xref:System.Speech.Recognition.Choices> 개체는 비슷합니다는 `one-of` SRGS 사양의 요소 말할 때 인식할 수 있는 대체 구 집합을 포함 하 고 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-120">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="4f93e-121">또한이 예제에서는 <xref:System.Speech.Recognition.Choices> 배열을 두 개의 그룹 개체 <xref:System.Speech.Recognition.GrammarBuilder> 결과 문법 인식할 수 있는 대체 구의 쌍 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-121">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="4f93e-122">대체 단어 또는 문구는 대부분의 문법의 구성 요소 및 <xref:System.Speech.Recognition.Choices> 문법을 사용 하 여 생성에 대 한 개체는이 기능을 제공 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-122">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="4f93e-123">이 예에서는 마지막으로 만듭니다는 <xref:System.Speech.Recognition.Grammar> 에서 개체를 <xref:System.Speech.Recognition.GrammarBuilder> 에서 생성 된를 <xref:System.Speech.Recognition.Choices> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-123">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Choices" />
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f93e-124">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-124">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-125">다른 클래스에서 암시적 변환 하거나 결합 하 여이 클래스의 인스턴스를 가져올 수도 있습니다는 <xref:System.Speech.Recognition.GrammarBuilder> 개체에서 두 번째 개체를 사용 하 여 <xref:System.Speech.Recognition.GrammarBuilder>입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-125">Instances of this class can also be obtained by implicit conversions from other classes or by combining a <xref:System.Speech.Recognition.GrammarBuilder> object with a second object to from a new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="4f93e-126">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4f93e-126">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods.</span></span>  
  
 <span data-ttu-id="4f93e-127">기존 제약 조건을 추가 하려면 <xref:System.Speech.Recognition.GrammarBuilder>를 사용 합니다 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, 및 <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> 메서드 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자.</span><span class="sxs-lookup"><span data-stu-id="4f93e-127">To add constraints to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-128">음성 인식기 키 이름이 같은 중복 된 의미 체계 요소 또는 동일한 의미 체계 요소의 값을 반복적으로 수정할 수 있는 여러 의미 체계 요소가 포함 된 음성 인식 문법을 사용 하는 경우 예외가 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-128">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span>
  
 <span data-ttu-id="4f93e-129">빌드 및 음성 인식 문법을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [음성 인식](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) 하 고 [GrammarBuilder 문법을 만드는](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-129">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f93e-130">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 비어 있는 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-130">Initializes a new, empty instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-131">기존 규칙을 추가할 <xref:System.Speech.Recognition.GrammarBuilder> 개체를 사용 합니다 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, 및 <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> 메서드 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자.</span><span class="sxs-lookup"><span data-stu-id="4f93e-131">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder> object, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-132">음성 인식기 키 이름이 같은 중복 된 의미 체계 요소 또는 동일한 의미 체계 요소의 값을 반복적으로 수정할 수 있는 여러 의미 체계 요소가 포함 된 음성 인식 문법을 사용 하는 경우 예외가 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-132">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4f93e-133">다음 예제에서는 <xref:System.Speech.Recognition.GrammarBuilder> 하 고 <xref:System.Speech.Recognition.Choices> 두 구 중 하나를 인식할 수 있는 문법 구성 하는 개체 "배경 *colorChoice*" 또는 "백그라운드로 *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="4f93e-133">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="4f93e-134">이 예제에서는 사용을 <xref:System.Speech.Recognition.Choices> 개체에 대 한 허용 가능한 값 목록을 만드는 데 *colorChoice* 배열에서 <xref:System.String> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-134">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="4f93e-135">A <xref:System.Speech.Recognition.Choices> 개체는 비슷합니다는 `one-of` SRGS 사양의 요소 말할 때 인식할 수 있는 대체 구 집합을 포함 하 고 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-135">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any one of which can be recognized when spoken.</span></span> <span data-ttu-id="4f93e-136">또한이 예제에서는 <xref:System.Speech.Recognition.Choices> 배열을 두 개의 그룹 개체 <xref:System.Speech.Recognition.GrammarBuilder> 결과 문법 인식할 수 있는 대체 구의 쌍 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-136">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="4f93e-137">대체 단어 또는 문구는 대부분의 문법의 구성 요소 및 <xref:System.Speech.Recognition.Choices> 문법을 사용 하 여 생성에 대 한 개체는이 기능을 제공 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-137">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="4f93e-138">이 예에서는 마지막으로 만듭니다는 <xref:System.Speech.Recognition.Grammar> 에서 개체를 <xref:System.Speech.Recognition.GrammarBuilder> 에서 생성 된를 <xref:System.Speech.Recognition.Choices> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-138">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  GrammarBuilder bothPhrases = new GrammarBuilder();  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  bothPhrases.Append(bothChoices);  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="4f93e-139">대체 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-139">The set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-140">대체 집합에서 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-140">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a set of alternatives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-141">대체 단어를 포함 하는 음성 인식 문법을 빌드하는 방법에 대 한 자세한 내용은 참조 하세요. [GrammarBuilder 문법을 만드는를 사용 하 여 선택](https://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd)합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-141">For more information about building a speech recognition grammar that contains alternatives, see [Using Choices to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-142">다음 예제에서는 <xref:System.Speech.Recognition.GrammarBuilder> 하 고 <xref:System.Speech.Recognition.Choices> 두 구 중 하나를 인식할 수 있는 문법 구성 하는 개체 "배경 *colorChoice*" 또는 "백그라운드로 *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="4f93e-142">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="4f93e-143">이 예제에서는 사용을 <xref:System.Speech.Recognition.Choices> 개체에 대 한 허용 가능한 값 목록을 만드는 데 *colorChoice* 배열에서 <xref:System.String> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-143">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="4f93e-144">A <xref:System.Speech.Recognition.Choices> 개체는 비슷합니다는 `one-of` SRGS 사양의 요소 말할 때 인식할 수 있는 대체 구 집합을 포함 하 고 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-144">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="4f93e-145">또한이 예제에서는 <xref:System.Speech.Recognition.Choices> 배열을 두 개의 그룹 개체 <xref:System.Speech.Recognition.GrammarBuilder> 결과 문법 인식할 수 있는 대체 구의 쌍 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-145">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="4f93e-146">대체 단어 또는 문구는 대부분의 문법의 구성 요소 및 <xref:System.Speech.Recognition.Choices> 문법을 사용 하 여 생성에 대 한 개체는이 기능을 제공 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-146">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="4f93e-147">이 예에서는 마지막으로 만듭니다는 <xref:System.Speech.Recognition.Grammar> 에서 개체를 <xref:System.Speech.Recognition.GrammarBuilder> 에서 생성 된를 <xref:System.Speech.Recognition.Choices> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-147">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="4f93e-148">의미 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-148">The semantic key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-149">의미 키에서 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-150">만들 때를 <xref:System.Speech.Recognition.GrammarBuilder> 에서 인스턴스를 <xref:System.Speech.Recognition.SemanticResultValue> 개체 인식 결과에서 반환 될 수 있는 문법에 의미 체계 정보를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-150">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="4f93e-151">사용 하 여 인식 결과의 의미 체계 정보에 액세스할 수 있습니다는 <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> 속성을 <xref:System.Speech.Recognition.RecognizedPhrase>에 대 한 처리기에서 사용할 수 있는 `SpeechRecognized` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-151">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="4f93e-152">경우는 <xref:System.Speech.Recognition.GrammarBuilder> 정의 <xref:System.Speech.Recognition.SemanticResultKey>,이 키와 연결 된 인식 결과의 의미 체계 정보를 검색 하려면 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-152">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="4f93e-153">예를 참조 하세요 <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>에 표시 됩니다 <xref:System.Speech.Recognition.SemanticResultValue> 및 <xref:System.Speech.Recognition.SemanticResultKey>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-153">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-154">생성 하는 경우 <xref:System.Speech.Recognition.GrammarBuilder> 포함 된 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 동일한 키 이름 또는 반복적으로 수정할 수 있는 여러 의미 체계 요소를 사용 하 여 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 합니다 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-154">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-155">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-155">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="4f93e-156">다음 예제에서는 두 구 인식할 수 있는 음성 인식 문법을 "배경 *colorChoice*" 및 "백그라운드로 *colorChoice*" 여기서  *colorChoice* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-156">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="4f93e-157">문법 여러 색 이름 중 하나를 사용 하 게 하 고 응용 프로그램에 인식할 수 있는 색 이름에 대 한 의미 체계 정보를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-157">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="4f93e-158">예제에서는 단일 <xref:System.Speech.Recognition.SemanticResultKey> 사용 하 여 검색할 수 있습니다는 <xref:System.Speech.Recognition.SemanticValue> 연결 된 사용자가 음성으로 변환 하는 색을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-158">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="4f93e-159">예를 들어, 입력에 구의 경우 "집합 배경이 빨강으로"를 의미 체계 "#ff0000"에 대 한 처리기를 사용 하 여 검색할 수 있는 값을 포함 하는 인식 결과 `SpeechRecognized` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-159">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="4f93e-160">이 예제에서는 사용 <xref:System.String>, <xref:System.Speech.Recognition.Choices>를 <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 마지막에 포함 된 모든 제약 조건을 작성 하는 개체 <xref:System.Speech.Recognition.GrammarBuilder> 개체 `bothPhrases`합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-160">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="4f93e-161">마지막으로 생성 합니다는 <xref:System.Speech.Recognition.Grammar> 개체에서 완료 된 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-161">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices object for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the Grammar object from the GrammarBuilder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f93e-162">의미 값이거나 이름/값 쌍입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-162">The semantic value or name/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-163">의미 값에서 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-163">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-164">만들 때를 <xref:System.Speech.Recognition.GrammarBuilder> 에서 인스턴스를 <xref:System.Speech.Recognition.SemanticResultValue> 개체 인식 결과에서 반환 될 수 있는 문법에 의미 체계 정보를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-164">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="4f93e-165">사용 하 여 인식 결과의 의미 체계 정보에 액세스할 수 있습니다는 <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> 속성을 <xref:System.Speech.Recognition.RecognizedPhrase>에 대 한 처리기에서 사용할 수 있는 `SpeechRecognized` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-165">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="4f93e-166">경우는 <xref:System.Speech.Recognition.GrammarBuilder> 정의 <xref:System.Speech.Recognition.SemanticResultKey>,이 키와 연결 된 인식 결과의 의미 체계 정보를 검색 하려면 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-166">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="4f93e-167">예를 참조 하세요 <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>에 표시 됩니다 <xref:System.Speech.Recognition.SemanticResultValue> 및 <xref:System.Speech.Recognition.SemanticResultKey>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-167">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-168">생성 하는 경우 <xref:System.Speech.Recognition.GrammarBuilder> 포함 된 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 동일한 키 이름 또는 반복적으로 수정할 수 있는 여러 의미 체계 요소를 사용 하 여 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 합니다 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-168">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-169">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-169">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="4f93e-170">다음 예제에서는 두 구 인식할 수 있는 음성 인식 문법을 "배경 *colorChoice*" 및 "백그라운드로 *colorChoice*" 여기서  *colorChoice* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-170">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="4f93e-171">문법 여러 색 이름 중 하나를 사용 하 게 하 고 응용 프로그램에 인식할 수 있는 색 이름에 대 한 의미 체계 정보를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-171">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="4f93e-172">예제에서는 단일 <xref:System.Speech.Recognition.SemanticResultKey> 사용 하 여 검색할 수 있습니다는 <xref:System.Speech.Recognition.SemanticValue> 연결 된 사용자가 음성으로 변환 하는 색을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-172">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="4f93e-173">예를 들어, 입력에 구의 경우 "집합 배경이 빨강으로"를 의미 체계 "#ff0000"에 대 한 처리기를 사용 하 여 검색할 수 있는 값을 포함 하는 인식 결과 `SpeechRecognized` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-173">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="4f93e-174">이 예제에서는 사용 <xref:System.String>, <xref:System.Speech.Recognition.Choices>를 <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 마지막에 포함 된 모든 제약 조건을 작성 하는 개체 <xref:System.Speech.Recognition.GrammarBuilder> 개체 `bothPhrases`합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-174">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="4f93e-175">마지막으로 생성 합니다는 <xref:System.Speech.Recognition.Grammar> 개체에서 완료 된 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-175">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the grammar from the grammar builder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder phrase" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="4f93e-176">단어의 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-176">The sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-177">단어 시퀀스에서 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-177">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-178">구는 스피치 인식 그래 머 인식할 수 있는 정확한 음성된 구를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-178">The phrase represents an exact spoken phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="4f93e-179">문자열이 포함 된 음성 인식 문법을 빌드하는 방법에 대 한 자세한 내용은 참조 하세요. [GrammarBuilder 문법을 만드는를 사용 하 여 문자열](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114)합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-179">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-180">다음 예제에서는 <xref:System.Speech.Recognition.GrammarBuilder> 하 고 <xref:System.Speech.Recognition.Choices> 두 구 중 하나를 인식할 수 있는 문법 구성 하는 개체 "배경 *colorChoice*" 또는 "백그라운드로 *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="4f93e-180">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="4f93e-181">에 대 한 허용 되는 값의 목록을 만든 후 *colorChoice* 사용 하 여를 <xref:System.Speech.Recognition.Choices> 개체를 두 예제에서는 초기화 <xref:System.Speech.Recognition.GrammarBuilder> 개체를 `makePhrase` 및 `setPhrase`, 인수로 문자열을 사용 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-181">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using a string as an argument.</span></span>  
  
 <span data-ttu-id="4f93e-182">이 예에서는 마지막으로 만듭니다는 <xref:System.Speech.Recognition.Grammar> 에서 개체를 <xref:System.Speech.Recognition.Choices> 개체를 캐스팅할를 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-182">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * System.Speech.Recognition.SubsetMatchingMode -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, subsetMatchingCriteria)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="4f93e-183">단어의 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-183">The sequence of words.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="4f93e-184">일치하는 모드는 언어 인식 문법을 사용하여 구를 인식합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-184">The matching mode the speech recognition grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-185">단어 시퀀스의 하위 집합에 대한 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-185">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class for a subset of a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-186">`phrase` 스피치 인식 그래 머 인식할 수 있는 구 매개 변수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-186">The `phrase` parameter represents the phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="4f93e-187">`subsetMatchingMode` 매개 변수는 전체 구가의 성공적인 인식을 위해 읽을 수 있는 구문의 하위 집합을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-187">The `subsetMatchingMode` parameter specifies a subset of the phrase that can be spoken to achieve successful recognition of the entire phrase.</span></span> <span data-ttu-id="4f93e-188">사용자가 항목과 일치 하는 전체 이름을 사용 하지 않고도 긴 이름이 있는 항목의 목록이 포함 된 문법을 만드는 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-188">You can use this to create a grammar with a list of entries that have long names, without requiring users to speak an entire name to match an item.</span></span>  
  
 <span data-ttu-id="4f93e-189">일치 하는 모드에 대 한 자세한 내용은 참조 하세요. <xref:System.Speech.Recognition.SubsetMatchingMode>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-189">For more information about the matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode>.</span></span> <span data-ttu-id="4f93e-190">문자열이 포함 된 음성 인식 문법을 빌드하는 방법에 대 한 자세한 내용은 참조 하세요. [GrammarBuilder 문법을 만드는를 사용 하 여 문자열](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114)합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-190">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-191">다음 예제에서는 각각에 대 한 음성 인식 문법을 만드는 <xref:System.Speech.Recognition.SubsetMatchingMode> 값과 일치 하는 모드 문법 중에서 선택 하는 것에 대 한 문법입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-191">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value and a grammar for choosing between the matching mode grammars.</span></span> <span data-ttu-id="4f93e-192">경우 값 `phrase` 는 "하나 두 3 4 5 6 7", 시퀀스 문법 인식 입력 한 다음 "두 세 4", 하지만 입력 하지 "하나 세 5".</span><span class="sxs-lookup"><span data-stu-id="4f93e-192">If the value of `phrase` is "one two three four five six seven", then the Subsequence grammar recognizes the input "two three four", but not the input "one three five".</span></span> <span data-ttu-id="4f93e-193">그러나 일부 순서가 지정 된 문법 모두 이러한 입력을 인식합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-193">However, the Ordered Subset grammar recognizes both of these inputs.</span></span>  
  
```csharp  
  
private static IEnumerable<Grammar>  
  CreateMatchingModeGrammars(string phrase)  
{  
  List<Grammar> grammars = new List<Grammar>(5);  
  
  Choices modeChoice = new Choices();  
  Type enumType = typeof(SubsetMatchingMode);  
  foreach (SubsetMatchingMode mode in Enum.GetValues(enumType))  
  {  
    string modeName = Enum.GetName(enumType, mode);  
    modeName = BreakAtCaps(modeName);  
  
    GrammarBuilder builder = new GrammarBuilder(phrase, mode);  
    Grammar modeGrammar = new Grammar(builder);  
    modeGrammar.Name = modeName;  
    modeGrammar.Enabled = false;  
    grammars.Add(modeGrammar);  
  
    modeChoice.Add(modeName);  
  }  
  
  Grammar choiceGrammar = new Grammar(modeChoice);  
  choiceGrammar.Name = "choice";  
  grammars.Add(choiceGrammar);  
  
  return grammars;  
}  
  
// Insert spaces preceding each uppercase letter in a string.   
private static string BreakAtCaps(string item)  
{  
  if (item == null || item.Length == 0)  
  {  
    return item;  
  }  
  
  StringBuilder sb = new StringBuilder(item[0].ToString());  
  for (int i = 1; i < item.Length; i++)  
  {  
    char c = item[i];  
    if (char.IsUpper(c))  
    {  
      sb.Append(" ");  
    }  
    sb.Append(c);  
  }  
  
  return sb.ToString();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SubsetMatchingMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.GrammarBuilder * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (builder, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="4f93e-194">반복된 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-194">The repeated element.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="4f93e-195">입력이 <c>builder</c>가 정의한 요소와 일치하여 일치 항목을 구성해야 하는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-195">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="4f93e-196">입력이 <c>builder</c>가 정의한 요소와 일치하여 일치 항목을 구성할 수 있는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-196">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-197">반복된 요소에서 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-197">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a repeated element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-198">경우 값 `minRepeat` 가 0 이면 새 <xref:System.Speech.Recognition.GrammarBuilder> 선택적 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-198">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="4f93e-199">값 `minRepeat` 0 보다 크거나 해야 값 보다 작거나 같으면 `maxRepeat`합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-199">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-200">에 대 한 반복을 지정 하는 경우 <xref:System.Speech.Recognition.GrammarBuilder> 포함 된 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스에서 동일한 키 이름 또는 합니다 를반복적으로수정할수있는여러의미체계요소를사용하여의미체계는중복요소를만들지않으려면있는지확인<xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-200">When you specify repeats for <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-201">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-201">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="4f93e-202">다음 예제에서는 피자를 주문에 대 한 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-202">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="4f93e-203">선택 사항, opening 구 뒤에 1 ~ 4 개의 토 핑을 시작 하 고 "피자" 라는 단어를 사용 하 여 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-203">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object from a string array of alternative toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="4f93e-204">반복된 단어의 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-204">The repeated sequence of words.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="4f93e-205">입력이 구에 일치하여 일치 항목을 구성해야 하는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-205">The minimum number of times that input matching the phrase must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="4f93e-206">입력이 구에 일치하여 일치 항목을 구성할 수 있는 최대 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-206">The maximum number of times that input matching the phrase can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-207">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" />의 단어의 시퀀스에서의 <see cref="T:System.String" /> 클래스의 새 인스턴스를 초기화하며 <see cref="T:System.String" />이 얼마나 반복될 수 있는지를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-207">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from the sequence of words in a <see cref="T:System.String" /> and specifies how many times the <see cref="T:System.String" /> can be repeated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-208">경우 값 `minRepeat` 가 0 이면 새 <xref:System.Speech.Recognition.GrammarBuilder> 선택적 요소를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-208">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="4f93e-209">값 `minRepeat` 0 보다 크거나 해야 값 보다 작거나 같으면 `maxRepeat`합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-209">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span> <span data-ttu-id="4f93e-210">문자열이 포함 된 음성 인식 문법을 빌드하는 방법에 대 한 자세한 내용은 참조 하세요. [GrammarBuilder 문법을 만드는를 사용 하 여 문자열](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114)합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-210">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-211">다음 예제에서는 피자를 주문에 대 한 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-211">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="4f93e-212">선택 사항, opening 구 뒤에 1 ~ 4 개의 토 핑을 시작 하 고 "피자" 라는 단어를 사용 하 여 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-212">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f93e-213">두 문법 요소의 시퀀스를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-213">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-214">정적 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> 메서드는 다양성을 만드는 다양 한 형식을 결합할 수 있습니다 하 고 유연 하 게 문법 사용 하 여 빌드한 다른 메커니즘을 제공 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-214">The static <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods provide another mechanism by which you can combine various types to create diversity and flexibility in grammars built with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="4f93e-215">이러한 메서드는 정적 해당 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 에서도 정의 되는 메서드는 <xref:System.Speech.Recognition.GrammarBuilder> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-215">These methods correspond to the static <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods, which are also defined on the <xref:System.Speech.Recognition.GrammarBuilder> class.</span></span> <span data-ttu-id="4f93e-216">새 요소의 순서를 결정 하는 매개 변수의 순서 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-216">The order of the parameters determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="4f93e-217">A <xref:System.Speech.Recognition.GrammarBuilder> 에서 가져올 수도 있습니다 <xref:System.Speech.Recognition.Choices>를 <xref:System.Speech.Recognition.SemanticResultKey>를 <xref:System.Speech.Recognition.SemanticResultValue>, 및 [문자열](https://go.microsoft.com/fwlink/?LinkId=159733) 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-217">A <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and [String](https://go.microsoft.com/fwlink/?LinkId=159733) objects.</span></span> <span data-ttu-id="4f93e-218">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-218">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-219">음성 인식기 키 이름이 같은 중복 된 의미 체계 요소 또는 동일한 의미 체계 요소의 값을 반복적으로 수정할 수 있는 여러 의미 체계 요소가 포함 된 음성 인식 문법을 사용 하는 경우 예외가 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-219">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="4f93e-220">빌드 및 음성 인식 문법을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [음성 인식](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) 하 고 [GrammarBuilder 문법을 만드는](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-220">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (choices, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="4f93e-221">대체 항목 집합을 나타내는 첫 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-221">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="4f93e-222">두 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-222">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-223">
            <see cref="T:System.Speech.Recognition.Choices" /> 개체와 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체를 차례로 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-223">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-224">
            <paramref name="choices" /> 요소와 <paramref name="builder" /> 요소 시퀀스에 대한 <see cref="T:System.Speech.Recognition.GrammarBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-224">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-225"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 암시적 변환을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-225"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="4f93e-226">이 메서드는 개체에 대해 위에 나열 된 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-226">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="4f93e-227">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-227">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-228">결합 하면 <xref:System.Speech.Recognition.Choices> 하 고 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스에서 동일한 키 이름 또는 반복적으로 수정할 수 있는 여러 의미 체계 요소를 사용 하 여 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 합니다 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-228">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-229">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-229">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="4f93e-230">의미 체계 정보가 포함 된 음성 인식 문법을 빌드하는 방법에 대 한 자세한 내용은 참조 하십시오 [GrammarBuilder 문법을 추가 의미 체계](https://msdn.microsoft.com/library/hh361581.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-230">For more information about building a speech recognition grammar that contains semantic information, see [Add Semantics to a GrammarBuilder Grammar](https://msdn.microsoft.com/library/hh361581.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, choices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="4f93e-231">문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-231">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="4f93e-232">두 번째 문법 요소로, 대체 요소의 집합을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-232">The second grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-233">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체와 <see cref="T:System.Speech.Recognition.Choices" /> 개체를 차례로 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-233">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-234">
            <paramref name="builder" /> 요소와 <paramref name="choices" /> 요소 시퀀스에 대한 <see cref="T:System.Speech.Recognition.GrammarBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-234">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="choices" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-235"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 암시적 변환을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-235"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="4f93e-236">이 메서드는 개체에 대해 위에 나열 된 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-236">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="4f93e-237">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-237">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-238">결합 하면 <xref:System.Speech.Recognition.Choices> 하 고 <xref:System.Speech.Recognition.GrammarBuilder> 포함 된 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 다른 문법 요소를 사용 하 여 인스턴스는 동일한 키 이름 또는 의미 체계는 여러 요소를 사용 하 여 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 반복적으로 수정할 수는 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-238">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-239">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-239">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="4f93e-240">다음 예제에서는 두 구 인식할 수 있는 음성 인식 문법을 "배경 *color*" 및 "백그라운드로 *색*" 여기서 *색* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-240">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="4f93e-241">다양 한 형식 최종 문법을 같은 빌드에 사용 되 [문자열](https://go.microsoft.com/fwlink/?LinkId=159733)를 <xref:System.Speech.Recognition.Choices>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-241">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="4f93e-242">에 대 한 호출에서 명시적 캐스트 연산자는 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> 메서드는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-242">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder1, builder2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="4f93e-243">문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-243">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="4f93e-244">두 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-244">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-245">두 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체의 시퀀스를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-245">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-246">
            <paramref name="builder1" /> 요소와 <paramref name="builder2" /> 요소 시퀀스에 대한 <see cref="T:System.Speech.Recognition.GrammarBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-246">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> element followed by the <paramref name="builder2" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-247"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 암시적 변환을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-247"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="4f93e-248">이 메서드는 개체에 대해 위에 나열 된 `builder1` 또는 `builder2` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-248">This method accepts the objects listed above for the `builder1` or `builder2` parameter.</span></span>  
  
 <span data-ttu-id="4f93e-249">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-249">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-250">결합 하면 <xref:System.Speech.Recognition.Choices> 하 고 <xref:System.Speech.Recognition.GrammarBuilder> 포함 된 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 다른 문법 요소를 사용 하 여 인스턴스는 동일한 키 이름 또는 의미 체계는 여러 요소를 사용 하 여 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 반복적으로 수정할 수는 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-250">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-251">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-251">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="4f93e-252">다음 예제에서는 두 구 인식할 수 있는 음성 인식 문법을 "배경 *color*" 및 "백그라운드로 *색*" 여기서 *색* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-252">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="4f93e-253">다양 한 형식 최종 문법을 같은 빌드에 사용 되 [문자열](https://go.microsoft.com/fwlink/?LinkId=159733)를 <xref:System.Speech.Recognition.Choices>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-253">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="4f93e-254">에 대 한 호출에서 명시적 캐스트 연산자는 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> 메서드는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-254">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, phrase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="4f93e-255">문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-255">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="4f93e-256">두 번째 문법 요소로, 단어의 시퀀스를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-256">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-257">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체와 그 뒤에 구를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-257">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-258">
            <paramref name="builder" /> 요소와 <paramref name="phrase" /> 요소 시퀀스에 대한 <see cref="T:System.Speech.Recognition.GrammarBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-258">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="phrase" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-259"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 암시적 변환을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-259"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="4f93e-260">이 메서드는 개체에 대해 위에 나열 된 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-260">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="4f93e-261">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-261">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-262">다음 예제에서는 두 구 인식할 수 있는 음성 인식 문법을 "배경 *color*" 및 "백그라운드로 *색*" 여기서 *색* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-262">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="4f93e-263">다양 한 형식 최종 문법을 같은 빌드에 사용 되 [문자열](https://go.microsoft.com/fwlink/?LinkId=159733)를 <xref:System.Speech.Recognition.Choices>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-263">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="4f93e-264">에 대 한 호출에서 명시적 캐스트 연산자는 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> 메서드는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-264">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (phrase, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="4f93e-265">첫 번째 문법 요소로, 단어의 시퀀스를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-265">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="4f93e-266">두 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-266">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-267">구와 그 뒤에 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-267">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-268">
            <paramref name="phrase" /> 요소와 <paramref name="builder" /> 요소 시퀀스에 대한 <see cref="T:System.Speech.Recognition.GrammarBuilder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-268">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-269"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 암시적 변환을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-269"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="4f93e-270">이 메서드는 개체에 대해 위에 나열 된 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-270">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="4f93e-271">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 및 <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-271">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-272">다음 예제에서는 두 구 인식할 수 있는 음성 인식 문법을 "배경 *color*" 및 "백그라운드로 *색*" 여기서 *색* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-272">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="4f93e-273">다양 한 형식 최종 문법을 같은 빌드에 사용 되 [문자열](https://go.microsoft.com/fwlink/?LinkId=159733)를 <xref:System.Speech.Recognition.Choices>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-273">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="4f93e-274">에 대 한 호출에서 명시적 캐스트 연산자는 <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> 메서드는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-274">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f93e-275">문법 요소를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-275">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-276">이러한 메서드를 사용 하 여 기존 문법 요소를 추가할 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-276">Use these methods to append grammar elements to an existing <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="4f93e-277">문법 요소를 만들 때에 점진적으로 스피치 인식 그래 머의 제약 조건을 개발 하 여 기존 작성기에 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-277">As you create grammar elements, you can append them to the existing builder to progressively develop the constraints for a speech recognition grammar.</span></span> <span data-ttu-id="4f93e-278">각 요소는 요소의 현재 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-278">Each element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="4f93e-279">이 메서드에 추가 하는 것에 대 한 오버 로드가 <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>를 <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, 및 <xref:System.Speech.Recognition.SemanticResultValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-279">This method has overloads for appending <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-280">음성 인식기 키 이름이 같은 중복 된 의미 체계 요소 또는 동일한 의미 체계 요소의 값을 반복적으로 수정할 수 있는 여러 의미 체계 요소가 포함 된 음성 인식 문법을 사용 하는 경우 예외가 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-280">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="4f93e-281">빌드 및 음성 인식 문법을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [음성 인식](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) 하 고 [GrammarBuilder 문법을 만드는](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-281">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.Choices -&gt; unit" Usage="grammarBuilder.Append alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="4f93e-282">추가할 대체 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-282">The set of alternatives to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-283">대체 항목의 집합을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-283">Appends a set of alternatives to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-284">`alternateChoices` 요소의 현재 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-284">`alternateChoices` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-285">추가 하는 경우 <xref:System.Speech.Recognition.Choices> 포함 된 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 <xref:System.Speech.Recognition.GrammarBuilder> 개체 키 이름이 동일한 또는 반복적으로 할 수 있는 여러 의미 체계 요소를 사용 하 여 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 합니다. 수정 된 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-285">When you append <xref:System.Speech.Recognition.Choices> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-286">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-286">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4f93e-287">다음 예제에서는 "phone" 라는 단어는 선택 사항 구 "직장 호출 James" 및 "휴대폰에서 호출 Anne"와 같은 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-287">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="4f93e-288">이 예제에서는 사용을 강조 표시 된 <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4f93e-288">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder -&gt; unit" Usage="grammarBuilder.Append builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="4f93e-289">추가할 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-289">The grammar element to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-290">문법 요소를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-290">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-291">`builder` 문법 요소의 현재 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-291">`builder` is added to the end of the current sequence of grammar elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f93e-292">추가 하는 경우 <xref:System.Speech.Recognition.GrammarBuilder> 포함 된 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 <xref:System.Speech.Recognition.GrammarBuilder> 개체 키 이름이 동일한 또는 반복적으로 할 수 있는 여러 의미 체계 요소를 사용 하 여 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 합니다. 수정 된 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-292">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-293">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-293">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="4f93e-294">다음 예제에서는 "phone" 라는 단어는 선택 사항 구 "직장 호출 James" 및 "휴대폰에서 호출 Anne"와 같은 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-294">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="4f93e-295"><xref:System.Speech.Recognition.GrammarBuilder> 및 <xref:System.Speech.Recognition.Choices> 개체 문법을 생성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-295"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="4f93e-296">이 예제에서는 사용을 강조 표시 된 <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4f93e-296">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultKey -&gt; unit" Usage="grammarBuilder.Append key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="4f93e-297">추가할 의미 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-297">The semantic key to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-298">의미 키를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-298">Appends a semantic key to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-299">`key` 요소의 현재 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-299">`key` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-300">추가 하는 경우 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 <xref:System.Speech.Recognition.GrammarBuilder> 개체, 키 이름이 동일한 또는 반복적으로 수정할 수 있는 여러 의미 체계 요소를 사용 하 여 의미 체계는 중복 요소를 만들지 않으려면 반드시를 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-300">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-301">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-301">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4f93e-302">다음 예제는 항공편에 대 한 원본 및 대상 도시를 선택 하는 것에 대 한 콘솔 응용 프로그램의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-302">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="4f93e-303">응용 프로그램 "시카고에 마이애미에서 fly 하려고 합니다."와 같은 구를 인식합니다</span><span class="sxs-lookup"><span data-stu-id="4f93e-303">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="4f93e-304">에 대 한 처리기를 <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> 이벤트를 사용 하는 <xref:System.Speech.Recognition.SemanticResultKey> 에 지정 된 공항 코드를 추출 하는 <xref:System.Speech.Recognition.SemanticResultValue> 원본 및 대상 도시에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-304">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create a Choices object and add  cities and airport codes  
        // using SemanticResultValue objects.  
        Choices cities = new Choices();  
        cities.Add(new SemanticResultValue("Chicago", "ORD"));  
        cities.Add(new SemanticResultValue("Boston", "BOS"));  
        cities.Add(new SemanticResultValue("Miami", "MIA"));  
        cities.Add(new SemanticResultValue("Dallas", "DFW"));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultValue -&gt; unit" Usage="grammarBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4f93e-305">추가할 의미 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-305">The semantic value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-306">의미 값을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-306">Appends a semantic value to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-307">`value` 요소의 현재 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-307">`value` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-308">추가 하는 경우 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 <xref:System.Speech.Recognition.GrammarBuilder> 개체, 키 이름이 동일한 또는 반복적으로 수정할 수 있는 여러 의미 체계 요소를 사용 하 여 의미 체계는 중복 요소를 만들지 않으려면 반드시를 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-308">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-309">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-309">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4f93e-310">다음 예제는 항공편에 대 한 원본 및 대상 도시를 선택 하는 것에 대 한 콘솔 응용 프로그램의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-310">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="4f93e-311">응용 프로그램 "시카고에 마이애미에서 fly 하려고 합니다."와 같은 구를 인식합니다</span><span class="sxs-lookup"><span data-stu-id="4f93e-311">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="4f93e-312">에 대 한 처리기를 <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> 이벤트를 사용 하는 <xref:System.Speech.Recognition.SemanticResultKey> 에 지정 된 공항 코드를 추출 하는 <xref:System.Speech.Recognition.SemanticResultValue> 원본 및 대상 도시에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-312">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create GrammarBuilder objects and append SemanticResultValue objects   
        // that contain cities and airport codes.  
  
        GrammarBuilder chicago = new GrammarBuilder();  
        chicago.Append(new SemanticResultValue("Chicago", "ORD"));  
  
        GrammarBuilder boston = new GrammarBuilder();  
        boston.Append(new SemanticResultValue("Boston", "BOS"));  
  
        GrammarBuilder miami = new GrammarBuilder();  
        miami.Append(new SemanticResultValue("Miami", "MIA"));  
  
        GrammarBuilder dallas = new GrammarBuilder();  
        dallas.Append(new SemanticResultValue("Dallas", "DFW"));  
  
        // Create a Choices object and add the cities using implicit conversion from   
        // SemanticResultValue to GrammarBuilder.  
        Choices cities = new Choices();  
        cities.Add(new Choices(new GrammarBuilder[] { chicago, boston, miami, dallas }));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; unit" Usage="grammarBuilder.Append phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="4f93e-313">추가할 단어의 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-313">The sequence of words to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-314">구를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-314">Appends a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-315">`phrase` 요소의 현재 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-315">`phrase` is added to the end of the current sequence of elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="member this.Append : string * System.Speech.Recognition.SubsetMatchingMode -&gt; unit" Usage="grammarBuilder.Append (phrase, subsetMatchingCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="4f93e-316">추가할 단어의 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-316">The sequence of words to append.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="4f93e-317">일치하는 모드는 문법을 사용하여 구를 인식합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-317">The matching mode the grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-318">구의 하위 집합에 대한 요소를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-318">Appends an element for a subset of a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-319">하위 요소는 요소의 현재 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-319">The subset element is added to the end of the current sequence of elements.</span></span> <span data-ttu-id="4f93e-320">문자열을 사용 하 여 음성 인식 문법을 빌드하는 방법에 대 한 자세한 내용은 참조 하세요. [GrammarBuilder 문법을 만드는를 사용 하 여 문자열](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114)합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-320">For more information about building a speech recognition grammar using strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
 <span data-ttu-id="4f93e-321">하위 집합 일치 모드가 사용에 대 한 자세한 정보를 참조 하세요. <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-321">For detailed information on the use of subset matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-322">다음 예제에서는 각각에 대 한 음성 인식 문법을 만드는 <xref:System.Speech.Recognition.SubsetMatchingMode> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-322">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value.</span></span> <span data-ttu-id="4f93e-323">예를 들어, 생성 된 문법 `OrderedSubset` 는 구 인식 "세 4 5" 및 "하나 세 5"과 문법을 `Subsequence` 구 인식 "3 4 5", 하지만 구의 하지 "하나 세 5".</span><span class="sxs-lookup"><span data-stu-id="4f93e-323">For example, the generated grammar `OrderedSubset` recognizes the phrases, "three four five" and "one three five", and the grammar `Subsequence` recognizes the phrase "three four five", but not the phrase, "one three five".</span></span>  
  
```csharp  
  
private Grammar[] CreateSubsetMatchTest()  
{  
  List<Grammar> grammars = new List<Grammar>(4);  
  
  string phrase = "one two three four five six";  
  foreach (SubsetMatchingMode mode in  
    Enum.GetValues(typeof(SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder();  
    gb.Append(phrase, mode);  
  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammars.Add(grammar);  
  }  
  
  return grammars.ToArray();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder * int * int -&gt; unit" Usage="grammarBuilder.Append (builder, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="4f93e-324">추가할 반복된 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-324">The repeated grammar element to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="4f93e-325">입력이 <c>builder</c>가 정의한 요소와 일치하여 일치 항목을 구성해야 하는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-325">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="4f93e-326">입력이 <c>builder</c>가 정의한 요소와 일치하여 일치 항목을 구성할 수 있는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-326">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-327">반복된 문법 요소를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-327">Appends a repeated grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-328">값 `minRepeat` 0 보다 크거나 해야 값 보다 작거나 같으면 `maxRepeat`합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-328">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-329">추가 하는 경우 <xref:System.Speech.Recognition.GrammarBuilder> 포함 된 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 <xref:System.Speech.Recognition.GrammarBuilder> 개체 키 이름이 동일한 또는 반복적으로 할 수 있는 여러 의미 체계 요소를 사용 하 여 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 합니다. 수정 된 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-329">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-330">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-330">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="4f93e-331">다음 예제에서는 "phone" 라는 단어는 선택 사항 구 "직장 호출 James" 및 "휴대폰에서 호출 Anne"와 같은 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-331">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="4f93e-332"><xref:System.Speech.Recognition.GrammarBuilder> 및 <xref:System.Speech.Recognition.Choices> 개체 문법을 생성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-332"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="4f93e-333">이 예제에서는 사용을 강조 표시 된 <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4f93e-333">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; unit" Usage="grammarBuilder.Append (phrase, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="4f93e-334">추가할 반복된 단어의 시퀀스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-334">The repeated sequence of words to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="4f93e-335">입력이 <c>구</c>에 일치하여 일치 항목을 구성해야 하는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-335">The minimum number of times that input matching <c>phrase</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="4f93e-336">입력이 <c>구</c>에 일치하여 일치 항목을 구성할 수 있는 최소 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-336">The maximum number of times that input matching <c>phrase</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-337">반복된 구를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-337">Appends a repeated phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-338">값 `minRepeat` 0 보다 크거나 해야 값 보다 작거나 같으면 `maxRepeat`합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-338">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-339">다음 예제에서는 "phone" 라는 단어는 선택 사항 구 "직장 호출 James" 및 "휴대폰에서 호출 Anne"와 같은 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-339">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="4f93e-340"><xref:System.Speech.Recognition.GrammarBuilder> 및 <xref:System.Speech.Recognition.Choices> 개체 문법을 생성 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-340"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="4f93e-341">이 예제에서는 사용을 강조 표시 된 <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4f93e-341">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendDictation">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f93e-342">받아쓰기 문법을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-342">Appends a dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-343">합니다 <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> 메서드를 사용 하는 규칙으로 받아쓰기 문법에 추가할 수는 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-343">The <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> methods allow you to append a dictation grammar as a rule to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="4f93e-344">받아쓰기 문법에 대 한 자세한 내용은 참조 하세요. <xref:System.Speech.Recognition.DictationGrammar>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-344">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation();" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : unit -&gt; unit" Usage="grammarBuilder.AppendDictation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f93e-345">기본 받아쓰기 문법을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-345">Appends the default dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-346">받아쓰기 문법에 대 한 자세한 내용은 참조 하세요. <xref:System.Speech.Recognition.DictationGrammar>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-346">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-347">다음 예제에서는 받아쓰기를 통합 하는 스피치 인식 그래 머를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-347">The following example creates a speech recognition grammar that incorporates dictation.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation();  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation (string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation (category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation(System::String ^ category);" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : string -&gt; unit" Usage="grammarBuilder.AppendDictation category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">
          <span data-ttu-id="4f93e-348">추가할 받아쓰기 문법의 범주입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-348">The category of the dictation grammar to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-349">지정된 받아쓰기 문법을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-349">Appends the specified dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-350">맞춤법 받아쓰기 문법을 사용 하려면 `category` 에 `spelling`입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-350">To use the spelling dictation grammar, set `category` to `spelling`.</span></span>  
  
 <span data-ttu-id="4f93e-351">받아쓰기 문법에 대 한 자세한 내용은 참조 하세요. <xref:System.Speech.Recognition.DictationGrammar>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-351">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-352">다음 예제에서는 맞춤법 받아쓰기 문법 규칙을 통합 하는 스피치 인식 그래 머를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-352">The following example creates a speech recognition grammar that incorporates the spelling dictation grammar rules.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation("spelling");  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendRuleReference">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f93e-353">문법 파일 또는 문법 규칙을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-353">Appends a grammar file or a grammar rule to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-354"><xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> 메서드 문법 파일 또는 파일에서 문법 규칙을 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-354">The <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> methods can append a grammar file or a grammar rule from a file.</span></span> <span data-ttu-id="4f93e-355">이러한 메서드를 사용 하도록 응용 프로그램을 미리 배포 된 또는 공개적으로 사용할 수 있는 문법 규칙을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-355">These methods allow applications to make use of pre-deployed or publicly available grammar rules.</span></span> <span data-ttu-id="4f93e-356">응용 프로그램 읽기 권한이 있어야 합니다 지정된 문법 파일의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-356">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="4f93e-357">이러한 메서드는 다음 형식에서 음성 인식 문법을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-357">These methods can read a speech recognition grammar from the following formats.</span></span>  
  
-   <span data-ttu-id="4f93e-358">W3C에 따르는 XML 형식 파일 [음성 인식 문법 Specification (SRGS) 버전 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span><span class="sxs-lookup"><span data-stu-id="4f93e-358">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="4f93e-359">Microsoft 음성 인식 문법 이진 형식 (파일 확장명이.cfg)를 준수 하는 이진 파일</span><span class="sxs-lookup"><span data-stu-id="4f93e-359">Binary files that conform to the Microsoft Speech Recognition Grammar Binary Format (.cfg file extension)</span></span>  
  
 <span data-ttu-id="4f93e-360">컴파일하는 XML 형식의 SRGS 문법 파일 확장명이.cfg 인 이진 문법 파일을 줄일 수 있습니다는 일치 항목을 검색 하 여 사용 하는 시간 문법 수가 단어와 구 인식 해야 하는 경우에 특히.</span><span class="sxs-lookup"><span data-stu-id="4f93e-360">Compiling an XML-format SRGS grammar file to a binary grammar file with the .cfg extension can reduce the time consumed by searches for a match, especially if the grammar requires recognition of a large number of words and phrases.</span></span> <span data-ttu-id="4f93e-361">SRGS 문법을 CFG 이진 형식으로 컴파일하는 방법에 대 한 내용은 <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-361">For information about compiling SRGS grammars to the CFG binary format, see <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string -&gt; unit" Usage="grammarBuilder.AppendRuleReference path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="4f93e-362">지원되는 형식으로 음성 인식 문법을 설명하는 파일 경로나 유니버설 리소스 식별자(URI)</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-362">The path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-363">문법 정의 파일을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-363">Appends a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-364">제공 하는 URI를 `path` 인수는 로컬 또는 원격 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-364">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="4f93e-365">응용 프로그램 읽기 권한이 있어야 합니다 지정된 문법 파일의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-365">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="4f93e-366">W3C 음성 인식 문법 Specification (SRGS) 표현에는 루트 규칙을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-366">A W3C Speech Recognition Grammar Specification (SRGS) representation can define a root rule.</span></span> <span data-ttu-id="4f93e-367">이 메서드는 문법을 문법 요소의 현재 시퀀스에 해당 루트 규칙을 사용 하 여 시작을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-367">This method appends the grammar, beginning with its root rule, to the current sequence of grammar elements.</span></span> <span data-ttu-id="4f93e-368">특정 문법 규칙에 추가 하려면 사용 된 <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="4f93e-368">To append a specific grammar rule, use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-369">다음 C# 예제에서는 라는 규칙을 사용 하는 음성 인식 문법을 `Cities` 로컬 SRGS 파일인 cities.grxml 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-369">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="4f93e-370">Cities.grxml 파일의 내용을 C# 코드 예제에서는 아래에 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-370">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar1()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.AppendRuleReference("file://c:/temp/cities.grxml");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 1";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-16" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path, string rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path, string rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String, rule As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path, System::String ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string * string -&gt; unit" Usage="grammarBuilder.AppendRuleReference (path, rule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rule" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="4f93e-371">지원되는 형식으로 음성 인식 문법을 설명하는 파일의 경로나 파일의 유니버설 리소스 식별자(URI)</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-371">The file path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <param name="rule">
          <span data-ttu-id="4f93e-372">추가하는 규칙의 식별자 또는 문법 파일의 기본 루트 규칙을 추가하는 <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-372">The identifier of the rule to append, or <see langword="null" /> to append the default root rule of the grammar file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-373">문법 정의 파일의 지정된 규칙을 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-373">Appends the specified rule of a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-374">제공 하는 URI를 `path` 인수는 로컬 또는 원격 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-374">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="4f93e-375">응용 프로그램 읽기 권한이 있어야 합니다 지정된 문법 파일의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-375">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="4f93e-376">사용 하 여 사용할 수는 <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> 해당 루트 규칙을 사용 하 여 시작 하는 문법 파일을 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-376">You can use the use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method to append a grammar file beginning with its root rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-377">다음 C# 예제에서는 라는 규칙을 사용 하는 음성 인식 문법을 `Cities` 로컬 SRGS 파일인 cities.grxml 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-377">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="4f93e-378">Cities.grxml 파일의 내용을 C# 코드 예제에서는 아래에 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-378">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar2()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.Append("Does");  
  builder.AppendRuleReference(@"c:\temp\cities.grxml", "Cities");  
  builder.Append("have a shuttle");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendWildcard">
      <MemberSignature Language="C#" Value="public void AppendWildcard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendWildcard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendWildcard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendWildcard();" />
      <MemberSignature Language="F#" Value="member this.AppendWildcard : unit -&gt; unit" Usage="grammarBuilder.AppendWildcard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4f93e-379">입력과 일치하는 인식 문법 요소를 문법 요소의 현재 시퀀스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-379">Appends a recognition grammar element that matches any input to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-380">와일드 카드 요소의 요소의 현재 시퀀스의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-380">The wildcard element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="4f93e-381">와일드 카드 요소의 음성된 단어를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-381">The wildcard element matches any spoken word.</span></span> <span data-ttu-id="4f93e-382">배경 소음과 또는 대기에는 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-382">It does not match background noise or silence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-383">다음 예제에서는 와일드 카드로 암호 입력을 허용 하는 문법에 대해서를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-383">The following example creates a grammar that accepts password input as a wildcard.</span></span> <span data-ttu-id="4f93e-384">이 예제에서는 연결을 <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> 암호 입력의 유효성을 검사 하는 문법에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-384">The example attaches a <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event handler to the grammar that validates the password input.</span></span>  
  
```csharp  
private Grammar CreatePasswordGrammar()  
{  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey passwordKey =  
    new SemanticResultKey("Password", wildcardBuilder);  
  
  GrammarBuilder passwordBuilder =  
    new GrammarBuilder("My Password is");  
  passwordBuilder.Append(passwordKey);  
  
  Grammar passwordGrammar = new Grammar(passwordBuilder);  
  passwordGrammar.Name = "Password input";  
  
  passwordGrammar.SpeechRecognized +=  
    new EventHandler<SpeechRecognizedEventArgs>(  
      PasswordInputHandler);  
  
  return passwordGrammar;  
}  
  
// Handle the SpeechRecognized event for the password grammar.  
private void PasswordInputHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  RecognitionResult result = e.Result;  
  SemanticValue semantics = e.Result.Semantics;  
  
  if (semantics.ContainsKey("Password"))  
  {  
    RecognizedAudio passwordAudio =  
      result.GetAudioForWordRange(  
        result.Words[3], result.Words[result.Words.Count - 1]);  
  
    if (IsValidPassword(passwordAudio))  
    {  
      Console.WriteLine("Password accepted.");  
  
      // Add code to handle a valid password here.  
    }  
    else  
    {  
      Console.WriteLine("Invalid password.");  
  
      // Add code to handle an invalid password here.  
    }  
  }  
}  
  
// Validate the password input.   
private bool IsValidPassword(RecognizedAudio passwordAudio)  
{  
  Console.WriteLine("Validating password.");  
  
  // Add password validation code here.  
  
  return false;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f93e-385">음성 인식 문법의 문화권을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-385">Gets or sets the culture of the speech recognition grammar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f93e-386">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" />의 문화권입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-386">The culture of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
          <span data-ttu-id="4f93e-387">기본값은 실행 중인 스레드의 <see cref="P:System.Threading.Thread.CurrentUICulture" /> 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-387">The default is the executing thread's <see cref="P:System.Threading.Thread.CurrentUICulture" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-388">합니다 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 생성자를 만듭니다는 <xref:System.Speech.Recognition.Grammar> 해당 문화권의 음성 인식기에서 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-388">The <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor creates a <xref:System.Speech.Recognition.Grammar> object that can be used by a speech recognizer of the corresponding culture.</span></span> <span data-ttu-id="4f93e-389">만 <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> 의 속성을 <xref:System.Speech.Recognition.GrammarBuilder> 가 제공 하는 대로 문법 생성자의 매개 변수는 결과 음성 인식 문법의 문화권을 설정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-389">Only the <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> property of the <xref:System.Speech.Recognition.GrammarBuilder> that is provided as the parameter to the Grammar constructor is used to set the culture of the resulting speech recognition grammar.</span></span>  
  
 <span data-ttu-id="4f93e-390">Microsoft Windows와 System.Speech API는 모든 유효한 언어-국가 코드를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-390">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="4f93e-391">지정 된 언어를 사용 하 여 음성 인식을 수행 하는 `Culture` 속성, 음성 인식 엔진을 지 원하는 언어-국가 코드를 설치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-391">To perform speech recognition using the language specified in the `Culture` property, a speech recognition engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="4f93e-392">Microsoft Windows 7과 함께 제공 되는 음성 인식 엔진은 다음 언어-국가 코드를 사용 하 여 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-392">The speech recognition engines that shipped with Microsoft Windows 7 work with the following language-country codes.</span></span>  
  
-   <span data-ttu-id="4f93e-393">en-5GB입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-393">en-GB.</span></span> <span data-ttu-id="4f93e-394">English (United Kingdom)</span><span class="sxs-lookup"><span data-stu-id="4f93e-394">English (United Kingdom)</span></span>  
  
-   <span data-ttu-id="4f93e-395">EN-US입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-395">en-US.</span></span> <span data-ttu-id="4f93e-396">영어 (미국)</span><span class="sxs-lookup"><span data-stu-id="4f93e-396">English (United States)</span></span>  
  
-   <span data-ttu-id="4f93e-397">de-DE.</span><span class="sxs-lookup"><span data-stu-id="4f93e-397">de-DE.</span></span> <span data-ttu-id="4f93e-398">독일어 (독일)</span><span class="sxs-lookup"><span data-stu-id="4f93e-398">German (Germany)</span></span>  
  
-   <span data-ttu-id="4f93e-399">원본: ES-ES 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-399">es-ES.</span></span> <span data-ttu-id="4f93e-400">스페인어 (스페인)</span><span class="sxs-lookup"><span data-stu-id="4f93e-400">Spanish (Spain)</span></span>  
  
-   <span data-ttu-id="4f93e-401">fr-FR.</span><span class="sxs-lookup"><span data-stu-id="4f93e-401">fr-FR.</span></span> <span data-ttu-id="4f93e-402">프랑스어 (프랑스)</span><span class="sxs-lookup"><span data-stu-id="4f93e-402">French (France)</span></span>  
  
-   <span data-ttu-id="4f93e-403">JA-JP 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-403">ja-JP.</span></span> <span data-ttu-id="4f93e-404">일본어 (일본)</span><span class="sxs-lookup"><span data-stu-id="4f93e-404">Japanese (Japan)</span></span>  
  
-   <span data-ttu-id="4f93e-405">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="4f93e-405">zh-CN.</span></span> <span data-ttu-id="4f93e-406">중국어 (중국)</span><span class="sxs-lookup"><span data-stu-id="4f93e-406">Chinese (China)</span></span>  
  
-   <span data-ttu-id="4f93e-407">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="4f93e-407">zh-TW.</span></span> <span data-ttu-id="4f93e-408">중국어 (대만)</span><span class="sxs-lookup"><span data-stu-id="4f93e-408">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="4f93e-409">"En", "fr"와 같은 두 문자 언어 코드 또는 "es" 허용도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-409">Two-letter language codes such as "en", "fr", or "es" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f93e-410">다음 예제에서는 최대 4 개의 토 핑을 사용 하 여 피자를 주문에 대 한 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-410">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="4f93e-411">구체적으로 설정 된 <xref:System.Speech.Recognition.GrammarBuilder> 개체의 문화권을 영어 (미국)입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-411">It specifically sets the <xref:System.Speech.Recognition.GrammarBuilder> object's culture to English (United States).</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="DebugShowPhrases">
      <MemberSignature Language="C#" Value="public string DebugShowPhrases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DebugShowPhrases" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DebugShowPhrases As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DebugShowPhrases { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DebugShowPhrases : string" Usage="System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4f93e-412">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" />가 포함하는 문법의 콘텐츠와 구조를 보여주는 문자열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-412">Gets a string that shows the contents and structure of the grammar contained by the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4f93e-413">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" />의 현재 콘텐츠 및 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-413">The current content and structure of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4f93e-414">다음 예제에서는 최대 4 개의 토 핑을 사용 하 여 피자를 주문에 대 한 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-414">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="4f93e-415">상태를 기록 합니다 <xref:System.Speech.Recognition.GrammarBuilder> 문법을 만들기 전에 콘솔.</span><span class="sxs-lookup"><span data-stu-id="4f93e-415">It writes the status of the <xref:System.Speech.Recognition.GrammarBuilder> to the console before creating the grammar.</span></span> <span data-ttu-id="4f93e-416">이 메서드는 다음 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-416">This method generates the following output:</span></span>  
  
-   `GrammarBuilder status: I would like a [cheese,mushroom,tomato,onion,anchovy,chic ken,pepperoni] and [cheese,mushroom,tomato,onion,anchovy,chicken,pepperoni] pizza`  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Write the contents and structure of the GrammarBuilder to the console.  
  Console.WriteLine("Grammar content and structure: {0}", gb.DebugShowPhrases);  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361640(v%3doffice.14)">
          <span data-ttu-id="4f93e-417">문법 GrammarBuilder를 사용 하 여 만들기</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-417">Create Grammars Using GrammarBuilder</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Addition">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f93e-418">두 문법 요소의 시퀀스에 해당하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-418">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that corresponds to a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-419">새 요소의 순서를 결정 하는 피연산자의 순서 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-419">The order of the operands determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-420">결합 하는 경우 주의 것이 좋습니다 <xref:System.Speech.Recognition.Choices> 나 <xref:System.Speech.Recognition.GrammarBuilder> 포함 된 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 다른 문법 요소를 사용 하 여 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="4f93e-420">Caution is recommended when combining <xref:System.Speech.Recognition.Choices> or <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements.</span></span> <span data-ttu-id="4f93e-421">음성 인식기 키 이름이 같은 중복 된 의미 체계 요소 또는 동일한 의미 체계 요소의 값을 반복적으로 수정할 수 있는 여러 의미 체계 요소가 포함 된 음성 인식 문법을 사용 하는 경우 예외가 throw 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-421">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="4f93e-422">빌드 및 음성 인식 문법을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [음성 인식](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) 하 고 [GrammarBuilder 문법을 만드는](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-422">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="4f93e-423">대체 항목 집합을 나타내는 첫 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-423">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="4f93e-424">두 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-424">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-425">
            <see cref="T:System.Speech.Recognition.Choices" /> 개체와 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체를 차례로 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-425">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-426">
            <paramref name="choices" /> 매개 변수 다음에 나오는 <paramref name="builder" /> 매개 변수의 시퀀스에 대해 <see cref="T:System.Speech.Recognition.GrammarBuilder" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-426">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-427"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 변환을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-427"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="4f93e-428">이 메서드는 개체에 대해 위에 나열 된 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-428">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="4f93e-429">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-429">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-430">결합 하면 <xref:System.Speech.Recognition.Choices> 하 고 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스에서 동일한 키 이름 또는 반복적으로 수정할 수 있는 여러 의미 체계 요소를 사용 하 여 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 합니다 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-430">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-431">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-431">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="4f93e-432">이 연산자에 대 한 해당 메서드는 <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4f93e-432">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="4f93e-433">문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-433">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="4f93e-434">두 번째 문법 요소로, 대체 요소의 집합을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-434">The second grammar element, which represents a set of alternative elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-435">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" />와 그 뒤에 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 포함하는 새 <see cref="T:System.Speech.Recognition.Choices" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-435">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a <see cref="T:System.Speech.Recognition.Choices" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-436">
            <paramref name="builder" /> 매개 변수 다음에 나오는 <paramref name="choices" /> 매개 변수의 시퀀스에 대해 <see cref="T:System.Speech.Recognition.GrammarBuilder" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-436">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="choices" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-437"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 변환을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-437"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="4f93e-438">이 메서드는 개체에 대해 위에 나열 된 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-438">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="4f93e-439">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-439">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-440">결합 하면 <xref:System.Speech.Recognition.Choices> 하 고 <xref:System.Speech.Recognition.GrammarBuilder> 포함 하는 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스에서 동일한 키 이름 또는 반복적으로 수정할 수 있는 여러 의미 체계 요소를 사용 하 여 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 합니다 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-440">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-441">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-441">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="4f93e-442">이 연산자에 대 한 해당 메서드는 <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4f93e-442">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="4f93e-443">다음 예제에서는 두 구 인식할 수 있는 음성 인식 문법을 "배경 *color*" 및 "백그라운드로 *색*" 여기서 *색* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-443">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="4f93e-444">다양 한 형식 최종 문법을 같은 빌드에 사용 되 [문자열](https://go.microsoft.com/fwlink/?LinkId=159733)를 <xref:System.Speech.Recognition.Choices>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-444">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder1 + builder2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="4f93e-445">문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-445">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="4f93e-446">두 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-446">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-447">두 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체의 시퀀스를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-447">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-448">
            <paramref name="builder1" /> 매개 변수 다음에 나오는 <paramref name="builder2" /> 매개 변수의 시퀀스에 대해 <see cref="T:System.Speech.Recognition.GrammarBuilder" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-448">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> parameter followed by the <paramref name="builder2" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-449"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 변환을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-449"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="4f93e-450">이 메서드는 개체에 대해 위에 나열 된 `builder1` 및 `builder2` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-450">This method accepts the objects listed above for the `builder1` and `builder2` parameters.</span></span> <span data-ttu-id="4f93e-451">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-451">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f93e-452">결합 하면 <xref:System.Speech.Recognition.GrammarBuilder> 포함 된 개체 <xref:System.Speech.Recognition.SemanticResultValue> 또는 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스를 동일한 키 이름 또는 반복적으로 수정할 수 있는 여러 의미 체계 요소를 사용 하 여 의미 체계는 중복 요소를 만들지 않으려면 있는지 확인 합니다 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 속성을 <xref:System.Speech.Recognition.SemanticValue> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-452">When you combine <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="4f93e-453">이러한 상황을 발생 하는 경우 음성 인식기에서 예외를 throw 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-453">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="4f93e-454">이 연산자에 대 한 해당 메서드는 <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4f93e-454">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="4f93e-455">문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-455">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="4f93e-456">두 번째 문법 요소로, 단어의 시퀀스를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-456">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-457">
            <see cref="T:System.Speech.Recognition.GrammarBuilder" />와 그 뒤에 구를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-457">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-458">
            <paramref name="builder" /> 매개 변수 다음에 나오는 <paramref name="phrase" /> 매개 변수의 시퀀스에 대해 <see cref="T:System.Speech.Recognition.GrammarBuilder" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-458">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="phrase" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-459"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 변환을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-459"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="4f93e-460">이 메서드는 개체에 대해 위에 나열 된 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-460">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="4f93e-461">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-461">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="4f93e-462">이 연산자에 대 한 해당 메서드는 <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4f93e-462">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="phrase + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="4f93e-463">첫 번째 문법 요소로, 단어의 시퀀스를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-463">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="4f93e-464">두 번째 문법 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-464">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-465">구와 그 뒤에 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 포함하는 새 <see cref="T:System.Speech.Recognition.GrammarBuilder" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-465">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-466">
            <paramref name="phrase" /> 매개 변수 다음에 나오는 <paramref name="builder" /> 매개 변수의 시퀀스에 대해 <see cref="T:System.Speech.Recognition.GrammarBuilder" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-466">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-467"><xref:System.Speech.Recognition.GrammarBuilder> 다음 클래스에서 변환을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-467"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="4f93e-468">이 메서드는 개체에 대해 위에 나열 된 `builder` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-468">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="4f93e-469">자세한 내용은 참조는 <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-469">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="4f93e-470">이 연산자에 대 한 해당 메서드는 <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4f93e-470">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="4f93e-471">다음 예제에서는 두 구 인식할 수 있는 음성 인식 문법을 "배경 *color*" 및 "백그라운드로 *색*" 여기서 *색* 색 집합에서 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-471">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="4f93e-472">다양 한 형식 최종 문법을 같은 빌드에 사용 되 [문자열](https://go.microsoft.com/fwlink/?LinkId=159733)를 <xref:System.Speech.Recognition.Choices>, 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-472">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4f93e-473">다른 형식을 <see cref="T:System.Speech.Recognition.GrammarBuilder" />로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-473">Converts another type to a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-474">암시적 변환의 새 인스턴스를 만듭니다 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-474">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="4f93e-475">다음 클래스의 각 캐스팅할 수 있습니다는 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-475">You can cast each of the following classes to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="4f93e-476">각 암시적 변환 생성자를 호출 하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-476">Each of the implicit casts is equivalent to calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="4f93e-477">변환할 대체 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-477">The set of alternatives to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-478">
            <see cref="T:System.Speech.Recognition.Choices" /> 개체를 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-478">Converts a <see cref="T:System.Speech.Recognition.Choices" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-479">변환된 <see cref="T:System.Speech.Recognition.Choices" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-479">The converted <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-480">암시적 변환의 새 인스턴스를 만듭니다 <xref:System.Speech.Recognition.GrammarBuilder>합니다. 이 변환 연산자는 호출할 때와 동일한 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> 를 지정 하 고 `choices` 에 대 한는 `alternateChoices`합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-480">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `choices` for the `alternateChoices`.</span></span>  
  
 <span data-ttu-id="4f93e-481">이 연산자에 대 한 해당 메서드는 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4f93e-481">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="4f93e-482">다음 예제에서는 "yes" 또는 "no" 질문에 대 한 응답을 인식할 수 있는 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-482">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="4f93e-483">암시적 변환 연산자 생성에서 되는 <xref:System.Speech.Recognition.SemanticResultValue> 에서 개체를 <xref:System.Speech.Recognition.Choices> 개체를 생성 하는 <xref:System.Speech.Recognition.Choices> 에서 두 개체 <xref:System.Speech.Recognition.SemanticResultValue> 개체 및 생성에서를 <xref:System.Speech.Recognition.Grammar> 개체를 <xref:System.Speech.Recognition.SemanticResultKey> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-483">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultKey semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultKey semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticKey As SemanticResultKey) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultKey ^ semanticKey);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticKey" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="semanticKey">
          <span data-ttu-id="4f93e-484">변환할 의미 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-484">The semantic key to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-485">
            <see cref="T:System.Speech.Recognition.SemanticResultKey" /> 개체를 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-485">Converts a <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-486">변환된 <see cref="T:System.Speech.Recognition.SemanticResultKey" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-486">The converted <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-487">암시적 변환의 새 인스턴스를 만듭니다 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-487">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="4f93e-488">이 변환 연산자는 호출할 때와 동일한 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> 를 지정 하 고 `semanticKey` 에 대 한는 `key`합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-488">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticKey` for the `key`.</span></span>  
  
 <span data-ttu-id="4f93e-489">이 연산자에 대 한 해당 메서드는 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4f93e-489">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="4f93e-490">다음 예제에서는 "yes" 또는 "no" 질문에 대 한 응답을 인식할 수 있는 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-490">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="4f93e-491">암시적 변환 연산자 생성에서 되는 <xref:System.Speech.Recognition.SemanticResultValue> 에서 개체를 <xref:System.Speech.Recognition.Choices> 개체를 생성 하는 <xref:System.Speech.Recognition.Choices> 에서 두 개체 <xref:System.Speech.Recognition.SemanticResultValue> 개체 및 생성에서를 <xref:System.Speech.Recognition.Grammar> 개체를 <xref:System.Speech.Recognition.SemanticResultKey> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-491">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultValue semanticValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultValue semanticValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticValue As SemanticResultValue) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultValue ^ semanticValue);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticValue" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="semanticValue">
          <span data-ttu-id="4f93e-492">변환할 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-492">The <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-493">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 개체를 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-493">Converts a <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-494">변환된 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-494">The converted <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-495">암시적 변환의 새 인스턴스를 만듭니다 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-495">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="4f93e-496">이 변환 연산자는 호출할 때와 동일한 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> 를 지정 하 고 `semanticValue` 에 대 한는 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-496">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticValue` for the `value`.</span></span>  
  
 <span data-ttu-id="4f93e-497">이 연산자에 대 한 해당 메서드는 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4f93e-497">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="4f93e-498">다음 예제에서는 "yes" 또는 "no" 질문에 대 한 응답을 인식할 수 있는 음성 인식 문법을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-498">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="4f93e-499">암시적 변환 연산자 생성에서 되는 <xref:System.Speech.Recognition.SemanticResultValue> 에서 개체를 <xref:System.Speech.Recognition.Choices>개체를 생성 하는 <xref:System.Speech.Recognition.Choices> 에서 두 개체 <xref:System.Speech.Recognition.SemanticResultValue> 개체 및 생성에서를 <xref:System.Speech.Recognition.Grammar> 개체를 <xref:System.Speech.Recognition.SemanticResultKey> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-499">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices>object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="4f93e-500">변환할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-500">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4f93e-501">문자열을 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-501">Converts a string to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4f93e-502">변환된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4f93e-502">The converted string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f93e-503">암시적 변환의 새 인스턴스를 만듭니다 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-503">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="4f93e-504">이 변환 연산자는 호출할 때와 동일한 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> 동일 지정 `phrase`합니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-504">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying the same `phrase`.</span></span>  
  
 <span data-ttu-id="4f93e-505">이 연산자에 대 한 해당 메서드는 <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4f93e-505">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="4f93e-506">다음 예제에서는 <xref:System.Speech.Recognition.GrammarBuilder> 하 고 <xref:System.Speech.Recognition.Choices> 두 구 중 하나를 인식할 수 있는 문법 구성 하는 개체 "배경 *colorChoice*" 또는 "백그라운드로 *colorChoice*".</span><span class="sxs-lookup"><span data-stu-id="4f93e-506">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="4f93e-507">에 대 한 허용 되는 값의 목록을 만든 후 *colorChoice* 사용 하 여를 <xref:System.Speech.Recognition.Choices> 개체를 예제에서는 두 개의 초기화 <xref:System.Speech.Recognition.GrammarBuilder> 개체를 `makePhrase` 및 `setPhrase`, 문자열에서 암시적 변환을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-507">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using implicit conversion from string objects.</span></span>  
  
 <span data-ttu-id="4f93e-508">이 예에서는 마지막으로 만듭니다는 <xref:System.Speech.Recognition.Grammar> 에서 개체를 <xref:System.Speech.Recognition.Choices> 개체를 캐스팅할를 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4f93e-508">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
  </Members>
</Type>