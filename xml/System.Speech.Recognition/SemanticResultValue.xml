<Type Name="SemanticResultValue" FullName="System.Speech.Recognition.SemanticResultValue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="797a339d2959f7a21f676aab7fd40fbe56982ddf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SemanticResultValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultValue" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultValue" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_tag.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="539ca-101">의미값을 표현하며 선택적으로 스피치 인식 그래머의 콤포넌트와 값을 관련짓는다</span>
      <span class="sxs-lookup">
        <span data-stu-id="539ca-101">Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="539ca-102">사용 하 여 <xref:System.Speech.Recognition.SemanticResultValue> 및 <xref:System.Speech.Recognition.SemanticResultKey> 개체와 함께에서 <xref:System.Speech.Recognition.GrammarBuilder> 및 <xref:System.Speech.Recognition.Choices>, 의미 체계 구조를 디자인 하는 가장 쉬운 방법은 <xref:System.Speech.Recognition.Grammar>합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-102">Use of <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="539ca-103">인스턴스를 가져와서 구의 의미 체계 정보에 액세스 <xref:System.Speech.Recognition.SemanticValue>통해는 <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> 속성 <xref:System.Speech.Recognition.RecognizedPhrase>합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-103">Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="539ca-104">관리 하는 값 <xref:System.Speech.Recognition.SemanticResultValue> 에서 개체 정의 됩니다 <xref:System.Object> 인스턴스가 해당 생성자에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-104">Values managed by <xref:System.Speech.Recognition.SemanticResultValue> objects are defined by <xref:System.Object> instances passed to their constructors.</span></span> <span data-ttu-id="539ca-105">이 내부 형식의 <xref:System.Object> 해야 `bool`, `int`, `float`, 또는 `string`합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-105">The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`.</span></span> <span data-ttu-id="539ca-106">다른 종류의 생성 되지 것입니다는 <xref:System.Speech.Recognition.Grammar> 인스턴스는 <xref:System.Speech.Recognition.SemanticResultValue>합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-106">Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="539ca-107">일반적인 용도 <xref:System.Speech.Recognition.SemanticResultValue> 의 인식할 수 있는 구성 요소와 인스턴스를 연결 하는 인스턴스는 <xref:System.Speech.Recognition.Grammar>, 구는 규칙 등 또는 <xref:System.Speech.Recognition.Choices> 개체.</span><span class="sxs-lookup"><span data-stu-id="539ca-107">The typical use of a <xref:System.Speech.Recognition.SemanticResultValue> instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object.</span></span> <span data-ttu-id="539ca-108">연결 된 구성 요소가 인식 작업의 일부로 사용 되는 경우는 <xref:System.Speech.Recognition.SemanticResultValue> 반환 된 구의 의미 체계에는 값을 정의 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-108">If the associated component is used as part of a recognition operation, the <xref:System.Speech.Recognition.SemanticResultValue> is used to define a value in the semantics of the returned phrase.</span></span>  
  
 <span data-ttu-id="539ca-109">연결 하기 위한 두 가지 기본적인 방법을 <xref:System.Speech.Recognition.SemanticResultValue> 를 만드는 데 사용 된 생성자에 따라 문법 요소를 사용 하 여 인스턴스는 <xref:System.Speech.Recognition.SemanticResultValue>합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-109">There are two basic methods for associating a <xref:System.Speech.Recognition.SemanticResultValue> instance with a grammar element, depending on the constructor used to create the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
-   <span data-ttu-id="539ca-110">경우에 값 (의 인스턴스에서 지정 된 <xref:System.Object>) 생성 하는 데 사용 되는 <xref:System.Speech.Recognition.SemanticResultValue> 개체를는 <xref:System.Speech.Recognition.SemanticResultValue> 외에 선행 하는 문법 구성 요소와 연결 된는 <xref:System.Speech.Recognition.GrammarBuilder> 개체.</span><span class="sxs-lookup"><span data-stu-id="539ca-110">If only the value (specified by an instance of <xref:System.Object>) is used to construct a <xref:System.Speech.Recognition.SemanticResultValue> object, the <xref:System.Speech.Recognition.SemanticResultValue> is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
     <span data-ttu-id="539ca-111">예를 들어 if 아래 코드 조각에에서는 <xref:System.Speech.Recognition.Grammar> 이 사용 하 여 생성 <xref:System.Speech.Recognition.GrammarBuilder> 단어 "백그라운드"의 값을 인식 하는 인스턴스 `true` 인식된 된 구와 의미 체계에 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-111">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
    ```csharp  
    GrammarBuilder backgroundGB=new GrammarBuilder("background");  
    backgroundGB.Append(new SemanticResultValue(true));  
    ```  
  
     <span data-ttu-id="539ca-112">자세한 내용은 <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>의 설명을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="539ca-112">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span>  
  
-   <span data-ttu-id="539ca-113">문자열 값 구 또는 특정 경우 <xref:System.Speech.Recognition.GrammarBuilder> 인스턴스가 사용 되는, 함께 <xref:System.Object> 지정 하는 <xref:System.Speech.Recognition.SemanticResultValue> 값, 값이 자동으로 연결 문자열 값 구문 또는 <xref:System.Speech.Recognition.GrammarBuilder> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="539ca-113">If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a <xref:System.Speech.Recognition.SemanticResultValue> value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.</span></span>  <span data-ttu-id="539ca-114">경우 구 또는 <xref:System.Speech.Recognition.GrammarBuilder> 인식된 된 구와의 의미 체계에 할당할 값, 개체 인식 프로세스에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-114">If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.</span></span>  
  
     <span data-ttu-id="539ca-115">다음 예제에서는이 설명 하 고에 대 한 명시적 호출을 사용 하 고 이전 예제에서 기능적 <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> 및 <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-115">The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span> <span data-ttu-id="539ca-116">인식 논리는 단어 "백그라운드" 값을 사용 하는 경우 `true` 인식 된 의미 체계에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-116">If the recognition logic uses the word "background", the value `true` will be added to the recognized semantics.</span></span>  
  
    ```csharp  
    fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background", true));  
    ```  
  
     <span data-ttu-id="539ca-117">자세한 내용은 참조에 대 한 설명을 <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> 및 <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-117">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span></span>  
  
 <span data-ttu-id="539ca-118">사용할 한 <xref:System.Speech.Recognition.Grammar> 인식에서 모든 <xref:System.Speech.Recognition.SemanticResultValue> 인스턴스 중 하 나와 연결 되어야 합니다는 <xref:System.Speech.Recognition.SemanticValue> 하 여 사용 되는 개체 <xref:System.Speech.Recognition.Grammar>합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-118">To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all <xref:System.Speech.Recognition.SemanticResultValue> instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="539ca-119">의미 체계는 키와 연결 하 여 이렇게는 <xref:System.Speech.Recognition.SemanticResultValue>합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-119">This is done by associating a semantic key with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="539ca-120">의미 체계 키를 명시적으로 연결할 수 있습니다는 <xref:System.Speech.Recognition.SemanticResultValue>를 사용 하 여 한 <xref:System.Speech.Recognition.SemanticResultKey> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-120">Semantic keys can be explicitly attached to a <xref:System.Speech.Recognition.SemanticResultValue>, using a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  <span data-ttu-id="539ca-121"><xref:System.Speech.Recognition.SemanticResultValue> 인스턴스 키에 명시적으로 연결 된 기본 루트 키에 연결 된 <xref:System.Speech.Recognition.SemanticValue>합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-121"><xref:System.Speech.Recognition.SemanticResultValue> instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.</span></span>  
  
 <span data-ttu-id="539ca-122">이후에 <xref:System.Speech.Recognition.SemanticResultValue> 설정 하는 데 사용 된는 <xref:System.Speech.Recognition.SemanticValue.Value%2A>기본 루트 키 또는 특정 태그가 지정 됩니다 여부에 관계 없이 <xref:System.Speech.Recognition.SemanticResultKey>, 해당 값을 수정 해서는 안 또는 인식 작업 하는 동안 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-122">After a <xref:System.Speech.Recognition.SemanticResultValue> has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.</span></span>  
  
 <span data-ttu-id="539ca-123">다음 예제에서는 설정 하 고 다음 루트를 수정 하기 때문에 예외가 발생 되는지 <xref:System.Speech.Recognition.SemanticValue.Value%2A> 의 <xref:System.Speech.Recognition.Grammar>합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-123">The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
```csharp  
GrammarBuilder gb=new GrammarBuilder();  
gb.Append(new SemanticResultValue("One"));  
gb.Append(new SemanticResultValue("Two"));  
```  
  
 <span data-ttu-id="539ca-124">반면에 다음 예제에서 코드는 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-124">On the other hand, the code in the following example is permitted.</span></span> <span data-ttu-id="539ca-125">여러 인스턴스를 정의 하지만 <xref:System.Speech.Recognition.SemanticResultValue>에 포함 된 한 <xref:System.Speech.Recognition.Choices> 개체 및 사용할 키의 값을 설정 하는 하나의 `bgOrfgText`합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-125">Although it defines multiple instances of <xref:System.Speech.Recognition.SemanticResultValue>, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.</span></span>  
  
```csharp  
Choices fgOrbgChoice = new Choices();  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background"));  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground"));  
SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgText", fgOrbgChoice);  
```  
  
 <span data-ttu-id="539ca-126">사용에 대 한 자세한 내용은 <xref:System.Speech.Recognition.SemanticResultValue> 및 <xref:System.Speech.Recognition.SemanticResultKey> 개체 참조 [이해 SemanticResultValue 및 SemanticResultKey 개체](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) 및 [추출에 SemanticResultKey를 사용 하는 SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) 에 [.NET Framework 4.0에 대 한 시스템 음성 프로그래밍 가이드](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043)합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-126">For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="539ca-127">다음 예제에서는 반환 된 <xref:System.Speech.Recognition.Grammar> 명령 집합/변경/Alter 전경/배경... "를 인식 하는</span><span class="sxs-lookup"><span data-stu-id="539ca-127">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="539ca-128">[색 목록] "입니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-128">[color list]".</span></span>  <span data-ttu-id="539ca-129"><xref:System.Speech.Recognition.SemanticResultValue> 및 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스 (함께에서 <xref:System.Speech.Recognition.Choices> 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체) 인식을 구문 분석할 수 있는 의미 체계를 정의 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-129"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="539ca-130">구문 분석 된 의미 체계 어떤 색 요청 된 시간과 잠금이를 수정할 수는 포그라운드 또는 백그라운드 인지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-130">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(new SemanticResultValue(introGB, String.Format("Command: {0}", introString)));  
  }    
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
        (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                       cmdIntro,  
                       new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="539ca-131">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-131">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="539ca-132">`SemanticResultValue` 생성자에 지정할 수는 <xref:System.Object> 인스턴스의 기본 데이터 형식과 `bool`, `int`, `float`, 또는 `string`합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-132">The `SemanticResultValue` constructors support specifying an <xref:System.Object> instance with an underlying data type of `bool`, `int`, `float`, or `string`.</span></span>  
  
 <span data-ttu-id="539ca-133">생성자를 만들 수는 `SemanticResultValue` 두 가지 상황 중 하나에 대 한 인스턴스:</span><span class="sxs-lookup"><span data-stu-id="539ca-133">A constructor can create a `SemanticResultValue` instance in either of two circumstances:</span></span>  
  
-   <span data-ttu-id="539ca-134">`SemanticResultValue` 사용 하는 경우 인스턴스를 명시적으로 문법 요소와 연결 되어야 합니다는 <xref:System.Speech.Recognition.GrammarBuilder> 생성 하는 <xref:System.Speech.Recognition.Grammar>합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-134">The `SemanticResultValue` instance must be explicitly associated with a grammar element when using a <xref:System.Speech.Recognition.GrammarBuilder> to construct a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
-   <span data-ttu-id="539ca-135">`SemanticResultValue` 문자열 값 구와 이미 연결 되어 또는 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-135">The `SemanticResultValue` is already associated with a string value phrase or a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="539ca-136">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" />에 의해 관리된 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-136">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="539ca-137">형식 <see langword="bool" />, <see langword="int" />, <see langword="float" /> 또는 <see langword="string" />이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-137">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="539ca-138">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 클래스의 새 인스턴스를 초기화하고 의미 값을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-138">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and specifies a semantic value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="539ca-139">A `SemanticResultValue` 이 속성에서 반환 생성자 특정 문법 요소와 연결 되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-139">A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element.</span></span> <span data-ttu-id="539ca-140">인스턴스를 사용 하 여 명시적는 연결을 설정할 수 있어야 `SemanticResultValue` 함께에서 <xref:System.Speech.Recognition.GrammarBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-140">The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="539ca-141">예를 들어 if 아래 코드 조각에에서는 <xref:System.Speech.Recognition.Grammar> 이 사용 하 여 생성 <xref:System.Speech.Recognition.GrammarBuilder> 단어 "백그라운드"의 값을 인식 하는 인스턴스 `true` 인식된 된 구와 의미 체계에 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-141">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
```csharp  
GrammarBuilder backgroundGB=new GrammarBuilder("background");  
backgroundGB.Append(new SemanticResultValue(true));  
```  
  
   
  
## Examples  
 <span data-ttu-id="539ca-142">다음 예제에서는 반환 된 <xref:System.Speech.Recognition.Grammar> 명령 집합/변경/Alter 전경/배경... "를 인식 하는</span><span class="sxs-lookup"><span data-stu-id="539ca-142">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="539ca-143">[색 목록] "입니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-143">[color list]".</span></span> <span data-ttu-id="539ca-144"><xref:System.Speech.Recognition.SemanticResultValue> 및 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스 (함께에서 <xref:System.Speech.Recognition.Choices> 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체) 인식을 구문 분석할 수 있는 의미 체계를 정의 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-144"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="539ca-145">구문 분석 된 의미 체계 어떤 색 요청 된 시간과 잠금이를 수정할 수는 포그라운드 또는 백그라운드 인지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-145">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
        cmdIntro,   
        new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Speech::Recognition::GrammarBuilder ^ builder, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="539ca-146">인식에 사용할 수 있는 문법 구성 요소</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-146">A grammar component to be used in recognition.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="539ca-147">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" />에 의해 관리된 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-147">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="539ca-148">형식 <see langword="bool" />, <see langword="int" />, <see langword="float" /> 또는 <see langword="string" />이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-148">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="539ca-149">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 클래스의 새 인스턴스를 초기화하고 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 개체를 사용하여 의미 값을 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="539ca-150">문법 요소에서 지정 된 경우 <xref:System.Speech.Recognition.GrammarBuilder> 인식 논리에 사용 되는 `value` 인식 되는 출력의 의미 체계에 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-150">If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="539ca-151">If 아래 코드 조각에 사용 하 여 인식 논리 생성는 <xref:System.Speech.Recognition.GrammarBuilder> 인스턴스 (`myGb`) 사용 하 여는 <xref:System.Speech.Recognition.Choices> 개체 (`myChoice`) 식별 입력을, 값 `true` 인식 된 의미 체계에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-151">In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue(myChoice, true);  
```  
  
 <span data-ttu-id="539ca-152">으로 <xref:System.Speech.Recognition.GrammarBuilder> 에 대 한 암시적 변환을 지 원하는 <xref:System.Speech.Recognition.Choices>, `SemanticResultValue`, 및 <xref:System.Speech.Recognition.SemanticResultKey>,이 생성자는 해당 개체도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-152">As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="539ca-153">다음 예제에서는 반환 된 <xref:System.Speech.Recognition.Grammar> 명령 집합/변경/Alter 전경/배경... "를 인식 하는</span><span class="sxs-lookup"><span data-stu-id="539ca-153">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="539ca-154">[색 목록] "입니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-154">[color list]".</span></span> <span data-ttu-id="539ca-155"><xref:System.Speech.Recognition.SemanticResultValue> 및 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스 (함께에서 <xref:System.Speech.Recognition.Choices> 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체) 인식을 구문 분석할 수 있는 의미 체계를 정의 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-155"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="539ca-156">구문 분석 된 의미 체계 어떤 색 요청 된 시간과 잠금이를 수정할 수는 포그라운드 또는 백그라운드 인지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-156">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
    }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                      cmdIntro,  
                      new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (string phrase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::String ^ phrase, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="539ca-157">인식에 사용할 수 있는 구</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-157">A phrase to be used in recognition.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="539ca-158">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" />에 의해 관리된 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-158">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span>
          </span>
          <span data-ttu-id="539ca-159">형식 <see langword="bool" />, <see langword="int" />, <see langword="float" /> 또는 <see langword="string" />이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-159">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="539ca-160">
            <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 클래스의 새 인스턴스를 초기화하고 <see cref="T:System.String" /> 개체를 사용하여 의미 값을 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-160">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="539ca-161">지정한 문자열은 경우 `phrase` 인식 논리에 사용 되는 `value` 인식 되는 출력의 의미 체계에 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-161">If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="539ca-162">인식 논리를 사용 하 여 생성 하는 경우 다음 코드 조각에는 <xref:System.Speech.Recognition.GrammarBuilder> 인스턴스 (`myGb`) 문자열 "담보 대출 내"를 사용 하 여 식별 입력을, 값 `true` 인식 된 의미 체계에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-162">In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string "my mortgage" to identify input, the value `true` will be added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue("my mortgage", true);  
```  
  
   
  
## Examples  
 <span data-ttu-id="539ca-163">다음 예제에서는 반환 된 <xref:System.Speech.Recognition.Grammar> 명령 집합/변경/Alter 전경/배경... "를 인식 하는</span><span class="sxs-lookup"><span data-stu-id="539ca-163">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="539ca-164">[색 목록] "입니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-164">[color list]".</span></span> <span data-ttu-id="539ca-165"><xref:System.Speech.Recognition.SemanticResultValue> 및 <xref:System.Speech.Recognition.SemanticResultKey> 인스턴스 (함께에서 <xref:System.Speech.Recognition.Choices> 및 <xref:System.Speech.Recognition.GrammarBuilder> 개체) 인식을 구문 분석할 수 있는 의미 체계를 정의 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-165"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="539ca-166">구문 분석 된 의미 체계 어떤 색 요청 된 시간과 잠금이를 수정할 수는 포그라운드 또는 백그라운드 인지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-166">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }  
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(cmdIntro,  
                         new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="539ca-167">현재 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 인스턴스에서 생성된 <see cref="T:System.Speech.Recognition.SemanticResultValue" />의 인스턴스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-167">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="539ca-168">현재 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 인스턴스에서 생성된 <see cref="T:System.Speech.Recognition.SemanticResultValue" />의 인스턴스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="539ca-168">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="539ca-169">사용 <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> 사용 하는 <xref:System.Speech.Recognition.GrammarBuilder> 사용 하는 생성자는 <xref:System.Speech.Recognition.SemanticResultValue> 인수로 (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span><span class="sxs-lookup"><span data-stu-id="539ca-169">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="539ca-170">다음 예제에서는 <xref:System.Speech.Recognition.Grammar> 지 원하는 명령 프롬프트 창의 배경색을 변경 하는 명령 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-170">The following example creates <xref:System.Speech.Recognition.Grammar> objects that support commands to change the background color.</span></span>  
  
 <span data-ttu-id="539ca-171">A <xref:System.Speech.Recognition.Choices> 개체 (`colorChoice`)를 사용 하 여 채워진 배경색에 대 한 옵션 목록을 포함 하는 <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> 메서드를 <xref:System.Speech.Recognition.GrammarBuilder> 에서 가져온 인스턴스는 <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> 에서 메서드는 `SemanticResultValue` 생성 된 개체 색 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="539ca-171">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances that are obtained from the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the `SemanticResultValue` objects created from color strings.</span></span>  
  
 <span data-ttu-id="539ca-172">A <xref:System.Speech.Recognition.GrammarBuilder> 호출 하 여 가져온 다음 <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> 에 <xref:System.Speech.Recognition.SemanticResultKey> 에 의미 체계 선택 항목을 키에 사용 되는 인스턴스는 `colorChoice` 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="539ca-172">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in the `colorChoice` instance.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RBG.  
  // Choices constructors do not take a SemanticResultValue parameter, so  
  // cast SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    SemanticResultValue colorValue =   
        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
    colorChoice.Add(colorValue.ToGrammarBuilder());  
  }  
  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with an introductory phrase and the  
  // color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the final grammar, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  
  grammar.Name = "Set Background Color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>