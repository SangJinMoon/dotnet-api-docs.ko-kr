<Type Name="TagRegex35" FullName="System.Web.RegularExpressions.TagRegex35">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dfd19a54d49fcea926334c04f8e7167d4780a62f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30537007" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TagRegex35 : System.Text.RegularExpressions.Regex" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TagRegex35 extends System.Text.RegularExpressions.Regex" />
  <TypeSignature Language="DocId" Value="T:System.Web.RegularExpressions.TagRegex35" />
  <TypeSignature Language="VB.NET" Value="Public Class TagRegex35&#xA;Inherits Regex" />
  <TypeSignature Language="C++ CLI" Value="public ref class TagRegex35 : System::Text::RegularExpressions::Regex" />
  <AssemblyInfo>
    <AssemblyName>System.Web.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Regex</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>.NET Framework 3.5 SP1 및 이전 버전을 대상으로 하는 응용 프로그램을 위한 HTML 요소의 여는 태그, XML 요소 또는 ASP.NET 웹 서버 컨트롤 태그를 구문 분석하는 정규식을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.RegularExpressions.TagRegex35> 클래스는 ASP.NET의 HTML 요소는 XML 요소 또는 대상으로 하는 응용 프로그램에 대 한 ASP.NET 웹 서버 컨트롤 태그는 여는 태그를 구문 분석을 내부적으로 사용 하는 정규식을 제공 된 [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] 및 이전 버전입니다. ASP.NET을 사용 하는 <xref:System.Web.RegularExpressions.TagRegex?displayProperty=nameWithType> 대상으로 하는 응용 프로그램에 대 한 클래스는 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 이상 버전입니다.  
  
> [!NOTE]
>  <xref:System.Web.RegularExpressions> 클래스 내부적으로 사용 되는.NET Framework ASP.NET 페이지를 구문 분석할 수 있습니다.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Text.RegularExpressions.Regex" />
    <altmember cref="T:System.Web.RegularExpressions.TagRegex" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.RegularExpressions.TagRegex35" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagRegex35 ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.RegularExpressions.TagRegex35.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagRegex35();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.RegularExpressions.TagRegex35" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagRegex35 (TimeSpan A_1);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(valuetype System.TimeSpan A_1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.RegularExpressions.TagRegex35.#ctor(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (A_1 As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagRegex35(TimeSpan A_1);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="A_1" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="A_1">일치 작업이 시간 초과되어서는 안되는 경우 시간 초과 간격 또는 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />입니다.</param>
        <summary>지정된 제한 시간 값을 사용하여 <see cref="T:System.Web.RegularExpressions.TagRegex35" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `A_1` 매개 변수는 정규식 엔진은 작업 시간이 초과 되기 전에 일치를 찾으려고 시도 하는 최대 시간 간격을 나타내는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>