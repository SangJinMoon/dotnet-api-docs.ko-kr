<Type Name="ILogger" FullName="Microsoft.Build.Framework.ILogger">
  <TypeSignature Language="C#" Value="public interface ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ILogger" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILogger" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1d267-101">빌드 시스템 이벤트를 구독하는 MSBuild 로거를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-101">Defines an MSBuild logger, which subscribes to build system events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d267-102">모든로 거 클래스를 인식 하려면이 인터페이스를 구현 해야 합니다는 [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] 엔진입니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-102">All logger classes must implement this interface to be recognized by the [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] engine.</span></span>  
  
 <span data-ttu-id="1d267-103">이 인터페이스를 직접 구현 하는 대신 또한에서 파생 시켜 클래스 도우미 클래스인 <xref:Microsoft.Build.Utilities.Logger>, 일부 기본 구현을 제공 하는 <xref:Microsoft.Build.Framework.ILogger> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-103">Instead of implementing this interface directly, you can also derive your class from the helper class, <xref:Microsoft.Build.Utilities.Logger>, which provides default implementations of some <xref:Microsoft.Build.Framework.ILogger> members.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d267-104">다음 예제에서는 기본로 거를 작성 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-104">The following example shows how to write a basic logger.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="1d267-105">로거에 사용할 수 있는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-105">The events available to loggers.</span></span></param>
        <summary><span data-ttu-id="1d267-106">특정 이벤트에 로거를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-106">Subscribes loggers to specific events.</span></span> <span data-ttu-id="1d267-107">이 메서드는 이벤트가 발생하기 전에 빌드 엔진에 로거가 등록될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-107">This method is called when the logger is registered with the build engine, before any events are raised.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d267-108">로거의 사용자 정의 매개 변수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-108">Gets or sets the user-defined parameters of the logger.</span></span></summary>
        <value><span data-ttu-id="1d267-109">로거 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-109">The logger parameters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d267-110">매개 변수는 모든 형식으로이 속성에 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-110">Parameters may be represented in this property in any format.</span></span> <span data-ttu-id="1d267-111">예를 들어 두 개의 매개 변수 및 값을 나타내기 위해 사용할 수 있습니다는 문자열 "parameter1 = value1; parameter2 = value2"입니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-111">For example, to represent two parameters and values, you could use the string "parameter1=value1;parameter2=value2".</span></span>  
  
 <span data-ttu-id="1d267-112">이 속성은 null 참조(Visual Basic의 경우 `Nothing`)일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-112">This property can be a null reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d267-113">초기화할 때나 빌드하는 동안 로거에 할당된 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-113">Releases the resources allocated to the logger at the time of initialization or during the build.</span></span> <span data-ttu-id="1d267-114">이 메서드는 모든 이벤트가 발생한 후에 빌드 엔진에서 로거의 등록이 취소될 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-114">This method is called when the logger is unregistered from the engine, after all events are raised.</span></span> <span data-ttu-id="1d267-115">일반적으로 [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)]의 호스트는 종료되기 바로 전에 로거의 등록을 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-115">A host of [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] typically unregisters loggers immediately before quitting.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d267-116">이벤트 로그에 표시할 세부 정보 수준을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-116">Gets or sets the level of detail to show in the event log.</span></span></summary>
        <value><span data-ttu-id="1d267-117">열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-117">One of the enumeration values.</span></span> <span data-ttu-id="1d267-118">기본값은 <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-118">The default is <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d267-119">로 거 이벤트를 선택할 때 세부 정보 표시 지침을 따르는 일관 된 사용자 경험을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1d267-119">While a logger is free to choose the events it logs, following the verbosity guidelines creates a consistent user experience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>