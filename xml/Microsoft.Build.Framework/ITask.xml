<Type Name="ITask" FullName="Microsoft.Build.Framework.ITask">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb6bb6449289d8734b9687c0734d87685829e18e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36735541" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITask" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITask" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ITask" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITask" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITask" />
  <TypeSignature Language="F#" Value="type ITask = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>빌드 작업을 수행하기 위해 MSBuild에서 사용하는 실행 코드 단위인 작업을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 작업 클래스는 빌드 엔진에서 인식 되도록 하려면이 인터페이스를 구현 해야 합니다. 이 인터페이스를 직접 구현 하, 대신 또한에서 파생 시켜 클래스 도우미 클래스 <xref:Microsoft.Build.Utilities.Task>, 일부 기본 구현을 제공 하는 <xref:Microsoft.Build.Framework.ITask> 멤버입니다.  
  
   
  
## Examples  
 다음 예제에서는 완전 한 작업 구현에서 코드를 보여 줍니다.  
  
 [!code-csharp[msbuild_MakeDirTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BuildEngine">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.IBuildEngine BuildEngine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.IBuildEngine BuildEngine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ITask.BuildEngine" />
      <MemberSignature Language="VB.NET" Value="Public Property BuildEngine As IBuildEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::IBuildEngine ^ BuildEngine { Microsoft::Build::Framework::IBuildEngine ^ get(); void set(Microsoft::Build::Framework::IBuildEngine ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BuildEngine : Microsoft.Build.Framework.IBuildEngine with get, set" Usage="Microsoft.Build.Framework.ITask.BuildEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.IBuildEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>작업과 연결된 빌드 엔진을 가져오거나 설정합니다.</summary>
        <value>작업과 연결된 빌드 엔진입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITask.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Execute();" />
      <MemberSignature Language="F#" Value="abstract member Execute : unit -&gt; bool" Usage="iTask.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>작업을 실행합니다.</summary>
        <returns>작업이 성공적으로 실행되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 작업을 실행 하도록 빌드 엔진에 의해 호출 됩니다. 이 메서드가 종료 되 면 태스크는 실행이 성공 하는 경우를 나타냅니다. 이 메서드에서 예외를 throw 하는 작업을 하는 경우 작업이 실패 했습니다 엔진 가정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostObject">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskHost HostObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskHost HostObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ITask.HostObject" />
      <MemberSignature Language="VB.NET" Value="Public Property HostObject As ITaskHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::ITaskHost ^ HostObject { Microsoft::Build::Framework::ITaskHost ^ get(); void set(Microsoft::Build::Framework::ITaskHost ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostObject : Microsoft.Build.Framework.ITaskHost with get, set" Usage="Microsoft.Build.Framework.ITask.HostObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>작업과 연결된 임의의 호스트 개체를 가져오거나 설정합니다.</summary>
        <value>작업에 연결된 호스트 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 null 참조(Visual Basic의 경우 `Nothing`)일 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>