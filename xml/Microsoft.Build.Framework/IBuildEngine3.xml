<Type Name="IBuildEngine3" FullName="Microsoft.Build.Framework.IBuildEngine3">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e6d95ce9aec6a48151110a9e6f8b12673c8a104" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30330107" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBuildEngine3 : Microsoft.Build.Framework.IBuildEngine2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBuildEngine3 implements class Microsoft.Build.Framework.IBuildEngine, class Microsoft.Build.Framework.IBuildEngine2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.IBuildEngine3" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBuildEngine3&#xA;Implements IBuildEngine2" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBuildEngine3 : Microsoft::Build::Framework::IBuildEngine2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine2</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c9fd9-101">이 인터페이스는 IBuildEngine을 확장하여 프로젝트 파일을 병렬로 빌드할 수 있는 메서드를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9fd9-101">This interface extends IBuildEngine to provide a method allowing building project files in parallel.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BuildProjectFilesInParallel">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.BuildEngineResult BuildProjectFilesInParallel (string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.Generic.IList&lt;string&gt;[] removeGlobalProperties, string[] toolsVersion, bool returnTargetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Build.Framework.BuildEngineResult BuildProjectFilesInParallel(string[] projectFileNames, string[] targetNames, class System.Collections.IDictionary[] globalProperties, class System.Collections.Generic.IList`1&lt;string&gt;[] removeGlobalProperties, string[] toolsVersion, bool returnTargetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.Generic.IList{System.String}[],System.String[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildProjectFilesInParallel (projectFileNames As String(), targetNames As String(), globalProperties As IDictionary(), removeGlobalProperties As IList(Of String)(), toolsVersion As String(), returnTargetOutputs As Boolean) As BuildEngineResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::BuildEngineResult BuildProjectFilesInParallel(cli::array &lt;System::String ^&gt; ^ projectFileNames, cli::array &lt;System::String ^&gt; ^ targetNames, cli::array &lt;System::Collections::IDictionary ^&gt; ^ globalProperties, cli::array &lt;System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ removeGlobalProperties, cli::array &lt;System::String ^&gt; ^ toolsVersion, bool returnTargetOutputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.BuildEngineResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileNames" Type="System.String[]" />
        <Parameter Name="targetNames" Type="System.String[]" />
        <Parameter Name="globalProperties" Type="System.Collections.IDictionary[]" />
        <Parameter Name="removeGlobalProperties" Type="System.Collections.Generic.IList&lt;System.String&gt;[]" />
        <Parameter Name="toolsVersion" Type="System.String[]" />
        <Parameter Name="returnTargetOutputs" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="projectFileNames">
          <span data-ttu-id="c9fd9-102">빌드할 프로젝트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fd9-102">The project to build.</span>
          </span>
        </param>
        <param name="targetNames">
          <span data-ttu-id="c9fd9-103">프로젝트에서 빌드할 대상입니다(null이 될 수 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fd9-103">The targets in the project to build (can be null).</span>
          </span>
        </param>
        <param name="globalProperties">
          <span data-ttu-id="c9fd9-104">자식 프로젝트에 적용할 추가 전역 속성의 <see cref="T:System.Collections.IDictionary" /> 배열입니다. 배열 항목은 null이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fd9-104">An array of <see cref="T:System.Collections.IDictionary" /> of additional global properties to apply to the child project (array entries can be null).</span>
          </span>
          <span data-ttu-id="c9fd9-105">키와 값은 모두 문자열이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fd9-105">The keys and should both be strings.</span>
          </span>
        </param>
        <param name="removeGlobalProperties">
          <span data-ttu-id="c9fd9-106">제거해야 하는 전역 속성 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fd9-106">A list of global properties which should be removed.</span>
          </span>
        </param>
        <param name="toolsVersion">
          <span data-ttu-id="c9fd9-107">이 빌드 중에 사용되는 엔진에서 인식하는 도구 버전입니다(null이 될 수 있음).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fd9-107">A tools version recognized by the Engine that will be used during this build (can be null).</span>
          </span>
        </param>
        <param name="returnTargetOutputs">
          <span data-ttu-id="c9fd9-108">BuildEngineResult에서 대상 출력이 반환되어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fd9-108">Should the target outputs be returned in the BuildEngineResult.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9fd9-109">작업이 프로젝트 파일에 대한 빌드를 시작할 수 있도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fd9-109">Allows tasks to initiate a build on a project file</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9fd9-110">빌드가 성공적으로 수행되면 지정된 대상의 출력이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fd9-110">If the build is successful, the outputs of the specified targets are returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reacquire">
      <MemberSignature Language="C#" Value="public void Reacquire ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reacquire() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine3.Reacquire" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reacquire ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reacquire();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9fd9-111">반환한 이후에 컨트롤을 다시 가져오기를 기다립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fd9-111">Waits to reacquire control after yielding.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public void Yield ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Yield() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine3.Yield" />
      <MemberSignature Language="VB.NET" Value="Public Sub Yield ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Yield();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9fd9-112">이 작업에 장기 실행되는 out-of-process 구성 요소가 있고 해당 작업이 완료되는 동안 빌드에서 다른 작업이 수행될 수 있음을 시스템에 알립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9fd9-112">Informs the system that this task has a long-running out-of-process component and other work can be done in the build while that work completes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9fd9-113">CPU 당 (msbuild.exe 프로세스) 노드가 하나만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9fd9-113">There is only one node (msbuild.exe process) per CPU.</span></span> <span data-ttu-id="c9fd9-114">하나의 프로젝트, 대상 및 작업 노드 언제 든 지 구축할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9fd9-114">Only one project, target, and task can build at any time on a node.</span></span> <span data-ttu-id="c9fd9-115">작업을 대기 하는 경우 예를 들어 생성 된 도구 또는 다른 이벤트의 완료에 대 한 작업 호출할 수 Yield 즉시 반환 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="c9fd9-115">If a task is waiting, for example, for a spawned tool or some other event to complete, the task can call Yield, which returns immediately.</span></span> <span data-ttu-id="c9fd9-116">이렇게 하면 사용 가능한 경우 빌드 다른 프로젝트에서 대상 노드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c9fd9-116">This lets the node build a target in another project, if any are available.</span></span>  <span data-ttu-id="c9fd9-117">작업이 계속 진행할 준비가 될 때 호출 해야 <xref:Microsoft.Build.Framework.IBuildEngine3.Reacquire%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c9fd9-117">When the task is ready to continue, it should call <xref:Microsoft.Build.Framework.IBuildEngine3.Reacquire%2A>.</span></span> <span data-ttu-id="c9fd9-118">일반적으로 작업을 20 / 30 개 이상의 초 걸릴 것이 필요한 경우 것 하도록 선택할 수 호출 `Yield` 작업을 시작 하기 전에 및 `Reaquire` 작업이 완료 될 때입니다.</span><span class="sxs-lookup"><span data-stu-id="c9fd9-118">As a rough rule, if a task expects that an operation will take more than 20 or 30 seconds, it can choose to call `Yield` before it starts the operation, and `Reaquire` when the operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>