<Type Name="CodeSnippetStatement" FullName="System.CodeDom.CodeSnippetStatement">
  <TypeSignature Language="C#" Value="public class CodeSnippetStatement : System.CodeDom.CodeStatement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeSnippetStatement extends System.CodeDom.CodeStatement" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeSnippetStatement" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeSnippetStatement&#xA;Inherits CodeStatement" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeSnippetStatement : System::CodeDom::CodeStatement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeStatement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a4935-101">리터럴 코드 단편을 사용하여 문을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-101">Represents a statement using a literal code fragment.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4935-102"><xref:System.CodeDom.CodeSnippetStatement> 수정 하지 않고 소스에 직접 포함 될 리터럴 코드 조각을 사용 하 여 문을 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-102"><xref:System.CodeDom.CodeSnippetStatement> can represent a statement using a literal code fragment that will be included directly in the source without modification.</span></span>  
  
 <span data-ttu-id="a4935-103">A <xref:System.CodeDom.CodeSnippetStatement> 코드의 섹션을 문자열로 원래 형식으로 정확 하 게 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-103">A <xref:System.CodeDom.CodeSnippetStatement> stores a section of code exactly in its original format as a string.</span></span> <span data-ttu-id="a4935-104">CodeDOM 리터럴 코드 조각을 의미 하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-104">The CodeDOM does not translate literal code fragments.</span></span> <span data-ttu-id="a4935-105">리터럴 코드 조각은 저장 하 고 원래 형식으로 출력 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-105">Literal code fragments are stored and output in their original format.</span></span> <span data-ttu-id="a4935-106">CodeDOM 개체 리터럴 코드를 포함 하는 개발자가 대상 언어에 이미 있는 코드를 캡슐화 할 수 있도록 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-106">CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.</span></span>  
  
 <span data-ttu-id="a4935-107"><xref:System.CodeDom.CodeSnippetStatement.Value%2A> 속성 코드 조각 문에 대 한 리터럴 코드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-107">The <xref:System.CodeDom.CodeSnippetStatement.Value%2A> property contains the literal code for the snippet statement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4935-108">다음 예제에서는의 인스턴스는 <xref:System.CodeDom.CodeSnippetStatement> 클래스 리터럴 코드 조각을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-108">The following example creates an instance of the <xref:System.CodeDom.CodeSnippetStatement> class using a literal code fragment.</span></span> <span data-ttu-id="a4935-109">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.CodeRegionDirective> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-109">This code example is part of a larger example provided for the <xref:System.CodeDom.CodeRegionDirective> class.</span></span>  
  
 [!code-csharp[System.CodeDom.CodeDirectives#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/CS/codedirective.cs#16)]
 [!code-vb[System.CodeDom.CodeDirectives#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/VB/codedirective.vb#16)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a4935-110"><see cref="T:System.CodeDom.CodeSnippetStatement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-110">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetStatement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetStatement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetStatement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetStatement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a4935-111"><see cref="T:System.CodeDom.CodeSnippetStatement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-111">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetStatement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetStatement (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetStatement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetStatement(System::String ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a4935-112">나타낼 문의 리터럴 코드 단편입니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-112">The literal code fragment of the statement to represent.</span></span></param>
        <summary><span data-ttu-id="a4935-113">지정된 코드 단편을 사용하여 <see cref="T:System.CodeDom.CodeSnippetStatement" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-113">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetStatement" /> class using the specified code fragment.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a4935-114">다음 예제에서는의 인스턴스는 <xref:System.CodeDom.CodeSnippetStatement> 클래스 리터럴 코드 조각을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-114">The following example creates an instance of the <xref:System.CodeDom.CodeSnippetStatement> class using a literal code fragment.</span></span> <span data-ttu-id="a4935-115">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.CodeRegionDirective> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-115">This code example is part of a larger example provided for the <xref:System.CodeDom.CodeRegionDirective> class.</span></span>  
  
 [!code-csharp[System.CodeDom.CodeDirectives#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/CS/codedirective.cs#16)]
 [!code-vb[System.CodeDom.CodeDirectives#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.CodeDom.CodeDirectives/VB/codedirective.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeSnippetStatement.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a4935-116">리터럴 코드 단편 문을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-116">Gets or sets the literal code fragment statement.</span></span></summary>
        <value><span data-ttu-id="a4935-117">리터럴 코드 단편 문입니다.</span><span class="sxs-lookup"><span data-stu-id="a4935-117">The literal code fragment statement.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>