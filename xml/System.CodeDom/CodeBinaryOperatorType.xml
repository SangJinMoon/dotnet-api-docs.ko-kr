<Type Name="CodeBinaryOperatorType" FullName="System.CodeDom.CodeBinaryOperatorType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9b45cd201dabcc617f6e538dadbf3d18eea0d183" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30359007" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum CodeBinaryOperatorType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed CodeBinaryOperatorType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeBinaryOperatorType" />
  <TypeSignature Language="VB.NET" Value="Public Enum CodeBinaryOperatorType" />
  <TypeSignature Language="C++ CLI" Value="public enum class CodeBinaryOperatorType" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0d59b-101">지원되는 이항 연산자의 식별자를 정의합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d59b-101">Defines identifiers for supported binary operators.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d59b-102"><xref:System.CodeDom.CodeBinaryOperatorType> 가장 일반적인 유형의 이항 연산자에 대 한 식별자를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="0d59b-102"><xref:System.CodeDom.CodeBinaryOperatorType> defines identifiers for the most common types of binary operators.</span></span> <span data-ttu-id="0d59b-103">이러한 연산자 식별자는 <xref:System.CodeDom.CodeBinaryOperatorExpression> 각 식에서 연산자의 유형을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0d59b-103">These operator identifiers are used by <xref:System.CodeDom.CodeBinaryOperatorExpression> to indicate the type of operator in each expression.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeBinaryOperatorExpression" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="Add" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Add = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Add" />
      <MemberSignature Language="VB.NET" Value="Add" />
      <MemberSignature Language="C++ CLI" Value="Add" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-104">더하기 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-104">Addition operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Assign">
      <MemberSignature Language="C#" Value="Assign" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Assign = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Assign" />
      <MemberSignature Language="VB.NET" Value="Assign" />
      <MemberSignature Language="C++ CLI" Value="Assign" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-105">대입 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-105">Assignment operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd">
      <MemberSignature Language="C#" Value="BitwiseAnd" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType BitwiseAnd = int32(10)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.BitwiseAnd" />
      <MemberSignature Language="VB.NET" Value="BitwiseAnd" />
      <MemberSignature Language="C++ CLI" Value="BitwiseAnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-106">비트 AND 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-106">Bitwise and operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr">
      <MemberSignature Language="C#" Value="BitwiseOr" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType BitwiseOr = int32(9)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.BitwiseOr" />
      <MemberSignature Language="VB.NET" Value="BitwiseOr" />
      <MemberSignature Language="C++ CLI" Value="BitwiseOr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-107">비트 논리합 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-107">Bitwise or operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="BooleanAnd">
      <MemberSignature Language="C#" Value="BooleanAnd" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType BooleanAnd = int32(12)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.BooleanAnd" />
      <MemberSignature Language="VB.NET" Value="BooleanAnd" />
      <MemberSignature Language="C++ CLI" Value="BooleanAnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>12</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-108">부울 AND 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-108">Boolean and operator.</span>
          </span>
          <span data-ttu-id="0d59b-109">이 연산자는 단락(short circuit) 연산자를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-109">This represents a short circuiting operator.</span>
          </span>
          <span data-ttu-id="0d59b-110">단락(short circuit) 연산자는 필요한 만큼의 식만 평가한 다음 올바른 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-110">A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="BooleanOr">
      <MemberSignature Language="C#" Value="BooleanOr" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType BooleanOr = int32(11)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.BooleanOr" />
      <MemberSignature Language="VB.NET" Value="BooleanOr" />
      <MemberSignature Language="C++ CLI" Value="BooleanOr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-111">부울 OR 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-111">Boolean or operator.</span>
          </span>
          <span data-ttu-id="0d59b-112">이 연산자는 단락(short circuit) 연산자를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-112">This represents a short circuiting operator.</span>
          </span>
          <span data-ttu-id="0d59b-113">단락(short circuit) 연산자는 필요한 만큼의 식만 평가한 다음 올바른 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-113">A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="Divide" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Divide = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Divide" />
      <MemberSignature Language="VB.NET" Value="Divide" />
      <MemberSignature Language="C++ CLI" Value="Divide" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-114">나누기 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-114">Division operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="GreaterThan" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType GreaterThan = int32(15)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.GreaterThan" />
      <MemberSignature Language="VB.NET" Value="GreaterThan" />
      <MemberSignature Language="C++ CLI" Value="GreaterThan" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-115">보다 큼 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-115">Greater than operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="GreaterThanOrEqual" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType GreaterThanOrEqual = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.GreaterThanOrEqual" />
      <MemberSignature Language="VB.NET" Value="GreaterThanOrEqual" />
      <MemberSignature Language="C++ CLI" Value="GreaterThanOrEqual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-116">크거나 같음 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-116">Greater than or equal operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IdentityEquality">
      <MemberSignature Language="C#" Value="IdentityEquality" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType IdentityEquality = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.IdentityEquality" />
      <MemberSignature Language="VB.NET" Value="IdentityEquality" />
      <MemberSignature Language="C++ CLI" Value="IdentityEquality" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-117">ID 같음 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-117">Identity equal operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IdentityInequality">
      <MemberSignature Language="C#" Value="IdentityInequality" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType IdentityInequality = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.IdentityInequality" />
      <MemberSignature Language="VB.NET" Value="IdentityInequality" />
      <MemberSignature Language="C++ CLI" Value="IdentityInequality" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-118">ID 같지 않음 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-118">Identity not equal operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="LessThan" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType LessThan = int32(13)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.LessThan" />
      <MemberSignature Language="VB.NET" Value="LessThan" />
      <MemberSignature Language="C++ CLI" Value="LessThan" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>13</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-119">보다 작음 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-119">Less than operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="LessThanOrEqual" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType LessThanOrEqual = int32(14)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.LessThanOrEqual" />
      <MemberSignature Language="VB.NET" Value="LessThanOrEqual" />
      <MemberSignature Language="C++ CLI" Value="LessThanOrEqual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>14</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-120">작거나 같음 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-120">Less than or equal operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Modulus">
      <MemberSignature Language="C#" Value="Modulus" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Modulus = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Modulus" />
      <MemberSignature Language="VB.NET" Value="Modulus" />
      <MemberSignature Language="C++ CLI" Value="Modulus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-121">나머지 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-121">Modulus operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="Multiply" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Multiply = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Multiply" />
      <MemberSignature Language="VB.NET" Value="Multiply" />
      <MemberSignature Language="C++ CLI" Value="Multiply" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-122">곱하기 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-122">Multiplication operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="Subtract" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Subtract = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Subtract" />
      <MemberSignature Language="VB.NET" Value="Subtract" />
      <MemberSignature Language="C++ CLI" Value="Subtract" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-123">빼기 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-123">Subtraction operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ValueEquality">
      <MemberSignature Language="C#" Value="ValueEquality" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType ValueEquality = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.ValueEquality" />
      <MemberSignature Language="VB.NET" Value="ValueEquality" />
      <MemberSignature Language="C++ CLI" Value="ValueEquality" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d59b-124">값 같음 연산자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d59b-124">Value equal operator.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>