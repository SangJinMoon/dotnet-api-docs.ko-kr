<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeBinaryOperatorType.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59b45cd201dabcc617f6e538dadbf3d18eea0d183.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b45cd201dabcc617f6e538dadbf3d18eea0d183</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeBinaryOperatorType">
          <source>Defines identifiers for supported binary operators.</source>
          <target state="translated">지원되는 이항 연산자의 식별자를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeBinaryOperatorType">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeBinaryOperatorType&gt;</ph> defines identifiers for the most common types of binary operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeBinaryOperatorType&gt;</ph> 가장 일반적인 유형의 이항 연산자에 대 한 식별자를 정의합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeBinaryOperatorType">
          <source>These operator identifiers are used by <ph id="ph1">&lt;xref:System.CodeDom.CodeBinaryOperatorExpression&gt;</ph> to indicate the type of operator in each expression.</source>
          <target state="translated">이러한 연산자 식별자는 <ph id="ph1">&lt;xref:System.CodeDom.CodeBinaryOperatorExpression&gt;</ph> 각 식에서 연산자의 유형을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.Add">
          <source>Addition operator.</source>
          <target state="translated">더하기 연산자입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.Assign">
          <source>Assignment operator.</source>
          <target state="translated">대입 연산자입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.BitwiseAnd">
          <source>Bitwise and operator.</source>
          <target state="translated">비트 AND 연산자입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.BitwiseOr">
          <source>Bitwise or operator.</source>
          <target state="translated">비트 논리합 연산자입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.BooleanAnd">
          <source>Boolean and operator.</source>
          <target state="translated">부울 AND 연산자입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.BooleanAnd">
          <source>This represents a short circuiting operator.</source>
          <target state="translated">이 연산자는 단락(short circuit) 연산자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.BooleanAnd">
          <source>A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.</source>
          <target state="translated">단락(short circuit) 연산자는 필요한 만큼의 식만 평가한 다음 올바른 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.BooleanOr">
          <source>Boolean or operator.</source>
          <target state="translated">부울 OR 연산자입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.BooleanOr">
          <source>This represents a short circuiting operator.</source>
          <target state="translated">이 연산자는 단락(short circuit) 연산자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.BooleanOr">
          <source>A short circuiting operator will evaluate only as many expressions as necessary before returning a correct value.</source>
          <target state="translated">단락(short circuit) 연산자는 필요한 만큼의 식만 평가한 다음 올바른 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.Divide">
          <source>Division operator.</source>
          <target state="translated">나누기 연산자입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.GreaterThan">
          <source>Greater than operator.</source>
          <target state="translated">보다 큼 연산자입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.GreaterThanOrEqual">
          <source>Greater than or equal operator.</source>
          <target state="translated">크거나 같음 연산자입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.IdentityEquality">
          <source>Identity equal operator.</source>
          <target state="translated">ID 같음 연산자입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.IdentityInequality">
          <source>Identity not equal operator.</source>
          <target state="translated">ID 같지 않음 연산자입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.LessThan">
          <source>Less than operator.</source>
          <target state="translated">보다 작음 연산자입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.LessThanOrEqual">
          <source>Less than or equal operator.</source>
          <target state="translated">작거나 같음 연산자입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.Modulus">
          <source>Modulus operator.</source>
          <target state="translated">나머지 연산자입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.Multiply">
          <source>Multiplication operator.</source>
          <target state="translated">곱하기 연산자입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.Subtract">
          <source>Subtraction operator.</source>
          <target state="translated">빼기 연산자입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.CodeDom.CodeBinaryOperatorType.ValueEquality">
          <source>Value equal operator.</source>
          <target state="translated">값 같음 연산자입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>