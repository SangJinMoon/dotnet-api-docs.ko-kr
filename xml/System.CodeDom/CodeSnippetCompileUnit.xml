<Type Name="CodeSnippetCompileUnit" FullName="System.CodeDom.CodeSnippetCompileUnit">
  <TypeSignature Language="C#" Value="public class CodeSnippetCompileUnit : System.CodeDom.CodeCompileUnit" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeSnippetCompileUnit extends System.CodeDom.CodeCompileUnit" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeSnippetCompileUnit" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeSnippetCompileUnit&#xA;Inherits CodeCompileUnit" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeSnippetCompileUnit : System::CodeDom::CodeCompileUnit" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeCompileUnit</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e195a-101">컴파일할 수 있는 리터럴 코드 단편을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-101">Represents a literal code fragment that can be compiled.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e195a-102"><xref:System.CodeDom.CodeSnippetCompileUnit> 리터럴 수정 하지 않고 소스에 직접 포함 된 코드 블록을 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-102"><xref:System.CodeDom.CodeSnippetCompileUnit> can represent a literal block of code that is included directly in the source without modification.</span></span>  
  
 <span data-ttu-id="e195a-103">A <xref:System.CodeDom.CodeSnippetCompileUnit> 코드의 섹션을 문자열로 원래 형식으로 정확 하 게 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-103">A <xref:System.CodeDom.CodeSnippetCompileUnit> stores a section of code, exactly in its original format, as a string.</span></span> <span data-ttu-id="e195a-104">CodeDOM 리터럴 코드 조각을 의미 하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-104">The CodeDOM does not translate literal code fragments.</span></span> <span data-ttu-id="e195a-105">리터럴 코드 조각은 저장 하 고 원래 형식으로 출력 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-105">Literal code fragments are stored and output in their original format.</span></span> <span data-ttu-id="e195a-106">CodeDOM 개체 리터럴 코드를 포함 하는 개발자가 대상 언어에 이미 있는 코드를 캡슐화 할 수 있도록 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-106">CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.</span></span>  
  
 <span data-ttu-id="e195a-107"><xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A> 속성 문자열 리터럴 코드 조각을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-107">The <xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A> property contains the literal code fragment as a string.</span></span> <span data-ttu-id="e195a-108"><xref:System.CodeDom.CodeSnippetCompileUnit.LinePragma%2A> 속성은 선택적 이며는 소스 코드 문서의 내에서 코드의 위치를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-108">The <xref:System.CodeDom.CodeSnippetCompileUnit.LinePragma%2A> property is optional and specifies the position of the code within a source code document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e195a-109">다음 코드 예제에서는의 새 인스턴스를 만드는 방법을 보여 줍니다.는 <xref:System.CodeDom.CodeSnippetCompileUnit> 리터럴 코드를 나타내는 문자열을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-109">The following code example demonstrates how to create a new instance of the <xref:System.CodeDom.CodeSnippetCompileUnit> class by using a string that represents literal code.</span></span>  
  
 [!code-cpp[CodeDomSampleBatch#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomSampleBatch/CPP/class1.cpp#8)]
 [!code-csharp[CodeDomSampleBatch#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomSampleBatch/CS/class1.cs#8)]
 [!code-vb[CodeDomSampleBatch#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomSampleBatch/VB/class1.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e195a-110"><see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-110">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetCompileUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetCompileUnit.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetCompileUnit();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e195a-111"><see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-111">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e195a-112">이 생성자를 사용 하는 경우 설정 해야는 <xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-112">If you use this constructor you should also set the <xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetCompileUnit (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetCompileUnit.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetCompileUnit(System::String ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e195a-113">나타낼 리터럴 코드 단편입니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-113">The literal code fragment to represent.</span></span></param>
        <summary><span data-ttu-id="e195a-114"><see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-114">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e195a-115">다음 코드 예제에서는의 새 인스턴스를 만드는 방법을 보여 줍니다.는 <xref:System.CodeDom.CodeSnippetCompileUnit> 리터럴 코드를 나타내는 문자열을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-115">The following code example demonstrates how to create a new instance of the <xref:System.CodeDom.CodeSnippetCompileUnit> class by using a string that represents literal code.</span></span>  
  
 [!code-cpp[CodeDomSampleBatch#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomSampleBatch/CPP/class1.cpp#8)]
 [!code-csharp[CodeDomSampleBatch#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomSampleBatch/CS/class1.cs#8)]
 [!code-vb[CodeDomSampleBatch#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomSampleBatch/VB/class1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinePragma">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeLinePragma LinePragma { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeLinePragma LinePragma" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeSnippetCompileUnit.LinePragma" />
      <MemberSignature Language="VB.NET" Value="Public Property LinePragma As CodeLinePragma" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeLinePragma ^ LinePragma { System::CodeDom::CodeLinePragma ^ get(); void set(System::CodeDom::CodeLinePragma ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeLinePragma</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e195a-116">소스 코드 문서에서 코드가 있는 위치에 대한 줄 및 파일 정보를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-116">Gets or sets the line and file information about where the code is located in a source code document.</span></span></summary>
        <value><span data-ttu-id="e195a-117">코드 단편의 위치를 나타내는 <see cref="T:System.CodeDom.CodeLinePragma" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-117">A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates the position of the code fragment.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeLinePragma" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeSnippetCompileUnit.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e195a-118">나타낼 리터럴 코드 단편을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-118">Gets or sets the literal code fragment to represent.</span></span></summary>
        <value><span data-ttu-id="e195a-119">리터럴 코드 단편입니다.</span><span class="sxs-lookup"><span data-stu-id="e195a-119">The literal code fragment.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>