<Type Name="CodeTypeReference" FullName="System.CodeDom.CodeTypeReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d1a67315e230689095f911f99b12e349ec9570f7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36645841" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeTypeReference : System.CodeDom.CodeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeTypeReference extends System.CodeDom.CodeObject" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeTypeReference" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeTypeReference&#xA;Inherits CodeObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeTypeReference : System::CodeDom::CodeObject" />
  <TypeSignature Language="F#" Value="type CodeTypeReference = class&#xA;    inherit CodeObject" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>형식에 대한 참조를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.CodeDom.CodeTypeReference> 개체 CodeDOM 개체에 대 한 형식을 나타내는 데 사용 됩니다. CodeDOM 형식을 보유 하는 경우는 `Type` 유형 속성을 인지 <xref:System.CodeDom.CodeTypeReference>합니다. 예를 들어는 <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType> 속성은 한 <xref:System.CodeDom.CodeTypeReference> 필드의 데이터 형식을 나타내는입니다.  
  
 A <xref:System.CodeDom.CodeTypeReference> 초기화 될 수 있습니다는 <xref:System.Type> 개체 또는 문자열입니다. 사용 하는 것이 좋습니다 일반적으로 <xref:System.Type> 를 항상 아닐 수 있지만이 작업을 수행 합니다. 네임 스페이스 가져오기를 지원 하지 않는 언어도 때문에 문자열을 사용 하 여이 클래스의 인스턴스를 초기화 하는 경우 항상 "System.Console" 대신 "Console", 같은 정규화 된 형식을 사용 하 여 좋습니다 것. 배열에 대 한 type 개체에 전달 하거나 순위 매개 변수로 사용 하는 생성자 중 하나를 사용 하 여 배열 형식은 지정할 수 있습니다.  
  
 <xref:System.CodeDom.CodeTypeReference.BaseType%2A> 속성을 참조 하는 유형의 이름을 지정 합니다. 배열 형식에 대 한 참조는 <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> 속성에서 배열의 요소 형식을 나타냅니다 및 <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> 속성 배열의 차원 수를 나타냅니다.  
  
   
  
## Examples  
 다음 예제에서는의 사용을 보여 줍니다.는 <xref:System.CodeDom.CodeTypeReference> 를 나타내는 형식에 대 한 참조입니다.  
  
 [!code-cpp[CodeTypeOfExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeOfExample/CPP/codetypeofexample.cpp#2)]
 [!code-csharp[CodeTypeOfExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeOfExample/CS/codetypeofexample.cs#2)]
 [!code-vb[CodeTypeOfExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeOfExample/VB/codetypeofexample.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정한 형식을 사용하여 <see cref="T:System.CodeDom.CodeTypeReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.CodeDom.CodeTypeReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 빈 만듭니다 <xref:System.CodeDom.CodeTypeReference> 개체입니다.  이 생성자를 사용 하는 경우 형식 참조를 설정 하는 속성을 설정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (System.CodeDom.CodeTypeParameter typeParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeParameter typeParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeParameter As CodeTypeParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::CodeDom::CodeTypeParameter ^ typeParameter);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : System.CodeDom.CodeTypeParameter -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference typeParameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeParameter" Type="System.CodeDom.CodeTypeParameter" />
      </Parameters>
      <Docs>
        <param name="typeParameter">형식 매개 변수의 형식을 나타내는 <see cref="T:System.CodeDom.CodeTypeParameter" />입니다.</param>
        <summary>지정된 코드 형식 매개 변수를 사용하여 <see cref="T:System.CodeDom.CodeTypeReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">참조할 형식의 이름입니다.</param>
        <summary>지정된 형식 이름을 사용하여 <see cref="T:System.CodeDom.CodeTypeReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `typeName` 제네릭 형식을 참조 하는 매개 변수, 제네릭 형식에 대 한 구문 표기 규칙을 따라야 합니다. 에 대 한 리플렉션 서명을 예를 들어는 <xref:System.Collections.Generic.Dictionary%602> 형식, 여기서 `K` 문자열인 및 `V` 은 <xref:System.Collections.Generic.List%601> 정수, 다음으로는 리플렉션에 의해 표현 됩니다 (어셈블리 정보가 제거)와: ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``합니다.  
  
> [!NOTE]
>  제네릭 매개 변수를 구분 하지는 C# 꺾쇠 괄호 (<>) 및 대괄호 ()를 사용 해야 합니다.  
  
 실수 구문 지정의 가능성을 방지 하려면 형식 문자열 대신 매개 변수로 사용 하는 생성자를 사용 하는 것이 좋습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : Type -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">참조할 <see cref="T:System.Type" />입니다.</param>
        <summary>지정한 형식을 사용하여 <see cref="T:System.CodeDom.CodeTypeReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (System.CodeDom.CodeTypeReference arrayType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference arrayType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (arrayType As CodeTypeReference, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::CodeDom::CodeTypeReference ^ arrayType, int rank);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : System.CodeDom.CodeTypeReference * int -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (arrayType, rank)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arrayType" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arrayType">배열의 형식을 나타내는 <see cref="T:System.CodeDom.CodeTypeReference" />입니다.</param>
        <param name="rank">배열의 차수입니다.</param>
        <summary>지정된 배열 형식과 차수를 사용하여 <see cref="T:System.CodeDom.CodeTypeReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자 데 사용할 수 배열의 배열을 만드는 중첩으로 <xref:System.CodeDom.CodeTypeReference> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName, params System.CodeDom.CodeTypeReference[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, class System.CodeDom.CodeTypeReference[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ParamArray typeArguments As CodeTypeReference())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName, ... cli::array &lt;System::CodeDom::CodeTypeReference ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * System.CodeDom.CodeTypeReference[] -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (typeName, typeArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.CodeDom.CodeTypeReference[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeName">참조할 형식의 이름입니다.</param>
        <param name="typeArguments">
          <see cref="T:System.CodeDom.CodeTypeReference" /> 값의 배열입니다.</param>
        <summary>지정된 형식 이름 및 형식 인수를 사용하여 <see cref="T:System.CodeDom.CodeTypeReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, codeTypeReferenceOption As CodeTypeReferenceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName, System::CodeDom::CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * System.CodeDom.CodeTypeReferenceOptions -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (typeName, codeTypeReferenceOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" />
      </Parameters>
      <Docs>
        <param name="typeName">참조할 형식의 이름입니다.</param>
        <param name="codeTypeReferenceOption">
          <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> 값 중 하나인 코드 형식 참조 옵션입니다.</param>
        <summary>지정된 형식 이름 및 코드 형식 참조 옵션을 사용하여 <see cref="T:System.CodeDom.CodeTypeReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string baseType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseType As String, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ baseType, int rank);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * int -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (baseType, rank)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseType" Type="System.String" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="baseType">배열 요소의 형식 이름입니다.</param>
        <param name="rank">배열의 차수입니다.</param>
        <summary>지정된 배열 형식 이름과 차수를 사용하여 <see cref="T:System.CodeDom.CodeTypeReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (Type type, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(Type ^ type, System::CodeDom::CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : Type * System.CodeDom.CodeTypeReferenceOptions -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (type, codeTypeReferenceOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" />
      </Parameters>
      <Docs>
        <param name="type">참조할 <see cref="T:System.Type" />입니다.</param>
        <param name="codeTypeReferenceOption">
          <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> 값 중 하나인 코드 형식 참조 옵션입니다.</param>
        <summary>지정된 형식 및 코드 형식 참조를 사용하여 <see cref="T:System.CodeDom.CodeTypeReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayElementType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference ArrayElementType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference ArrayElementType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.ArrayElementType" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrayElementType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ ArrayElementType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ArrayElementType : System.CodeDom.CodeTypeReference with get, set" Usage="System.CodeDom.CodeTypeReference.ArrayElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>배열 요소의 형식을 가져오거나 설정합니다.</summary>
        <value>배열 요소의 형식을 나타내는 <see cref="T:System.CodeDom.CodeTypeReference" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이렇게 하지 않으면이 무시 됩니다는 <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> 속성은 1 보다 크거나 같은 경우입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayRank">
      <MemberSignature Language="C#" Value="public int ArrayRank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArrayRank" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.ArrayRank" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrayRank As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArrayRank { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ArrayRank : int with get, set" Usage="System.CodeDom.CodeTypeReference.ArrayRank" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>배열 차수를 가져오거나 설정합니다.</summary>
        <value>배열의 차수입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public string BaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : string with get, set" Usage="System.CodeDom.CodeTypeReference.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>참조되는 형식의 이름을 가져오거나 설정합니다.</summary>
        <value>참조되는 형식의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 이름이 형식 배열 형식이 아닌 경우에 경우 배열 요소 형식 합니다.  
  
> [!NOTE]
>  속성의 이름을 잘못 인식 될 수 있습니다. 이 속성에 있는 배열 장식 사용 유형 이름만 포함 또는 제네릭 형식 인수를 제거, 기본 또는 부모 형식이 아닌 얻을 수 있습니다. 예를 들어는 <xref:System.CodeDom.CodeTypeReference.BaseType%2A> 값 ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` 은 ``System.Collections.Generic.Dictionary`2``합니다.  
  
## <a name="representation-of-generic-types"></a>제네릭 형식 표현  
 이 섹션의 정보는 CodeDom 공급자의 개발자를 위한 및 CLS 규격 언어에만 적용 됩니다. 반환 값은 제네릭 형식을 포함할 수 있습니다. 제네릭 형식은 형식 억음 악센트 기호 다음의 이름으로 지정 된 ("'") 뒤에 제네릭 형식 인수의 개수입니다. 제네릭 형식 인수에서 찾을 수 있습니다는 <xref:System.CodeDom.CodeTypeReferenceCollection> 에서 반환 되는 <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> 속성입니다. 반환 값 <xref:System.CodeDom.CodeTypeReference.BaseType%2A> 및 연결 된 <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> 리플렉션에 의해 반환 되는 형식의 값으로 동일한 콘텐츠를 포함 합니다.  
  
 예를 들어 생성 된 <xref:System.Collections.Generic.Dictionary%602> 여기서 `K` 문자열인 및 `V` 생성 된 <xref:System.Collections.Generic.List%601> 정수는 다음과 같이 리플렉션에 의해 표현 됩니다 (어셈블리 정보가 제거) 된:  
  
```  
System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]  
```  
  
 재귀적으로 구문 분석는 <xref:System.CodeDom.CodeTypeReference.BaseType%2A> 속성에서는 <xref:System.CodeDom.CodeTypeReference> 에 대 한 <xref:System.Collections.Generic.Dictionary%602> 위의 리플렉션 표현으로 동일한 문자열을 생성 합니다.  
  
-   <xref:System.CodeDom.CodeTypeReference.BaseType%2A> 부모에 대 한 속성 <xref:System.CodeDom.CodeTypeReference> 는 다음을 반환 합니다.  
  
    ```  
    System.Collections.Generic.Dictionary`2  
    ```  
  
-   <xref:System.CodeDom.CodeTypeReference.BaseType%2A> 첫 번째에 대 한 속성 <xref:System.CodeDom.CodeTypeReference> 개체는 <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> 컬렉션은 다음을 반환 합니다.  
  
    ```  
    System.String  
    ```  
  
-   <xref:System.CodeDom.CodeTypeReference.BaseType%2A> 두 번째에 대 한 속성 <xref:System.CodeDom.CodeTypeReference> 개체에 <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> 컬렉션은 다음을 반환 합니다.  
  
    ```  
    System.Collections.Generic.List`1  
    ```  
  
-   <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> 속성에는 <xref:System.CodeDom.CodeTypeReference> 개체에 대 한 ``System.Collections.Generic.List`1`` 는 다음을 반환 합니다.  
  
    ```  
    System.Int32  
    ```  
  
 연결 된 구문 분석 하는 경우 형식 인수 개수를 사용 해야 <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> 값입니다. 생성된 된 코드에서 형식 인수 개수를 제거 하는 것이 일반적 이지만 방법은 컴파일러에 특정 합니다.  중첩된 된 형식 이름 내에서 형식 인수 개수를 확인할 수 있습니다,이 경우 뒤에 더하기 기호 ("+")를 확인 하는 것이 유용 합니다.  
  
> [!NOTE]
>  제네릭을 만들 때 <xref:System.CodeDom.CodeTypeReference>, 형식 인수를 지정 하는 것이 좋습니다 <xref:System.CodeDom.CodeTypeReference> 개체 또는 사용 하는 생성자를 사용 하 여는 <xref:System.Type>합니다. 만드는 생성자를 사용 하는 <xref:System.CodeDom.CodeTypeReference> 발견할 형식 인수 오류를 일으킬 수 있는 문자열에서 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.CodeTypeReferenceOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As CodeTypeReferenceOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceOptions Options { System::CodeDom::CodeTypeReferenceOptions get(); void set(System::CodeDom::CodeTypeReferenceOptions value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.CodeDom.CodeTypeReferenceOptions with get, set" Usage="System.CodeDom.CodeTypeReference.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>코드 형식 참조 옵션을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> 값의 비트 조합입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ TypeArguments { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.CodeDom.CodeTypeReferenceCollection" Usage="System.CodeDom.CodeTypeReference.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 제네릭 형식 참조에 대한 형식 인수를 가져옵니다.</summary>
        <value>현재 <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> 개체에 대한 형식 인수가 들어 있는 <see cref="T:System.CodeDom.CodeTypeReference" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> 속성은 현재 제네릭 형식의 형식 매개 변수 참조 대신 사용할 형식 참조의 컬렉션입니다. 모든 중첩 된 형식에 대 한 모든 형식 인수를 포함 하는 컬렉션입니다. 예를 들어 참조는 <xref:System.CodeDom.CodeTypeReference.BaseType%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>