<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeSnippetTypeMember.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac549afdbf1212bcf7993a86460812d74372a7562e8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">49afdbf1212bcf7993a86460812d74372a7562e8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeSnippetTypeMember">
          <source>Represents a member of a type using a literal code fragment.</source>
          <target state="translated">리터럴 코드 단편을 사용하는 형식의 멤버를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetTypeMember">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetTypeMember&gt;</ph> can represent a member of a type using a literal code fragment that is included directly in the source without modification.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetTypeMember&gt;</ph> 수정 하지 않고 소스에 직접 포함 된 리터럴 코드 조각을 사용 하는 형식의 멤버를 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetTypeMember">
          <source>This code can be included in the type declaration.</source>
          <target state="translated">형식 선언에이 코드를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetTypeMember">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetTypeMember&gt;</ph> stores a section of code, exactly in its original format, as a string.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetTypeMember&gt;</ph> 코드의 섹션을 문자열로 원래 형식으로 정확 하 게 저장 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetTypeMember">
          <source>The CodeDOM does not translate literal code fragments.</source>
          <target state="translated">CodeDOM 리터럴 코드 조각을 의미 하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetTypeMember">
          <source>Literal code fragments are stored and output in their original format.</source>
          <target state="translated">리터럴 코드 조각은 저장 하 고 원래 형식으로 출력 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetTypeMember">
          <source>CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.</source>
          <target state="translated">CodeDOM 개체 리터럴 코드를 포함 하는 개발자가 대상 언어에 이미 있는 코드를 캡슐화 할 수 있도록 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetTypeMember">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetTypeMember.Text%2A&gt;</ph> property contains the literal code for the type member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetTypeMember.Text%2A&gt;</ph> 속성 형식 멤버에 대 한 리터럴 코드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetTypeMember">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetTypeMember&gt;</ph> class to store literal code in a string format.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetTypeMember&gt;</ph> 문자열 형식의 리터럴 코드를 저장 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeSnippetTypeMember">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A&gt;</ph> method.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeSnippetTypeMember">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetTypeMember" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetTypeMember" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeSnippetTypeMember.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetTypeMember" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetTypeMember" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeSnippetTypeMember.#ctor(System.String)">
          <source>The literal code fragment for the type member.</source>
          <target state="translated">형식 멤버에 대한 리터럴 코드 단편입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeSnippetTypeMember.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetTypeMember" /&gt;</ph> class using the specified text.</source>
          <target state="translated">지정된 텍스트를 사용하여 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeSnippetTypeMember" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeSnippetTypeMember.#ctor(System.String)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetTypeMember.%23ctor%2A&gt;</ph> constructor to create an instance of the <ph id="ph2">&lt;xref:System.CodeDom.CodeSnippetTypeMember&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.CodeDom.CodeSnippetTypeMember.%23ctor%2A&gt;</ph> 의 인스턴스를 만드는 생성자는 <ph id="ph2">&lt;xref:System.CodeDom.CodeSnippetTypeMember&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeSnippetTypeMember.#ctor(System.String)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A&gt;</ph> method.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeSnippetTypeMember.Text">
          <source>Gets or sets the literal code fragment for the type member.</source>
          <target state="translated">형식 멤버에 대한 리터럴 코드 단편을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeSnippetTypeMember.Text">
          <source>The literal code fragment for the type member.</source>
          <target state="translated">형식 멤버에 대한 리터럴 코드 단편입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>