<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeComment.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50b33d2553325f3fe4bb8305f63f0902380f7c40f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b33d2553325f3fe4bb8305f63f0902380f7c40f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeComment">
          <source>Represents a comment.</source>
          <target state="translated">주석을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeComment">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeComment&gt;</ph> can be used to represent a single line comment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeComment&gt;</ph> 사용할 수를 한 줄 주석을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeComment">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> can contain a <ph id="ph2">&lt;xref:System.CodeDom.CodeComment&gt;</ph> and allows it to be treated as a statement and generated as code within a collection of statements.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> 포함 될 수 있습니다는 <ph id="ph2">&lt;xref:System.CodeDom.CodeComment&gt;</ph> 알리고를 문으로 처리 하 고 설명의 컬렉션 내에서 코드로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeComment">
          <source>Multi-line comments can be represented with multiple <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> objects.</source>
          <target state="translated">여러 개 포함 된 여러 줄 주석을 나타낼 수 <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeComment">
          <source>To include a comment in a CodeDOM graph that can be generated to source code, add a <ph id="ph1">&lt;xref:System.CodeDom.CodeComment&gt;</ph> to a <ph id="ph2">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph>, and add this to the statements collection of a <ph id="ph3">&lt;xref:System.CodeDom.CodeMemberMethod&gt;</ph> or to the comments collection of a <ph id="ph4">&lt;xref:System.CodeDom.CodeNamespace&gt;</ph> or any object that derives from <ph id="ph5">&lt;xref:System.CodeDom.CodeTypeMember&gt;</ph>.</source>
          <target state="translated">소스 코드를 생성할 수 있는 CodeDOM 그래프에 메모를 포함 하려면 추가 <ph id="ph1">&lt;xref:System.CodeDom.CodeComment&gt;</ph> 에 <ph id="ph2">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph>, 문 컬렉션에 추가 하 고는 <ph id="ph3">&lt;xref:System.CodeDom.CodeMemberMethod&gt;</ph> 또는 주석 컬렉션에는 <ph id="ph4">&lt;xref:System.CodeDom.CodeNamespace&gt;</ph> 또는 에서파생된개체<ph id="ph5">&lt;xref:System.CodeDom.CodeTypeMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeComment">
          <source>This example demonstrates using a <ph id="ph1">&lt;xref:System.CodeDom.CodeComment&gt;</ph> to represent a comment in source code.</source>
          <target state="translated">사용 하 여 보여 주는이 예제는 <ph id="ph1">&lt;xref:System.CodeDom.CodeComment&gt;</ph> 를 소스 코드에서 주석을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeComment">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeComment.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeComment.#ctor(System.String)">
          <source>The contents of the comment.</source>
          <target state="translated">주석의 내용입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeComment.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> class with the specified text as contents.</source>
          <target state="translated">지정된 텍스트를 내용으로 사용하여 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeComment.#ctor(System.String,System.Boolean)">
          <source>The contents of the comment.</source>
          <target state="translated">주석의 내용입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeComment.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the comment is a documentation comment; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">주석이 문서 주석이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeComment.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> class using the specified text and documentation comment flag.</source>
          <target state="translated">지정된 텍스트 및 문서 주석 플래그를 사용하여 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeComment.DocComment">
          <source>Gets or sets a value that indicates whether the comment is a documentation comment.</source>
          <target state="translated">주석이 문서 주석인지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeComment.DocComment">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the comment is a documentation comment; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">주석이 문서 주석이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeComment.DocComment">
          <source>Some languages support a special type of comment that can be automatically extracted from the source code for documentation purposes.</source>
          <target state="translated">일부 언어에는 특별 한 종류의 설명 용 소스 코드에서 자동으로 추출할 수 있는 주석 지원 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeComment.DocComment">
          <source>This property can be used to designate whether the comment is a documentation comment, which may generate a different syntax.</source>
          <target state="translated">메모는 서로 다른 구문을 생성할 수 있는 문서 주석이 있는지 여부를 지정 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeComment.DocComment">
          <source>An example of this is C#, which uses "//" for regular comments and "///" for documentation comments.</source>
          <target state="translated">이 예제는 사용 하 여 C# "/ /" 일반 메모 및 "/ / /" 문서 주석에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeComment.Text">
          <source>Gets or sets the text of the comment.</source>
          <target state="translated">주석의 텍스트를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeComment.Text">
          <source>A string containing the comment text.</source>
          <target state="translated">주석 텍스트가 들어 있는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeComment.Text">
          <source>The text of this property should not contain line breaks.</source>
          <target state="translated">이 속성의 텍스트 줄 바꿈을 포함할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeComment.Text">
          <source>If multiple lines are required, multiple <ph id="ph1">&lt;xref:System.CodeDom.CodeComment&gt;</ph> objects should be defined.</source>
          <target state="translated">여러 줄은 필요한 경우 여러 <ph id="ph1">&lt;xref:System.CodeDom.CodeComment&gt;</ph> 개체를 정의 해야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>