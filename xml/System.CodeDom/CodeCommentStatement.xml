<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeCommentStatement.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5466537bbab088adb6c5a3d053844e25837f44537.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">466537bbab088adb6c5a3d053844e25837f44537</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeCommentStatement">
          <source>Represents a statement consisting of a single comment.</source>
          <target state="translated">단일 주석으로 구성되는 문을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeCommentStatement">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> can be used to represent a single-line comment statement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> 한 줄 주석문 나타내기 위해 사용할 수 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeCommentStatement">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> is a statement, so it can be inserted into a statements collection and will appear on its own line.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> 문, 문 컬렉션에 삽입할 수 있으므로 별도 줄에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeCommentStatement">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> can also be added to the comments collection of <ph id="ph2">&lt;xref:System.CodeDom.CodeNamespace&gt;</ph> or any object that derives from <ph id="ph3">&lt;xref:System.CodeDom.CodeTypeMember&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> 주석 컬렉션에 추가할 수도 있습니다 <ph id="ph2">&lt;xref:System.CodeDom.CodeNamespace&gt;</ph> 또는 모든 개체에서 파생 된 <ph id="ph3">&lt;xref:System.CodeDom.CodeTypeMember&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeCommentStatement">
          <source>This example demonstrates using a <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> to represent a comment in source code.</source>
          <target state="translated">사용 하 여 보여 주는이 예제는 <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> 를 소스 코드에서 주석을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeCommentStatement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> that indicates the comment.</source>
          <target state="translated">주석을 나타내는 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class using the specified comment.</source>
          <target state="translated">지정된 주석을 사용하여 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String)">
          <source>The contents of the comment.</source>
          <target state="translated">주석의 내용입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class using the specified text as contents.</source>
          <target state="translated">지정된 텍스트를 내용으로 사용하여 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>The contents of the comment.</source>
          <target state="translated">주석의 내용입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the comment is a documentation comment; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">주석이 문서 주석이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> class using the specified text and documentation comment flag.</source>
          <target state="translated">지정된 텍스트 및 문서 주석 플래그를 사용하여 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCommentStatement" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>If the <ph id="ph1">`docComment`</ph> parameter is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> is a documentation comment and the comment is structured using triple delimiter characters.</source>
          <target state="translated">경우는 <ph id="ph1">`docComment`</ph> 매개 변수는 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.CodeDom.CodeCommentStatement&gt;</ph> 문서 주석 및 주석 삼중 구분 기호 문자를 사용 하 여 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>For example, in C# the comment is "<ph id="ph1">`///`</ph>", in Visual Basic "<ph id="ph2">`'''`</ph>".</source>
          <target state="translated">예를 들어 C# 메모는 "<ph id="ph1">`///`</ph>", Visual Basic의 "<ph id="ph2">`'''`</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>Documentation comments are used to identify an XML comment field, such as a type or member summary identified by the <ph id="ph1">`&lt;summary&gt;`</ph> element.</source>
          <target state="translated">문서 주석에 형식 또는로 식별 되는 멤버 요약과 같은 XML 주석 필드를 식별 하는 데 사용 되는 <ph id="ph1">`&lt;summary&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> constructor to create a comment statement to be used as an XML comment field.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.CodeDom.CodeCommentStatement.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> XML 주석 필드로 사용할 주석 문을 만드는 생성자입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>This example is part of a larger example that follows.</source>
          <target state="translated">이 예제는 뒤에 보다 큰 예제의 일부입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
          <source>The following code example demonstrates the creation of a simple "Hello World" console application and the generation of an XML documentation file for the compiled application.</source>
          <target state="translated">다음 코드 예제에서는 간단한 "Hello World" 라는 콘솔 응용 프로그램 만들기 및 컴파일된 응용 프로그램에 대 한 XML 문서 파일의 생성을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeCommentStatement.Comment">
          <source>Gets or sets the contents of the comment.</source>
          <target state="translated">주석의 내용을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeCommentStatement.Comment">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> that indicates the comment.</source>
          <target state="translated">주석을 나타내는 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>