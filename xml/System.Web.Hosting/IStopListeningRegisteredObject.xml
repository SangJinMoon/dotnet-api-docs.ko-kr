<Type Name="IStopListeningRegisteredObject" FullName="System.Web.Hosting.IStopListeningRegisteredObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04ed9a8c880a05fbc4cbd9fa2b5311a32a841c40" /><Meta Name="ms.sourcegitcommit" Value="6ee2e6b2c5d7c5bd66feeb362d29e65fdf858836" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/15/2018" /><Meta Name="ms.locfileid" Value="51689755" /></Metadata><TypeSignature Language="C#" Value="public interface IStopListeningRegisteredObject : System.Web.Hosting.IRegisteredObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStopListeningRegisteredObject implements class System.Web.Hosting.IRegisteredObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.IStopListeningRegisteredObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStopListeningRegisteredObject&#xA;Implements IRegisteredObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStopListeningRegisteredObject : System::Web::Hosting::IRegisteredObject" />
  <TypeSignature Language="F#" Value="type IStopListeningRegisteredObject = interface&#xA;    interface IRegisteredObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Hosting.IRegisteredObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3245b-101">IIS로부터의 <c>GL_STOP_LISTENING</c> 알림을 수신 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="3245b-101">Listens for <c>GL_STOP_LISTENING</c> notifications from IIS.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3245b-102">구현할 수 있습니다 합니다 <xref:System.Web.Hosting.IStopListeningRegisteredObject> 개체를 전달 하 여 인터페이스를 <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3245b-102">You can implement the <xref:System.Web.Hosting.IStopListeningRegisteredObject> interface by passing an object to the <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> method.</span></span> <span data-ttu-id="3245b-103">전달된 된 개체에 대 한 수신 `GL_STOP_LISTENING` IIS에서 알림.</span><span class="sxs-lookup"><span data-stu-id="3245b-103">The passed object listens for `GL_STOP_LISTENING` notifications from IIS.</span></span> <span data-ttu-id="3245b-104">ASP.NET을 받으면이 구현을 호출할 수 없습니다는 `GL_STOP_LISTENING` IIS이 더 이상이 응용 프로그램에 대 한 새 요청에 대 한 수신 대기 하는지 여부를 알리는 IIS에서 알림.</span><span class="sxs-lookup"><span data-stu-id="3245b-104">You can call this implementation when ASP.NET receives a `GL_STOP_LISTENING` notification from IIS, which signals that IIS is no longer listening for new requests for this application.</span></span> <span data-ttu-id="3245b-105">웹 서버 실행을 완료할 진행 중인 요청 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3245b-105">The web server can allow requests that are in progress to run to completion.</span></span> <span data-ttu-id="3245b-106">가 하려는 장기 실행 요청 응용 프로그램 프로세스, 응용 프로그램 이러한 IIS 알림을 하 정상적으로 요청을 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="3245b-106">If your application processes long running requests, you might want to have the application listen for these IIS notifications to gracefully wind down the request.</span></span> <span data-ttu-id="3245b-107">합니다 <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> 반대 되는 메서드를 <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> 메서드를 직접 응용 프로그램 종료 신호를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="3245b-107">The <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> method contrasts with the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method, which signals immediate application shutdown.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="3245b-108">이 형식의 인스턴스 멤버는 스레드로부터의 안전성이 보장이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3245b-108">Instance members of this type are not guaranteed to be thread safe.</span></span> <span data-ttu-id="3245b-109">합니다 <see cref="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" /> 언제 든 지 다른 메서드를 호출 하는 동안 포함 하 여 메서드를 호출할 수 있습니다 (같은 <see cref="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)" />)이 동일한 개체에는 실행 또는 다른 개체에 대 한 호출을 하는 동안 <see cref="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" /> 메서드를 실행 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="3245b-109">The <see cref="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" /> method can be called at any time, including while a call to another method (such as <see cref="M:System.Web.Hosting.IRegisteredObject.Stop(System.Boolean)" />) on this same object is executing or while calls to other objects' <see cref="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" /> methods are executing.</span></span> <span data-ttu-id="3245b-110">이러한 메서드의 실행은 다중 스레드, 이므로는 간격을 <see cref="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" /> 호출 후에 메서드를 호출할 수 있습니다 <see cref="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" /> 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="3245b-110">Because the execution of these methods is multithreaded, there is an interval in which the <see cref="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" /> method might be called even after a call to <see cref="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" /> has completed.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.IStopListeningRegisteredObject.StopListening" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopListening();" />
      <MemberSignature Language="F#" Value="abstract member StopListening : unit -&gt; unit" Usage="iStopListeningRegisteredObject.StopListening " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3245b-111">새 요청 수신을 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="3245b-111">Stops listening for new requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3245b-112"><xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> 메서드 통합 모드에서 IIS를 실행 하는 경우에 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3245b-112">The <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> method is supported only when running in IIS integrated mode.</span></span> <span data-ttu-id="3245b-113">ASP.NET 런타임에서 보장 하지 않습니다는 <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> 메서드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3245b-113">The ASP.NET runtime does not guarantee that the <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> method will ever fire.</span></span>  
  
 <span data-ttu-id="3245b-114"><xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> 메서드 예외를 throw 하면 안, 그렇지 않으면 동작이 정의 되지 않습니다 및 프로세스는 종료 가능성이 높습니다.</span><span class="sxs-lookup"><span data-stu-id="3245b-114">The <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> method must not throw exceptions, otherwise the behavior is undefined and the process will likely be terminated.</span></span> <span data-ttu-id="3245b-115">교착 상태를 만들지 않도록 방지 하려면 추가 <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> 메서드 실행을 차단 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3245b-115">Further, to avoid creating deadlocks, the <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> method should not block execution.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3245b-116">많은 응용 프로그램에서 합니다 <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> 메서드를 동시에 실행할 수는 <xref:System.AppDomain.Unload%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3245b-116">In many applications the <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> method can run at the same time as the <xref:System.AppDomain.Unload%2A> method.</span></span>  <span data-ttu-id="3245b-117">하는 경우 <xref:System.AppDomain> 언로드 발생는 <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> 실행 완료 되기 전에 메서드 강제로 중단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3245b-117">If <xref:System.AppDomain> unload occurs, the <xref:System.Web.Hosting.IStopListeningRegisteredObject.StopListening%2A> method might be forcibly aborted before it finishes executing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>