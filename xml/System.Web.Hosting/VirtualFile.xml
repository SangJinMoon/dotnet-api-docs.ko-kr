<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="VirtualFile.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac533f9791a60e614665696afca84d9f5d1942faacc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33f9791a60e614665696afca84d9f5d1942faacc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Hosting.VirtualFile">
          <source>Represents a file object in a virtual file or resource space.</source>
          <target state="translated">가상 파일 또는 리소스 공간의 파일 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> class is the base class for objects that represent files in a virtual file system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> 가상 파일 시스템에 파일을 나타내는 개체에 대 한 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>Typically, you would implement a descendent of the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> class for each <ph id="ph2">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> object descendent in your Web application.</source>
          <target state="translated">하위 항목 구현 하는 일반적으로 <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> 각각에 대 한 클래스 <ph id="ph2">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> 개체 웹 응용 프로그램에서 하위 항목입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>The following code example is a <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> class implementation that combines information stored in a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object with a template file to return HTML data.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> 클래스 구현에 저장 된 정보를 결합 하는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> HTML 데이터를 반환 하려면 템플릿 파일을 사용 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>This code example works with the code examples for the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Hosting.VirtualDirectory&gt;</ph> classes to provide virtual resources from a data store that is loaded into a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> object.</source>
          <target state="translated">이 코드 예제에서는 작업에 대 한 코드 예제는 <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.Hosting.VirtualDirectory&gt;</ph> 가상 리소스 데이터에서 저장소를 제공 하는 클래스에 로드 되는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>For the complete instructions for compiling and running the example, see the Example section of the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> class overview.</source>
          <target state="translated">컴파일하고 예제를 실행 하기 위한 전체 지침의 예 섹션을 참조는 <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>This example has three parts: the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> class implementation, an XML data file used to populate the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object, and the page template file.</source>
          <target state="translated">이 예제는 세 부분:는 <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> 클래스 구현, 채우는 데 사용 되는 XML 데이터 파일의 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 개체 및 페이지 템플릿 파일입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>The first code example is an implementation of the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> class.</source>
          <target state="translated">첫 번째 코드 예제는의 구현에서 <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>Its constructor uses a method on a custom <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> object to return a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object.</source>
          <target state="translated">해당 생성자 메서드를 사용 하 여 사용자 지정 <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> 반환할 개체는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>It then searches the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object to retrieve the information associated with the virtual file path provided.</source>
          <target state="translated">그런 다음 검색 된 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 제공 된 가상 파일 경로와 관련 된 정보를 검색할 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>In the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile.Open%2A&gt;</ph> method, it combines the information from the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object with a template file and returns the combination as a <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> object.</source>
          <target state="translated">에 <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile.Open%2A&gt;</ph> 메서드의 정보를 결합는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 템플릿 파일을 사용 하는 개체 조합을으로 반환 하 고는 <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>The second example is the XML data file used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object returned by the custom <ph id="ph2">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> object.</source>
          <target state="translated">두 번째 예제는 XML 데이터 파일을 채우는 데 사용 된 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 사용자 지정에서 반환 된 개체 <ph id="ph2">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>This XML data is used to demonstrate using the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.Hosting.VirtualDirectory&gt;</ph> classes to retrieve data from external data, and is not intended to represent a production-quality data store.</source>
          <target state="translated">이 XML 데이터는 설명 하는 데 사용 하는 <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Web.Hosting.VirtualDirectory&gt;</ph> 클래스 외부 데이터에서 데이터를 검색 하 고 프로덕션 수준의 데이터 저장소를 나타내기 위한 용도가 아닙니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>The third example is the text file used as a template for the virtual file.</source>
          <target state="translated">세 번째 예에 가상 파일에 대 한 템플릿으로 사용 되는 텍스트 파일입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>Placeholders in the file are represented by text between percent (%) marks, such as <ph id="ph1">`%file%`</ph> and <ph id="ph2">`%content%`</ph>.</source>
          <target state="translated">파일에서 자리 표시자 텍스트 백분율 (%) 표시 사이 같은 표현 됩니다 <ph id="ph1">`%file%`</ph> 및 <ph id="ph2">`%content%`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>Timestamps are used to monitor changes to cached virtual file data.</source>
          <target state="translated">타임 스탬프는 캐시 된 가상 파일 데이터에 변경 내용을 모니터링 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.VirtualFile">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.Hosting.VirtualFile" /&gt;</ph> class, you must override the <ph id="ph2">&lt;see cref="M:System.Web.Hosting.VirtualFile.Open" /&gt;</ph> method to return a read-only stream to the contents of the virtual resource.</source>
          <target state="translated">상속 하는 경우는 <ph id="ph1">&lt;see cref="T:System.Web.Hosting.VirtualFile" /&gt;</ph> 재정의 해야 클래스는 <ph id="ph2">&lt;see cref="M:System.Web.Hosting.VirtualFile.Open" /&gt;</ph> 가상 리소스의 내용에 대 한 읽기 전용 스트림을 반환 하는 메서드.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.VirtualFile.#ctor(System.String)">
          <source>The virtual path to the resource represented by this instance.</source>
          <target state="translated">이 인스턴스가 나타내는 리소스의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.VirtualFile.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Hosting.VirtualFile" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Hosting.VirtualFile" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.VirtualFile.#ctor(System.String)">
          <source>The following code example is an implementation of the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile.%23ctor%2A&gt;</ph> constructor that retrieves virtual file information from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object provided by a custom <ph id="ph3">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> object.</source>
          <target state="translated">다음 코드 예제는의 구현에서 <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile.%23ctor%2A&gt;</ph> 가상 파일 정보를 검색 하는 생성자는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 사용자 지정에서 제공 하는 개체 <ph id="ph3">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.VirtualFile.#ctor(System.String)">
          <source>For the full code required to run the example, see the Example section of the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> class overview.</source>
          <target state="translated">예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.VirtualFile.IsDirectory">
          <source>Gets a value that indicates that this is a virtual resource that should be treated as a file.</source>
          <target state="translated">이 항목이 파일로 처리할 가상 디렉터리임을 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.VirtualFile.IsDirectory">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.VirtualFile.Open">
          <source>When overridden in a derived class, returns a read-only stream to the virtual resource.</source>
          <target state="translated">파생 클래스에서 재정의되면 가상 리소스에 대한 읽기 전용 스트림을 반환합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.VirtualFile.Open">
          <source>A read-only stream to the virtual file.</source>
          <target state="translated">가상 파일에 대한 읽기 전용 스트림입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.VirtualFile.Open">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile.Open%2A&gt;</ph> method returns a stream containing the data treated as a file by the <ph id="ph2">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile.Open%2A&gt;</ph> 메서드 여 파일로 처리 하는 데이터를 포함 하는 스트림을 반환는 <ph id="ph2">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.VirtualFile.Open">
          <source>The stream is read-only and is seekable (the <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> property is true).</source>
          <target state="translated">스트림이 읽기 전용 이므로 검색할 수 있는지 (의 <ph id="ph1">&lt;xref:System.IO.Stream.CanSeek%2A&gt;</ph> 속성은 true).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.VirtualFile.Open">
          <source>The following code example is an implementation of the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile.Open%2A&gt;</ph> method that combines virtual-file-specific information with a template file and then returns the combination.</source>
          <target state="translated">다음 코드 예제는의 구현에서 <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile.Open%2A&gt;</ph> 메서드 서식 파일과 함께 가상 파일 관련 정보를 결합 하 고 다음 조합을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.VirtualFile.Open">
          <source>The template file is cached to reduce the overhead of reading the file system multiple times to retrieve the template file.</source>
          <target state="translated">서식 파일은 서식 파일을 검색 하는 파일 시스템을 여러 번 읽는 오버 헤드를 줄이기 위해 캐시 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.VirtualFile.Open">
          <source>For the full code required to run the example, see the Example section of the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> class overview.</source>
          <target state="translated">예제를 실행 하는 데 필요한 전체 코드의 예 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.VirtualFile.Open">
          <source>In derived classes the <ph id="ph1">&lt;see cref="M:System.Web.Hosting.VirtualFile.Open" /&gt;</ph> method must return a seekable stream.</source>
          <target state="translated">파생 클래스에서는 <ph id="ph1">&lt;see cref="M:System.Web.Hosting.VirtualFile.Open" /&gt;</ph> 메서드는 반드시 검색 가능한 스트림을 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.VirtualFile.Open">
          <source>If the method returns a stream that does not support seeking, a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> is thrown when the stream is passed to the <ph id="ph2">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> object to write out the data.</source>
          <target state="translated">메서드를 검색 하는 것을 지원 하지 않는 하는 스트림을 반환 하는 경우는 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> 스트림을 전달 될 때 throw 되는 <ph id="ph2">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> 의 데이터를 쓸 개체입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.VirtualFile.Open">
          <source>The exception occurs because the response tries to read the <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> property, and on a stream that is not seekable, attempting to access the property causes an exception.</source>
          <target state="translated">응답 읽으려고 하기 때문에 예외가 발생는 <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> 속성을 검색할 수 있는지는 스트림에 속성에 액세스 하려고 하면 예외가 발생 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.VirtualFile.Open">
          <source>For more information, see the <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanSeek" /&gt;</ph> property.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanSeek" /&gt;</ph> 속성을 참조하세요.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>