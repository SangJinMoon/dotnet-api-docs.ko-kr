<Type Name="AspNetMemoryMonitor" FullName="System.Web.Hosting.AspNetMemoryMonitor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8010bcfa1077f9a9464421372cc50eb18292f8b0" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36600822" /></Metadata><TypeSignature Language="C#" Value="public sealed class AspNetMemoryMonitor : IDisposable, IObservable&lt;System.Web.Hosting.LowPhysicalMemoryInfo&gt;, IObservable&lt;System.Web.Hosting.RecycleLimitInfo&gt;, System.Web.Hosting.IApplicationMonitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AspNetMemoryMonitor extends System.Object implements class System.IDisposable, class System.IObservable`1&lt;class System.Web.Hosting.LowPhysicalMemoryInfo&gt;, class System.IObservable`1&lt;class System.Web.Hosting.RecycleLimitInfo&gt;, class System.Web.Hosting.IApplicationMonitor" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.AspNetMemoryMonitor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AspNetMemoryMonitor&#xA;Implements IApplicationMonitor, IDisposable, IObservable(Of LowPhysicalMemoryInfo), IObservable(Of RecycleLimitInfo)" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspNetMemoryMonitor sealed : IDisposable, IObservable&lt;System::Web::Hosting::LowPhysicalMemoryInfo ^&gt;, IObservable&lt;System::Web::Hosting::RecycleLimitInfo ^&gt;, System::Web::Hosting::IApplicationMonitor" />
  <TypeSignature Language="F#" Value="type AspNetMemoryMonitor = class&#xA;    interface IApplicationMonitor&#xA;    interface IDisposable&#xA;    interface IObservable&lt;RecycleLimitInfo&gt;&#xA;    interface IObservable&lt;LowPhysicalMemoryInfo&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IObservable&lt;System.Web.Hosting.LowPhysicalMemoryInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IObservable&lt;System.Web.Hosting.RecycleLimitInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.Hosting.IApplicationMonitor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="af40a-101">메모리 모니터의 ASP.NET 기본 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-101">ASP.NET default implementation of memory monitor.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DefaultLowPhysicalMemoryObserver">
      <MemberSignature Language="C#" Value="public IObserver&lt;System.Web.Hosting.LowPhysicalMemoryInfo&gt; DefaultLowPhysicalMemoryObserver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IObserver`1&lt;class System.Web.Hosting.LowPhysicalMemoryInfo&gt; DefaultLowPhysicalMemoryObserver" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.AspNetMemoryMonitor.DefaultLowPhysicalMemoryObserver" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultLowPhysicalMemoryObserver As IObserver(Of LowPhysicalMemoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IObserver&lt;System::Web::Hosting::LowPhysicalMemoryInfo ^&gt; ^ DefaultLowPhysicalMemoryObserver { IObserver&lt;System::Web::Hosting::LowPhysicalMemoryInfo ^&gt; ^ get(); void set(IObserver&lt;System::Web::Hosting::LowPhysicalMemoryInfo ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultLowPhysicalMemoryObserver : IObserver&lt;System.Web.Hosting.LowPhysicalMemoryInfo&gt; with get, set" Usage="System.Web.Hosting.AspNetMemoryMonitor.DefaultLowPhysicalMemoryObserver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IObserver&lt;System.Web.Hosting.LowPhysicalMemoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af40a-102">기본 메모리 부족 관찰자를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-102">Gets or sets the default low-memory observer.</span></span> <span data-ttu-id="af40a-103">이 속성이 이전에는 있었던 'default' 관찰자를 구독 취소하는 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-103">Setting this property unsubscribes the 'default' observer that was there before.</span></span> <span data-ttu-id="af40a-104">하나의 'default'만 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-104">There can only be one 'default.'</span></span> <span data-ttu-id="af40a-105">추가 관찰자를 제공하려면 <see cref="Overload:System.Web.Hosting.AspNetMemoryMonitor.Subscribe" /> 메서드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="af40a-105">To provide additional observers, use the <see cref="Overload:System.Web.Hosting.AspNetMemoryMonitor.Subscribe" /> method.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRecycleLimitObserver">
      <MemberSignature Language="C#" Value="public IObserver&lt;System.Web.Hosting.RecycleLimitInfo&gt; DefaultRecycleLimitObserver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IObserver`1&lt;class System.Web.Hosting.RecycleLimitInfo&gt; DefaultRecycleLimitObserver" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.AspNetMemoryMonitor.DefaultRecycleLimitObserver" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultRecycleLimitObserver As IObserver(Of RecycleLimitInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IObserver&lt;System::Web::Hosting::RecycleLimitInfo ^&gt; ^ DefaultRecycleLimitObserver { IObserver&lt;System::Web::Hosting::RecycleLimitInfo ^&gt; ^ get(); void set(IObserver&lt;System::Web::Hosting::RecycleLimitInfo ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRecycleLimitObserver : IObserver&lt;System.Web.Hosting.RecycleLimitInfo&gt; with get, set" Usage="System.Web.Hosting.AspNetMemoryMonitor.DefaultRecycleLimitObserver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IObserver&lt;System.Web.Hosting.RecycleLimitInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af40a-106">기본 재생 제한 관찰자를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-106">Gets or sets the default recycle limit observer.</span></span> <span data-ttu-id="af40a-107">이 속성이 이전에는 있었던 'default' 관찰자를 구독 취소하는 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-107">Setting this property unsubscribes the 'default' observer that was there before.</span></span> <span data-ttu-id="af40a-108">하나의 'default'만 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-108">There can only be one 'default.'</span></span> <span data-ttu-id="af40a-109">추가 관찰자를 제공하려면 <see cref="Overload:System.Web.Hosting.AspNetMemoryMonitor.Subscribe" /> 메서드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="af40a-109">To provide additional observers, use the <see cref="Overload:System.Web.Hosting.AspNetMemoryMonitor.Subscribe" /> method.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.AspNetMemoryMonitor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="aspNetMemoryMonitor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="af40a-110">메모리 모니터에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-110">Releases all resources used by the memory monitor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.AspNetMemoryMonitor.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Start();" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="aspNetMemoryMonitor.Start " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IApplicationMonitor.Start</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="af40a-111">알림 모니터링 및 실행을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-111">Start monitoring and firing notifications.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.AspNetMemoryMonitor.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Stop();" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="aspNetMemoryMonitor.Stop " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Hosting.IApplicationMonitor.Stop</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="af40a-112">알림 모니터링 및 실행을 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-112">Stop monitoring and firing notifications.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subscribe">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="af40a-113">기본 관찰자와 함께 관찰자를 구독합니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-113">Subscribes an observer in addition to the default observer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public IDisposable Subscribe (IObserver&lt;System.Web.Hosting.LowPhysicalMemoryInfo&gt; observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Subscribe(class System.IObserver`1&lt;class System.Web.Hosting.LowPhysicalMemoryInfo&gt; observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.AspNetMemoryMonitor.Subscribe(System.IObserver{System.Web.Hosting.LowPhysicalMemoryInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function Subscribe (observer As IObserver(Of LowPhysicalMemoryInfo)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ Subscribe(IObserver&lt;System::Web::Hosting::LowPhysicalMemoryInfo ^&gt; ^ observer);" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : IObserver&lt;System.Web.Hosting.LowPhysicalMemoryInfo&gt; -&gt; IDisposable&#xA;override this.Subscribe : IObserver&lt;System.Web.Hosting.LowPhysicalMemoryInfo&gt; -&gt; IDisposable" Usage="aspNetMemoryMonitor.Subscribe observer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IObservable`1.Subscribe(System.IObserver{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="System.IObserver&lt;System.Web.Hosting.LowPhysicalMemoryInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="observer"><span data-ttu-id="af40a-114">구독할 메모리 부족 관찰자입니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-114">The low-memory observer to subscribe to.</span></span></param>
        <summary><span data-ttu-id="af40a-115">기본 메모리 부족 관찰자뿐만 아니라 메모리 부족 관찰자를 구독합니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-115">Subscribes a low-memory observer in addition to the default low-memory observer.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public IDisposable Subscribe (IObserver&lt;System.Web.Hosting.RecycleLimitInfo&gt; observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Subscribe(class System.IObserver`1&lt;class System.Web.Hosting.RecycleLimitInfo&gt; observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.AspNetMemoryMonitor.Subscribe(System.IObserver{System.Web.Hosting.RecycleLimitInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function Subscribe (observer As IObserver(Of RecycleLimitInfo)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ Subscribe(IObserver&lt;System::Web::Hosting::RecycleLimitInfo ^&gt; ^ observer);" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : IObserver&lt;System.Web.Hosting.RecycleLimitInfo&gt; -&gt; IDisposable&#xA;override this.Subscribe : IObserver&lt;System.Web.Hosting.RecycleLimitInfo&gt; -&gt; IDisposable" Usage="aspNetMemoryMonitor.Subscribe observer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IObservable`1.Subscribe(System.IObserver{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="System.IObserver&lt;System.Web.Hosting.RecycleLimitInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="observer"><span data-ttu-id="af40a-116">구독할 재생 제한 관찰자입니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-116">The recycle limit observer to subscribe to.</span></span></param>
        <summary><span data-ttu-id="af40a-117">기본 재생 제한 관찰자와 함께 재생 제한 관찰자를 구독합니다.</span><span class="sxs-lookup"><span data-stu-id="af40a-117">Subscribes a recycle limit observer in addition to the default recycle limit observer.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>