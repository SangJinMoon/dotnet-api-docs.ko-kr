<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DelegatingHandler.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5079366f682e165df57111a3d2e878889b641a774.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">079366f682e165df57111a3d2e878889b641a774</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Http.DelegatingHandler">
          <source>A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.</source>
          <target state="translated">HTTP 응답 메시지의 처리를 내부 처리기라는 다른 처리기로 위임하는 HTTP 처리기의 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.DelegatingHandler">
          <source>An application should provide an inner handler either in the constructor or through the <ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Net.Http.DelegatingHandler.SendAsync%2A&gt;</ph>; otherwise, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown.</source>
          <target state="translated">응용 프로그램 통해 또는 생성자에 내부 처리기를 제공 해야는 <ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph> 호출 하기 전에 속성 <ph id="ph2">&lt;xref:System.Net.Http.DelegatingHandler.SendAsync%2A&gt;</ph>, 그렇지 않으면는 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.DelegatingHandler">
          <source>Note that <ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph> property may be a delegating handler as well.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph> 속성에는 위임 처리기도 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.DelegatingHandler">
          <source>This approach allows the creation of handler stacks to process the HTTP response messages.</source>
          <target state="translated">이 방법은 처리기 스택에 HTTP 응답 메시지를 처리 하 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Net.Http.DelegatingHandler">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.DelegatingHandler" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Net.Http.DelegatingHandler" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.Http.DelegatingHandler.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.DelegatingHandler" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Net.Http.DelegatingHandler" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.DelegatingHandler.#ctor">
          <source>The inner handle can be set using the <ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph>.</source>
          <target state="translated">사용 하 여 내부 핸들을 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
          <source>The inner handler which is responsible for processing the HTTP response messages.</source>
          <target state="translated">HTTP 응답 메시지 처리를 담당하는 내부 처리기입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.DelegatingHandler" /&gt;</ph> class with a specific inner handler.</source>
          <target state="translated">특정 내부 처리기를 사용하여 <ph id="ph1">&lt;see cref="T:System.Net.Http.DelegatingHandler" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to releases only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Http.DelegatingHandler" /&gt;</ph>, and optionally disposes of the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.DelegatingHandler" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Net.Http.DelegatingHandler.InnerHandler">
          <source>Gets or sets the inner handler which processes the HTTP response messages.</source>
          <target state="translated">HTTP 응답 메시지를 처리하는 내부 처리기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.DelegatingHandler.InnerHandler">
          <source>The inner handler for HTTP response messages.</source>
          <target state="translated">HTTP 응답 메시지에 대한 내부 처리기입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.DelegatingHandler.InnerHandler">
          <source>This <ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph> property can only be set before the class is used (the <ph id="ph2">&lt;xref:System.Net.Http.DelegatingHandler.SendAsync%2A&gt;</ph> method is called).</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph> 속성 클래스를 사용 하기 전에 설정할 수만 있습니다 (의 <ph id="ph2">&lt;xref:System.Net.Http.DelegatingHandler.SendAsync%2A&gt;</ph> 메서드는).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.DelegatingHandler.InnerHandler">
          <source>Note that <ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph> property may be a delegating handler too, although this is uncommon.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.InnerHandler%2A&gt;</ph> 속성 될 수 있습니다는 위임 처리기도 일반적이 지는 않지만 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.DelegatingHandler.InnerHandler">
          <source>This approach allows the creation of handler stacks for the HTTP response messages.</source>
          <target state="translated">이 방법은 HTTP 응답 메시지에 대 한 처리기 스택이 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The HTTP request message to send to the server.</source>
          <target state="translated">서버에 보낼 HTTP 요청 메시지입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>A cancellation token to cancel operation.</source>
          <target state="translated">작업을 취소할 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.</source>
          <target state="translated">비동기 작업으로 서버에 전송할 내부 처리기에 대한 HTTP 요청을 보냅니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>This operation does not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>This overridable implementation of <ph id="ph1">&lt;xref:System.Net.Http.HttpClientHandler.SendAsync%2A&gt;</ph> method forwards the HTTP request to the inner handler to send to the server as an asynchronous operation.</source>
          <target state="translated">이 재정의 가능한 구현 <ph id="ph1">&lt;xref:System.Net.Http.HttpClientHandler.SendAsync%2A&gt;</ph> 메서드는 비동기 작업으로 서버에 보낼 HTTP 요청을 내부 처리기를 전달 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.SendAsync%2A&gt;</ph> method is mainly used by the system and not by applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.SendAsync%2A&gt;</ph> 메서드는 시스템 및 응용 프로그램이 아니라 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>When this method is called, it calls the <ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.SendAsync%2A&gt;</ph> method on the inner handler.</source>
          <target state="translated">이 메서드가 호출 되 면 호출 하는 <ph id="ph1">&lt;xref:System.Net.Http.DelegatingHandler.SendAsync%2A&gt;</ph> 내부 처리기에서 메서드.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> was <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이었습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>