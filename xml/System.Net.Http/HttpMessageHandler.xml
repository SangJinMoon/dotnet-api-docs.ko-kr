<Type Name="HttpMessageHandler" FullName="System.Net.Http.HttpMessageHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="010493ba0e303188ad7d031473c72e8a1f5bbda7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpMessageHandler : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpMessageHandler extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpMessageHandler&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpMessageHandler abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="85092-101">HTTP 메시지 처리기의 기본 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85092-101">A base type for HTTP message handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85092-102">사용할 수 있는 다양 한 HTTP 메시지 핸들이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="85092-102">There are various HTTP message handles that can be used.</span></span> <span data-ttu-id="85092-103">이 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="85092-103">These include the following.</span></span>  
  
1.  <span data-ttu-id="85092-104"><xref:System.Net.Http.DelegatingHandler> -클래스에는 처리기 처리기 체인에 연결 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="85092-104"><xref:System.Net.Http.DelegatingHandler> - A class used to plug a handler into a handler chain.</span></span>  
  
2.  <span data-ttu-id="85092-105"><xref:System.Net.Http.HttpMessageHandler> -대부분의 응용 프로그램에 대 한 가장 일반적인 요구 사항에서 파생 되도록 클래스에 단순 합니다.</span><span class="sxs-lookup"><span data-stu-id="85092-105"><xref:System.Net.Http.HttpMessageHandler> - A simple to class to derive from that supports the most common requirements for most applications.</span></span>  
  
3.  <span data-ttu-id="85092-106"><xref:System.Net.Http.HttpClientHandler> -실제로 HTTP 전송 작업을 처리 하는 처리기 체인의 맨 아래에서 작동 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="85092-106"><xref:System.Net.Http.HttpClientHandler> - A class that operates at the bottom of the handler chain that actually handles the HTTP transport operations.</span></span>  
  
4.  <span data-ttu-id="85092-107"><xref:System.Net.Http.WebRequestHandler> -특수 클래스에만 적용 되는 옵션을 사용 하 여 HTTP 전송 작업을 처리 하는 처리기 체인 클래스의 맨 아래에서 작동 하는 <xref:System.Net.HttpWebRequest?displayProperty=nameWithType> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="85092-107"><xref:System.Net.Http.WebRequestHandler> - A specialty class that operates at the bottom of the handler chain class that handles HTTP transport operations with options that are specific to the <xref:System.Net.HttpWebRequest?displayProperty=nameWithType> object.</span></span>  
  
 <span data-ttu-id="85092-108">개발자 로부터 클래스를 파생 하는 경우 <xref:System.Net.Http.HttpMessageHandler> 재정의 <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> 메서드를 이러한 있는지 확인 해야 <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> 다른 스레드에서 동시에 호출 수입니다.</span><span class="sxs-lookup"><span data-stu-id="85092-108">If developers derive classes from <xref:System.Net.Http.HttpMessageHandler> and override the <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> method, they must make sure that <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> can get called concurrently by different threads.</span></span>  
  
 <span data-ttu-id="85092-109">이 작업은 필요에 대 한 메서드 이후 <xref:System.Net.Http.HttpClient> 동시에 호출할 수 있으며 스레드 보안 보장 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="85092-109">This is necessary since methods on <xref:System.Net.Http.HttpClient> can be called concurrently and need a guarantee of thread safety.</span></span> <span data-ttu-id="85092-110">따라서 처리기에 할당 된 경우는 <xref:System.Net.Http.HttpClient> 인스턴스는 <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> 처리기의 메서드를 동시에 의해 호출 될 수는 <xref:System.Net.Http.HttpClient> 인스턴스와 스레드로부터 안전 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="85092-110">So if a handler is assigned to an <xref:System.Net.Http.HttpClient> instance, the <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> method of the handler may get called concurrently by the <xref:System.Net.Http.HttpClient> instance and needs to be thread safe.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpMessageHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpMessageHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85092-111">
            <see cref="T:System.Net.Http.HttpMessageHandler" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85092-111">Initializes a new instance of the <see cref="T:System.Net.Http.HttpMessageHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="85092-112">
            <see cref="T:System.Net.Http.HttpMessageHandler" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85092-112">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpMessageHandler" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85092-113">관리되지 않는 리소스를 해제하고, <see cref="T:System.Net.Http.HttpMessageHandler" />에서 사용하는 관리되는 리소스를 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85092-113">Releases the unmanaged resources and disposes of the managed resources used by the <see cref="T:System.Net.Http.HttpMessageHandler" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="85092-114">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />, 관리되지 않는 리소스만 해제하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85092-114">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85092-115">
            <see cref="T:System.Net.Http.HttpMessageHandler" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85092-115">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpMessageHandler" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85092-116">이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="85092-116">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="85092-117">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="85092-117">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="85092-118"><xref:System.Object.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다. 경우는 `disposing` 매개 변수는 `true`,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Net.Http.HttpMessageHandler> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="85092-118"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpMessageHandler> references.</span></span> <span data-ttu-id="85092-119">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="85092-119">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal abstract System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="85092-120">보낼 HTTP 요청 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85092-120">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="85092-121">작업을 취소할 취소 토큰입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85092-121">The cancellation token to cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="85092-122">HTTP 요청을 비동기 작업으로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85092-122">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85092-123">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85092-123">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85092-124">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="85092-124">This operation will not block.</span></span> <span data-ttu-id="85092-125">반환 된 <xref:System.Threading.Tasks.Task%601> 개체 콘텐츠를 비롯 한 전체 응답 내용을 읽은 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="85092-125">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 <span data-ttu-id="85092-126"><xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> 메서드는 시스템에서 주로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="85092-126">The <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> method is used primarily by the system.</span></span> <span data-ttu-id="85092-127">시스템에서이 메서드는 <xref:System.Net.Http.HttpClient.SendAsync%2A?displayProperty=nameWithType> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="85092-127">This method is called by the system one of the  <xref:System.Net.Http.HttpClient.SendAsync%2A?displayProperty=nameWithType> methods is called.</span></span> <span data-ttu-id="85092-128">대부분의 응용 프로그램은이 메서드를 호출 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="85092-128">Most apps will never call this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85092-129">
            <paramref name="request" />가 <see langword="null" />이었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85092-129">The <paramref name="request" /> was <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>