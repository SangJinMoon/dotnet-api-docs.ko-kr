<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ByteArrayContent.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d06b98425feeb50a3962c2d861064a3e184394fc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d06b98425feeb50a3962c2d861064a3e184394fc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Http.ByteArrayContent">
          <source>Provides HTTP content based on a byte array.</source>
          <target state="translated">바이트 배열에 따라 HTTP 콘텐츠를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Net.Http.ByteArrayContent">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
          <source>The content used to initialize the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>를 초기화하는 데 사용되는 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="content" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="content" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The content used to initialize the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>를 초기화하는 데 사용되는 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The offset, in bytes, in the <bpt id="p1">&lt;c&gt;</bpt>content<ept id="p1">&lt;/c&gt;</ept> parameter used to initialize the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>를 초기화하는 데 사용되는 <bpt id="p1">&lt;c&gt;</bpt>콘텐츠<ept id="p1">&lt;/c&gt;</ept> 매개 변수의 오프셋(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the <bpt id="p1">&lt;c&gt;</bpt>content<ept id="p1">&lt;/c&gt;</ept> starting from the <bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept> parameter used to initialize the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>를 초기화하기 위해 사용되는 <bpt id="p2">&lt;c&gt;</bpt>오프셋<ept id="p2">&lt;/c&gt;</ept> 매개 변수에서 시작하는 <bpt id="p1">&lt;c&gt;</bpt>콘텐츠<ept id="p1">&lt;/c&gt;</ept>의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>Only the range specified by the <ph id="ph1">`offset`</ph> parameter and the <ph id="ph2">`count`</ph>  parameter is used as content.</source>
          <target state="translated">로 지정 된 범위에만 <ph id="ph1">`offset`</ph> 매개 변수 및 <ph id="ph2">`count`</ph> 콘텐츠로 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="content" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="content" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 매개 변수가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is greater than the length of content specified by the <ph id="ph2">&lt;paramref name="content" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 매개 변수의 값이 <ph id="ph2">&lt;paramref name="content" /&gt;</ph> 매개 변수가 지정한 콘텐츠 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="count" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 매개 변수가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="count" /&gt;</ph> parameter is greater than the length of content specified by the <ph id="ph2">&lt;paramref name="content" /&gt;</ph> parameter - minus the <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;paramref name="content" /&gt;</ph> 매개 변수에서 지정한 콘텐츠 길이에서 <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> 매개 변수를 뺀 값보다 큽니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
          <source>Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the <ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.ByteArrayContent" /&gt;</ph>의 메모리에 해당하는 백업 저장소를 읽기 위해 비동기 작업으로 HTTP 콘텐츠 스트림을 만듭니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after all of the content stream has been created.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체는 모든 콘텐츠 스트림을 만든 후에 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>The target stream.</source>
          <target state="translated">대상 스트림입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>Information about the transport, like channel binding token.</source>
          <target state="translated">전송에 대한 정보(예: 채널 바인딩 토큰)입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>This parameter may be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 매개 변수는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.</source>
          <target state="translated">생성자에 제공된 바이트 배열을 serialize하고 비동기 작업으로 HTTP 콘텐츠 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>This operation does not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <source>When the returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object completes, the whole byte array has been written to the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">때 반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 개체가 완료 되 면 전체 바이트 배열에 기록 된는 <ph id="ph2">`stream`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>The length in bytes of the byte array.</source>
          <target state="translated">바이트 배열의 바이트 길이입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>Determines whether a byte array has a valid length in bytes.</source>
          <target state="translated">바이트 배열의 바이트 길이가 올바른지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is a valid length; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="length" /&gt;</ph>의 길이가 올바르면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.ByteArrayContent.TryComputeLength%2A&gt;</ph> method gives a derived content type the ability to calculate the content length.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.ByteArrayContent.TryComputeLength%2A&gt;</ph> 메서드 파생된 콘텐츠 형식이 콘텐츠 길이 계산 하는 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>This is useful for content types which are able to easily calculate the content length.</source>
          <target state="translated">쉽게 콘텐츠 길이 계산할 수 있는 콘텐츠 형식에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">콘텐츠 길이 수 없거나 비용이 많이 드는 (해야 직렬화는 비용이 많이 들 수 하거나 많은 양의 메모리를 할당할 수 있는 전체 콘텐츠를 버퍼링 하는 시스템) 컴퓨팅,이 메서드가 반환할 수 있습니다 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>If this method returns <ph id="ph1">`false`</ph>, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</source>
          <target state="translated">이 메서드가 반환 하는 경우 <ph id="ph1">`false`</ph>,이 청크 분할된 전송 필요 없거나 서버에 전송 되기 전에 콘텐츠 버퍼링 해야 되 의미 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
          <source>This method always returned <ph id="ph1">`true`</ph> for <ph id="ph2">&lt;xref:System.Net.Http.ByteArrayContent&gt;</ph>.</source>
          <target state="translated">이 메서드가 반환 항상 <ph id="ph1">`true`</ph> 에 대 한 <ph id="ph2">&lt;xref:System.Net.Http.ByteArrayContent&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>