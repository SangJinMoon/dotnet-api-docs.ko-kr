<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpClient.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac565f3ff05350afbb9dccda0dc1b2898fea192237e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65f3ff05350afbb9dccda0dc1b2898fea192237e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.</source>
          <target state="translated">URI로 식별되는 리소스에서 HTTP 요청을 보내고 HTTP 응답을 받기 위한 기본 클래스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> class instance acts as a session to send HTTP requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 클래스 인스턴스 역할 HTTP 요청을 보내는 세션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>An <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance is a collection of settings applied to all requests executed by that instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 인스턴스는 해당 인스턴스가 실행 되는 모든 요청에 적용 된 설정의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>In addition, every <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance uses its own connection pool, isolating its requests from requests executed by other <ph id="ph2">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instances.</source>
          <target state="translated">또한 모든 <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 인스턴스 요청을 다른 실행에서 해당 요청을 격리 자체 연결 풀을 사용 하 여 <ph id="ph2">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> also acts as a base class for more specific HTTP clients.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 도 보다 구체적인 HTTP 클라이언트에 대 한 기본 클래스 역할을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>An example would be a FacebookHttpClient providing additional methods specific to a Facebook web service (a GetFriends method, for instance).</source>
          <target state="translated">예를 들어 수 Facebook 웹 서비스와 관련 된 추가 메서드를 제공 하는 FacebookHttpClient (GetFriends 메서드 예를 들어).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Derived classes should not override the virtual methods on the class.</source>
          <target state="translated">파생된 클래스는 클래스에는 가상 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Instead, use a constructor overload that accepts <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> to configure any pre- or post-request processing instead.</source>
          <target state="translated">를 대신 허용 하는 생성자 오버 로드를 사용 하 여 <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> 모든 전처리 또는 후 요청을 처리 대신 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>By default, <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> will be used to send requests to the server.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> 요청을 보낼 서버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This behavior can be modified by specifying a different channel in one of the constructor overloads taking a <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> instance as parameter.</source>
          <target state="translated">생성자 오버 로드가 중 하나에서 서로 다른 채널을 지정 하 여이 문제를 수정할 수는 <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> 인스턴스 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>If features like authentication or caching are required, <ph id="ph1">&lt;xref:System.Net.Http.WebRequestHandler&gt;</ph> can be used to configure settings and the instance can be passed to the constructor.</source>
          <target state="translated">인증 또는 캐싱 같은 기능이 필요한 경우 <ph id="ph1">&lt;xref:System.Net.Http.WebRequestHandler&gt;</ph> 설정을 구성 하는 데 사용 될 수 있습니다 및 생성자에 전달 된 인스턴스 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The returned handler can be passed to one of the constructor overloads taking a <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> parameter.</source>
          <target state="translated">반환 된 처리기 생성자 오버 로드가 중 하나에 전달할 수는 <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>If an app using <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> and related classes in the  <ph id="ph2">&lt;xref:System.Net.Http&gt;</ph> namespace intends to download large amounts of data (50 megabytes or more), then the app should stream those downloads and not use the default buffering.</source>
          <target state="translated">사용 하 여 앱 경우 <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 및 관련 클래스에는 <ph id="ph2">&lt;xref:System.Net.Http&gt;</ph> 네임 스페이스에서 많은 양의 데이터 (50mb 이상)을 다운로드 하려는 다음 앱이 다운로드 스트림를 기본 버퍼링을 사용 하지 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>If the default buffering is used the client memory usage will get very large, potentially resulting in substantially reduced performance.</source>
          <target state="translated">기본 버퍼링을 사용 하는 경우 클라이언트 메모리 사용량은 매우 큰 받아볼, 성능 저하를 발생할 대체로 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The following methods are thread safe:</source>
          <target state="translated">다음 메서드는 스레드로부터 안전 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> is intended to be instantiated once and re-used throughout the life of an application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 한 번 시작 하 고 응용 프로그램의 수명 내내 다시 사용 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</source>
          <target state="translated">모든 요청에 대 한 HttpClient 클래스 인스턴스화 소켓 높은 부하에서 사용할 수 있는 빠른 속도로 소모 될 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This will result in SocketException errors.</source>
          <target state="translated">이 인해 SocketException 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Below is an example using HttpClient correctly.</source>
          <target state="translated">다음은 HttpClient를 올바르게 사용 하는 예제입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> is a high-level API that wraps the lower-level functionality available on each platform where it runs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 실행 되는 각 플랫폼에서 사용할 수 있는 하위 수준 기능을 래핑하는 높은 수준의 API입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>On each platform, <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> tries to use the best available transport:</source>
          <target state="translated">각 플랫폼에서 <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 사용할 수 있는 가장 전송 사용 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><bpt id="p1">**</bpt>Host/Runtime<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Host/Runtime<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><bpt id="p1">**</bpt>Backend<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Backend<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows/.NET Framework</source>
          <target state="translated">Windows/.NET Framework</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows/Mono</source>
          <target state="translated">Windows/Mono</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows/UWP</source>
          <target state="translated">Windows/UWP</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows native <ph id="ph1">&lt;xref:System.Net.Http.WinHttpHandler&gt;</ph> (HTTP 2.0 capable)</source>
          <target state="translated">Windows 네이티브 <ph id="ph1">&lt;xref:System.Net.Http.WinHttpHandler&gt;</ph> (HTTP 2.0 가능)</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows/.NET Core</source>
          <target state="translated">Windows/.NET Core</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows native <ph id="ph1">&lt;xref:System.Net.Http.WinHttpHandler&gt;</ph> (HTTP 2.0 capable)</source>
          <target state="translated">Windows 네이티브 <ph id="ph1">&lt;xref:System.Net.Http.WinHttpHandler&gt;</ph> (HTTP 2.0 가능)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Android/Xamarin</source>
          <target state="translated">Android/Xamarin</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Selected at build-time.</source>
          <target state="translated">빌드 타임에 선택 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Can either use <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> or be configured to use Android's native <bpt id="p1">[</bpt><ph id="ph2">`HttpURLConnection`</ph><ept id="p1">](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</ept></source>
          <target state="translated">사용 하거나 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> Android의 네이티브를 사용 하도록 구성 하거나 <bpt id="p1">[</bpt><ph id="ph2">`HttpURLConnection`</ph><ept id="p1">](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>iOS, tvOS, watchOS/Xamarin</source>
          <target state="translated">iOS, tvOS, watchOS/Xamarin</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Selected at build-time.</source>
          <target state="translated">빌드 타임에 선택 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Can either use <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> or be configured to use Apple's <bpt id="p1">[</bpt><ph id="ph2">`NSUrlSession`</ph><ept id="p1">](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/)</ept> (HTTP 2.0 capable)</source>
          <target state="translated">사용 하거나 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> Apple의 사용 하도록 구성 하거나 <bpt id="p1">[</bpt> <ph id="ph2">`NSUrlSession`</ph> <ept id="p1">](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/)</ept> (HTTP 2.0 가능)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>macOS/Xamarin</source>
          <target state="translated">macOS/Xamarin</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Selected at build-time.</source>
          <target state="translated">빌드 타임에 선택 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Can either use <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> or be configured to use Apple's <bpt id="p1">[</bpt><ph id="ph2">`NSUrlSession`</ph><ept id="p1">](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/)</ept> (HTTP 2.0 capable)</source>
          <target state="translated">사용 하거나 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> Apple의 사용 하도록 구성 하거나 <bpt id="p1">[</bpt> <ph id="ph2">`NSUrlSession`</ph> <ept id="p1">](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/)</ept> (HTTP 2.0 가능)</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>macOS/Mono</source>
          <target state="translated">macOS/모노</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>macOS/.NET Core</source>
          <target state="translated">macOS/.NET Core</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><ph id="ph1">`libcurl`</ph>-based HTTP transport (HTTP 2.0 capable)</source>
          <target state="translated"><ph id="ph1">`libcurl`</ph>-HTTP 전송 (HTTP 2.0 가능)를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Linux/Mono</source>
          <target state="translated">Linux/모노</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Linux/.NET Core</source>
          <target state="translated">Linux/.NET Core</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><ph id="ph1">`libcurl`</ph>-based HTTP transport (HTTP 2.0 capable)</source>
          <target state="translated"><ph id="ph1">`libcurl`</ph>-HTTP 전송 (HTTP 2.0 가능)를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Users can also configure a specific transport for <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> by invoking the <ph id="ph2">&lt;xref:System.Net.Http.HttpClient.%23ctor*&gt;</ph> constructor that takes an <ph id="ph3">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph>.</source>
          <target state="translated">사용자에 대 한 특정 전송을 구성할 수도 <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 호출 하 여는 <ph id="ph2">&lt;xref:System.Net.Http.HttpClient.%23ctor*&gt;</ph> 사용 하는 생성자는 <ph id="ph3">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> is intended to be instantiated once and re-used throughout the life of an application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 한 번 시작 하 고 응용 프로그램의 수명 내내 다시 사용 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</source>
          <target state="translated">모든 요청에 대 한 HttpClient 클래스 인스턴스화 소켓 높은 부하에서 사용할 수 있는 빠른 속도로 소모 될 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This will result in SocketException errors.</source>
          <target state="translated">이 인해 SocketException 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Below is an example using HttpClient correctly.</source>
          <target state="translated">다음은 HttpClient를 올바르게 사용 하는 예제입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
          <source>The HTTP handler stack to use for sending requests.</source>
          <target state="translated">요청을 보내는 데 사용할 HTTP 처리기 스택입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> class with a specific handler.</source>
          <target state="translated">특정 처리기를 사용하여 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
          <source><ph id="ph1">`handler`</ph> will be disposed of by calling <bpt id="p1">[</bpt>HttpClient.Dispose<ept id="p1">](xref:System.Net.Http.HttpMessageInvoker.Dispose)</ept>.</source>
          <target state="translated"><ph id="ph1">`handler`</ph> 호출 하 여 제거 <bpt id="p1">[</bpt>HttpClient.Dispose<ept id="p1">](xref:System.Net.Http.HttpMessageInvoker.Dispose)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
          <source>The <ph id="ph1">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph> responsible for processing the HTTP response messages.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph>는 HTTP 응답 메시지 처리를 담당합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the inner handler should be disposed of by <bpt id="p1">[</bpt>HttpClient.Dispose<ept id="p1">](xref:System.Net.Http.HttpMessageInvoker.Dispose)</ept>, <ph id="ph2">&lt;see langword="false" /&gt;</ph> if you intend to reuse the inner handler.</source>
          <target state="translated"><bpt id="p1">[</bpt>HttpClient.Dispose<ept id="p1">](xref:System.Net.Http.HttpMessageInvoker.Dispose)</ept>에 의해 내부 처리기를 삭제해야 하는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 내부 처리기를 다시 사용하려고 하는 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> class with a specific handler.</source>
          <target state="translated">특정 처리기를 사용하여 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.BaseAddress">
          <source>Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</source>
          <target state="translated">요청을 보낼 때 사용된 인터넷 리소스의 URI(Uniform Resource Identifier)의 기준 주소를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.BaseAddress">
          <source>The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</source>
          <target state="translated">요청을 보낼 때 사용된 인터넷 리소스의 URI(Uniform Resource Identifier)의 기준 주소입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.BaseAddress">
          <source>When sending a <ph id="ph1">&lt;xref:System.Net.Http.HttpRequestMessage&gt;</ph> with a relative Uri, the message Uri will be added to the <ph id="ph2">&lt;xref:System.Net.Http.HttpClient.BaseAddress%2A&gt;</ph> property to create an absolute Uri.</source>
          <target state="translated">보낼 때는 <ph id="ph1">&lt;xref:System.Net.Http.HttpRequestMessage&gt;</ph> 상대 Uri로 Uri 메시지에 추가 됩니다는 <ph id="ph2">&lt;xref:System.Net.Http.HttpClient.BaseAddress%2A&gt;</ph> 속성을 절대 Uri를 만듭니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.CancelPendingRequests">
          <source>Cancel all pending requests on this instance.</source>
          <target state="translated">이 인스턴스에서 보류 중인 모든 요청을 취소합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.CancelPendingRequests">
          <source>After calling this method, the <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance can still be used to execute additional requests.</source>
          <target state="translated">이 메서드를 호출한 후의 <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 추가 요청을 실행 하는 인스턴스 현재 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
          <source>Gets the headers which should be sent with each request.</source>
          <target state="translated">각 요청과 함께 보내야 하는 헤더를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
          <source>The headers which should be sent with each request.</source>
          <target state="translated">각 요청과 함께 보내야 하는 헤더입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
          <source>Headers set on this property don't need to be set on request messages again.</source>
          <target state="translated">이 속성에 설정 된 헤더는 요청 메시지에 다시 설정 될 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a DELETE request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">DELETE 요청을 지정된 URI에 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>Send a DELETE request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">DELETE 요청을 지정된 URI에 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">요청 메시지를 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 인스턴스에서 이미 전송한 경우</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>Send a DELETE request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">DELETE 요청을 지정된 URI에 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">요청 메시지를 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 인스턴스에서 이미 전송한 경우</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</source>
          <target state="translated">취소 토큰이 포함된 지정한 URI에 DELETE 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">요청 메시지를 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 인스턴스에서 이미 전송한 경우</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</source>
          <target state="translated">취소 토큰이 포함된 지정한 URI에 DELETE 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">요청 메시지를 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 인스턴스에서 이미 전송한 경우</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to releases only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> and optionally disposes of the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 삭제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">`Dispose`</ph> 와 <ph id="ph3">`disposing`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Net.Http.HttpClient&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 매개 변수가 <ph id="ph2">`true`</ph>인 경우 이 메서드는 이 <ph id="ph3">&lt;xref:System.Net.Http.HttpClient&gt;</ph>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose()`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>When this method is called, the <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.CancelPendingRequests%2A&gt;</ph> method is called to abort all pending requests.</source>
          <target state="translated">이 메서드를 호출할 때는 <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.CancelPendingRequests%2A&gt;</ph> 메서드는 보류 중인 모든 요청을 중단 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a GET request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">GET 요청을 지정된 URI에 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The operation will not block.</source>
          <target state="translated">작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>Send a GET request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">GET 요청을 지정된 URI에 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>Send a GET request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">GET 요청을 지정된 URI에 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>An HTTP completion option value that indicates when the operation should be considered completed.</source>
          <target state="translated">작업이 완료된 것으로 간주해야 할 때를 나타내는 HTTP 완료 옵션 값입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</source>
          <target state="translated">HTTP 완료 옵션이 포함된 지정한 URI에 GET 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete based on the <ph id="ph2">`completionOption`</ph> parameter after the part or all of the response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체가 완료에 따라는 <ph id="ph2">`completionOption`</ph> 일부 또는 전체 응답 (콘텐츠 포함)를 읽은 다음 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</source>
          <target state="translated">취소 토큰이 포함된 지정한 URI에 GET 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>An HTTP completion option value that indicates when the operation should be considered completed.</source>
          <target state="translated">작업이 완료된 것으로 간주해야 할 때를 나타내는 HTTP 완료 옵션 값입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</source>
          <target state="translated">HTTP 완료 옵션이 포함된 지정한 URI에 GET 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete based on the <ph id="ph2">`completionOption`</ph> parameter after the part or all of the response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체가 완료에 따라는 <ph id="ph2">`completionOption`</ph> 일부 또는 전체 응답 (콘텐츠 포함)를 읽은 다음 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</source>
          <target state="translated">취소 토큰이 포함된 지정한 URI에 GET 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>An HTTP  completion option value that indicates when the operation should be considered completed.</source>
          <target state="translated">작업이 완료된 것으로 간주해야 할 때를 나타내는 HTTP 완료 옵션 값입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</source>
          <target state="translated">HTTP 완료 옵션 및 취소 토큰을 사용하여 지정한 URL에 비동기 작업으로 GET 요청을 보냅니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete based on the <ph id="ph2">`completionOption`</ph> parameter after the part or all of the response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체가 완료에 따라는 <ph id="ph2">`completionOption`</ph> 일부 또는 전체 응답 (콘텐츠 포함)를 읽은 다음 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>An HTTP  completion option value that indicates when the operation should be considered completed.</source>
          <target state="translated">작업이 완료된 것으로 간주해야 할 때를 나타내는 HTTP 완료 옵션 값입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</source>
          <target state="translated">HTTP 완료 옵션 및 취소 토큰을 사용하여 지정한 URL에 비동기 작업으로 GET 요청을 보냅니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete based on the <ph id="ph2">`completionOption`</ph> parameter after the part or all of the response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체가 완료에 따라는 <ph id="ph2">`completionOption`</ph> 일부 또는 전체 응답 (콘텐츠 포함)를 읽은 다음 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</source>
          <target state="translated">GET 요청을 지정된 URI에 보내고 비동기 작업에서 바이트 배열로 응답 본문을 반환합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The operation will not block.</source>
          <target state="translated">작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</source>
          <target state="translated">GET 요청을 지정된 URI에 보내고 비동기 작업에서 바이트 배열로 응답 본문을 반환합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 전체 응답 본문을 읽을 개체 완성 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</source>
          <target state="translated">GET 요청을 지정된 URI에 보내고 비동기 작업에서 바이트 배열로 응답 본문을 반환합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 전체 응답 본문을 읽을 개체 완성 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</source>
          <target state="translated">GET 요청을 지정된 URI에 보내고 비동기 작업에서 스트림으로 응답 본문을 반환합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The operation will not block.</source>
          <target state="translated">작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</source>
          <target state="translated">GET 요청을 지정된 URI에 보내고 비동기 작업에서 스트림으로 응답 본문을 반환합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 전체 응답 본문을 읽을 개체 완성 합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>This method does not buffer the stream.</source>
          <target state="translated">이 메서드는 스트림을 버퍼링 하지 않는다는 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</source>
          <target state="translated">GET 요청을 지정된 URI에 보내고 비동기 작업에서 스트림으로 응답 본문을 반환합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 전체 응답 본문을 읽을 개체 완성 합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>This method does not buffer the stream.</source>
          <target state="translated">이 메서드는 스트림을 버퍼링 하지 않는다는 합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</source>
          <target state="translated">GET 요청을 지정된 URI에 보내고 비동기 작업에서 문자열로 응답 본문을 반환합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</source>
          <target state="translated">GET 요청을 지정된 URI에 보내고 비동기 작업에서 문자열로 응답 본문을 반환합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 전체 응답 본문을 읽을 개체 완성 합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</source>
          <target state="translated">GET 요청을 지정된 URI에 보내고 비동기 작업에서 문자열로 응답 본문을 반환합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 전체 응답 본문을 읽을 개체 완성 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>Gets or sets the maximum number of bytes to buffer when reading the response content.</source>
          <target state="translated">응답 콘텐츠를 읽을 경우 버퍼링할 최대 바이트 수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>The maximum number of bytes to buffer when reading the response content.</source>
          <target state="translated">응답 콘텐츠를 읽을 경우 버퍼링할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>The default value for this property is 2 gigabytes.</source>
          <target state="translated">이 속성의 기본값은 2GB입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>An app can set the <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A&gt;</ph> property to a lower value to limit the size of the response to buffer when reading the response.</source>
          <target state="translated">응용 프로그램을 설정할 수는 <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A&gt;</ph> 속성을 낮은 값으로 응답을 읽을 때 버퍼에 대 한 응답의 크기를 제한 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>If the size of the response content is greater than the  <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A&gt;</ph> property, an exception is thrown.</source>
          <target state="translated">응답 콘텐츠 크기 보다 크면는 <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A&gt;</ph> 속성, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>The size specified is less than or equal to zero.</source>
          <target state="translated">지정된 크기가 0보다 작거나 같은 경우</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>An operation has already been started on the current instance.</source>
          <target state="translated">작업이 이미 현재 인스턴스에서 시작된 경우</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>The current instance has been disposed.</source>
          <target state="translated">현재 인스턴스가 삭제된 경우</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a POST request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">POST 요청을 지정된 URI에 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">서버로 전송된 HTTP 요청 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>Send a POST request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">POST 요청을 지정된 URI에 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">서버로 전송된 HTTP 요청 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>Send a POST request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">POST 요청을 지정된 URI에 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">서버로 전송된 HTTP 요청 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>Send a POST request with a cancellation token as an asynchronous operation.</source>
          <target state="translated">취소 토큰이 포함된 POST 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">서버로 전송된 HTTP 요청 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>Send a POST request with a cancellation token as an asynchronous operation.</source>
          <target state="translated">취소 토큰이 포함된 POST 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a PUT request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">PUT 요청을 지정된 URI에 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">서버로 전송된 HTTP 요청 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>Send a PUT request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">PUT 요청을 지정된 URI에 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">서버로 전송된 HTTP 요청 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>Send a PUT request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">PUT 요청을 지정된 URI에 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">서버로 전송된 HTTP 요청 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>Send a PUT request with a cancellation token as an asynchronous operation.</source>
          <target state="translated">취소 토큰이 포함된 PUT 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">요청이 전송되는 URI입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">서버로 전송된 HTTP 요청 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">취소의 통지를 받기 위해 다른 개체나 스레드에서 사용할 수 있는 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>Send a PUT request with a cancellation token as an asynchronous operation.</source>
          <target state="translated">취소 토큰이 포함된 PUT 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 (콘텐츠 포함)에서 전체 응답을 읽은 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">HTTP 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The HTTP request message to send.</source>
          <target state="translated">보낼 HTTP 요청 메시지입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">HTTP 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete once the entire response including content is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 콘텐츠를 비롯 한 전체 응답 내용을 읽은 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">요청 메시지를 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 인스턴스에서 이미 전송한 경우</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The HTTP request message to send.</source>
          <target state="translated">보낼 HTTP 요청 메시지입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>When the operation should complete (as soon as a response is available or after reading the whole response content).</source>
          <target state="translated">작업을 완료해야 할 경우(응답을 사용할 수 있게 된 즉시 또는 전체 응답 내용을 읽은 후).</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">HTTP 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>Depending on the value of the <ph id="ph1">`completionOption`</ph> parameter, the returned <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete as soon as a response is available or the entire response including content is read.</source>
          <target state="translated">값에 따라는 <ph id="ph1">`completionOption`</ph> 매개 변수, 반환 된 <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체가 즉시 응답을 사용할 수 있는 콘텐츠를 비롯 한 전체 응답은 읽기를 완료 합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">요청 메시지를 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 인스턴스에서 이미 전송한 경우</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The HTTP request message to send.</source>
          <target state="translated">보낼 HTTP 요청 메시지입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The cancellation token to cancel operation.</source>
          <target state="translated">작업을 취소할 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">HTTP 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete once the entire response including content is read.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체 콘텐츠를 비롯 한 전체 응답 내용을 읽은 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">요청 메시지를 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 인스턴스에서 이미 전송한 경우</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The HTTP request message to send.</source>
          <target state="translated">보낼 HTTP 요청 메시지입니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>When the operation should complete (as soon as a response is available or after reading the whole response content).</source>
          <target state="translated">작업을 완료해야 할 경우(응답을 사용할 수 있게 된 즉시 또는 전체 응답 내용을 읽은 후).</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The cancellation token to cancel operation.</source>
          <target state="translated">작업을 취소할 취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">HTTP 요청을 비동기 작업으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>Depending on the value of the <ph id="ph1">`completionOption`</ph> parameter, the returned <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete as soon as a response is available or the entire response including content is read.</source>
          <target state="translated">값에 따라는 <ph id="ph1">`completionOption`</ph> 매개 변수, 반환 된 <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 개체가 즉시 응답을 사용할 수 있는 콘텐츠를 비롯 한 전체 응답은 읽기를 완료 합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">요청 메시지를 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 인스턴스에서 이미 전송한 경우</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">네트워크 연결, DNS 오류, 서버 인증서 유효성 검사 또는 시간 초과와 같은 기본 문제로 인해 요청이 실패한 경우</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>Gets or sets the timespan to wait before the request times out.</source>
          <target state="translated">요청 시간 제한 범위 내에서 대기할 기간을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The timespan to wait before the request times out.</source>
          <target state="translated">요청 시간 제한 범위 내에서 대기할 기간입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The default value is 100,000 milliseconds (100 seconds).</source>
          <target state="translated">기본값은 100,000밀리초(100초)입니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>To set an infinite timeout, set the property value to <ph id="ph1">&lt;xref:System.Threading.Timeout.InfiniteTimeSpan&gt;</ph>.</source>
          <target state="translated">무한 시간 제한을 설정 하려면 속성 값을 설정 <ph id="ph1">&lt;xref:System.Threading.Timeout.InfiniteTimeSpan&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.Timeout%2A&gt;</ph> to a value less than 15 seconds, it may take 15 seconds or more before a <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> is thrown to indicate a timeout on your request.</source>
          <target state="translated">DNS 도메인 이름 () 쿼리는 최대 15 초 반환할 또는 제한 시간 걸릴 수 있습니다. 요청이 포함 해상도 필요로 하는 호스트 이름을 설정한 경우 <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.Timeout%2A&gt;</ph> 값 보다 작거나 15 초 걸릴 수 있습니다 하기 전에 15 초 이상는 <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> 요청에 대 한 시간을 나타내기 위해 throw 되 합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The same timeout will apply for all requests using this <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance.</source>
          <target state="translated">이 사용 하 여 모든 요청에 대해 동일한 제한 시간이 적용 됩니다 <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>You may also set different timeouts for individual requests using a <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> on a task.</source>
          <target state="translated">사용 하 여 개별 요청에 대 한 다른 제한 시간을 설정할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>Note that only the shorter of the two timeouts will apply.</source>
          <target state="translated">만 중 짧은 두 가지 시간 제한을 적용할 참고 합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The timeout specified is less than or equal to zero and is not <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /&gt;</ph>.</source>
          <target state="translated">지정한 제한 시간이 0보다 작거나 같고 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /&gt;</ph>이 아닌 경우</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>An operation has already been started on the current instance.</source>
          <target state="translated">작업이 이미 현재 인스턴스에서 시작된 경우</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The current instance has been disposed.</source>
          <target state="translated">현재 인스턴스가 삭제된 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>