<Type Name="FlowDecision" FullName="System.Activities.Statements.FlowDecision">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2af12bcf4efe389b8df4f4fe75b46d106cfce8af" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48697133" /></Metadata><TypeSignature Language="C#" Value="public sealed class FlowDecision : System.Activities.Statements.FlowNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FlowDecision extends System.Activities.Statements.FlowNode" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.FlowDecision" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FlowDecision&#xA;Inherits FlowNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class FlowDecision sealed : System::Activities::Statements::FlowNode" />
  <TypeSignature Language="F#" Value="type FlowDecision = class&#xA;    inherit FlowNode" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Statements.FlowNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f99ad-101">두 가지 결과가 있는 조건부 노드를 모델링하는 기능을 제공하는 특수화된 <see cref="T:System.Activities.Statements.FlowNode" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-101">A specialized <see cref="T:System.Activities.Statements.FlowNode" /> that provides the ability to model a conditional node with two outcomes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99ad-102"><xref:System.Activities.Statements.FlowDecision> 조건을 사용 하 고 조건이 인 경우 수행할 동작을 정의 `true` 또는 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-102"><xref:System.Activities.Statements.FlowDecision> uses a condition and defines actions to take if the condition is `true` or `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f99ad-103">다음 코드 샘플에서는 <xref:System.Activities.Statements.FlowDecision> 노드를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-103">The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="f99ad-104">이 예제에서는 합니다 [순서도 활동 사용 하 여 TryCatch에서 오류 처리](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-104">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f99ad-105"><see cref="T:System.Activities.Statements.FlowDecision" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-105">Creates a new instance of the <see cref="T:System.Activities.Statements.FlowDecision" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f99ad-106">다음 코드 샘플에서는 <xref:System.Activities.Statements.FlowDecision> 노드를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-106">The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="f99ad-107">이 예제에서는 합니다 [순서도 활동 사용 하 여 TryCatch에서 오류 처리](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-107">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowDecision ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.FlowDecision.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlowDecision();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f99ad-108"><see cref="T:System.Activities.Statements.FlowDecision" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-108">Creates a new instance of the <see cref="T:System.Activities.Statements.FlowDecision" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f99ad-109">다음 코드 샘플에서는 <xref:System.Activities.Statements.FlowDecision> 노드를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-109">The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="f99ad-110">이 예제에서는 합니다 [순서도 활동 사용 하 여 TryCatch에서 오류 처리](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-110">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowDecision (System.Activities.Activity&lt;bool&gt; condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity`1&lt;bool&gt; condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (condition As Activity(Of Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlowDecision(System::Activities::Activity&lt;bool&gt; ^ condition);" />
      <MemberSignature Language="F#" Value="new System.Activities.Statements.FlowDecision : System.Activities.Activity&lt;bool&gt; -&gt; System.Activities.Statements.FlowDecision" Usage="new System.Activities.Statements.FlowDecision condition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="condition" Type="System.Activities.Activity&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="f99ad-111"><see cref="T:System.Activities.Statements.FlowDecision" />에서 테스트하는 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-111">The condition the <see cref="T:System.Activities.Statements.FlowDecision" /> is testing.</span></span></param>
        <summary><span data-ttu-id="f99ad-112">지정한 조건을 사용하여 <see cref="T:System.Activities.Statements.FlowDecision" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-112">Creates a new instance of the <see cref="T:System.Activities.Statements.FlowDecision" /> class with the specified condition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f99ad-113">다음 코드 샘플에서는 <xref:System.Activities.Statements.FlowDecision> 노드를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-113">The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="f99ad-114">이 예제에서는 합니다 [순서도 활동 사용 하 여 TryCatch에서 오류 처리](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-114">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowDecision (System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext,bool&gt;&gt; condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.Activities.ActivityContext, bool&gt;&gt; condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (condition As Expression(Of Func(Of ActivityContext, Boolean)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlowDecision(System::Linq::Expressions::Expression&lt;Func&lt;System::Activities::ActivityContext ^, bool&gt; ^&gt; ^ condition);" />
      <MemberSignature Language="F#" Value="new System.Activities.Statements.FlowDecision : System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext, bool&gt;&gt; -&gt; System.Activities.Statements.FlowDecision" Usage="new System.Activities.Statements.FlowDecision condition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="condition" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.Activities.ActivityContext,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="f99ad-115"><see cref="T:System.Activities.Statements.FlowDecision" />에서 테스트하는 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-115">The condition the <see cref="T:System.Activities.Statements.FlowDecision" /> is testing.</span></span></param>
        <summary><span data-ttu-id="f99ad-116">지정한 조건을 사용하여 <see cref="T:System.Activities.Statements.FlowDecision" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-116">Creates a new instance of the <see cref="T:System.Activities.Statements.FlowDecision" /> class with the specified condition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f99ad-117">다음 코드 샘플에서는 <xref:System.Activities.Statements.FlowDecision> 노드를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-117">The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="f99ad-118">이 예제에서는 합니다 [순서도 활동 사용 하 여 TryCatch에서 오류 처리](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-118">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public System.Activities.Activity&lt;bool&gt; Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity`1&lt;bool&gt; Condition" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.FlowDecision.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Property Condition As Activity(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity&lt;bool&gt; ^ Condition { System::Activities::Activity&lt;bool&gt; ^ get(); void set(System::Activities::Activity&lt;bool&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Condition : System.Activities.Activity&lt;bool&gt; with get, set" Usage="System.Activities.Statements.FlowDecision.Condition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f99ad-119"><see cref="T:System.Activities.Statements.FlowDecision" />에서 테스트하는 조건을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-119">Specifies the condition the <see cref="T:System.Activities.Statements.FlowDecision" /> is testing.</span></span></summary>
        <value><span data-ttu-id="f99ad-120">조건을 나타내는 값 식입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-120">A value expression that represents the condition.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f99ad-121">조건이 평가 되는 경우 `true`는 <xref:System.Activities.Statements.FlowNode> 에 <xref:System.Activities.Statements.FlowDecision.True%2A> 속성 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-121">If the condition evaluates to `true`, the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.True%2A> property is executed.</span></span> <span data-ttu-id="f99ad-122">그렇지 않으면 <xref:System.Activities.Statements.FlowNode> 속성의 <xref:System.Activities.Statements.FlowDecision.False%2A>가 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-122">Otherwise the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.False%2A> property is executed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f99ad-123">다음 코드 샘플에서는 <xref:System.Activities.Statements.FlowDecision> 노드의 Condition 속성을 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-123">The following code sample demonstrates using the Condition property of a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="f99ad-124">이 예제에서는 합니다 [순서도 활동 사용 하 여 TryCatch에서 오류 처리](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-124">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.FlowDecision.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.Activities.Statements.FlowDecision.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("Decision")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f99ad-125">활동 디자이너에 표시할 이 흐름 결정의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-125">The name of this flow decision to be displayed in the activity designer.</span></span></summary>
        <value><span data-ttu-id="f99ad-126">흐름 결정의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-126">The name of the flow decision.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public System.Activities.Statements.FlowNode False { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Statements.FlowNode False" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.FlowDecision.False" />
      <MemberSignature Language="VB.NET" Value="Public Property False As FlowNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Statements::FlowNode ^ False { System::Activities::Statements::FlowNode ^ get(); void set(System::Activities::Statements::FlowNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.False : System.Activities.Statements.FlowNode with get, set" Usage="System.Activities.Statements.FlowDecision.False" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Markup.DependsOn("True")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Statements.FlowNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f99ad-127">조건이 <see langword="false" />일 때 실행되는 <see cref="T:System.Activities.Statements.FlowNode" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-127">Gets or sets the <see cref="T:System.Activities.Statements.FlowNode" /> that is executed when the condition evaluates to <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="f99ad-128">조건이 <see langword="false" />로 확인될 경우 실행되는 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-128">The activity that is executed when the condition evaluates to <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f99ad-129">다음 코드 샘플에서는 <xref:System.Activities.Statements.FlowDecision> 노드의 False 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-129">The following code sample demonstrates setting the False property of a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="f99ad-130">이 예제에서는 합니다 [순서도 활동 사용 하 여 TryCatch에서 오류 처리](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-130">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public System.Activities.Statements.FlowNode True { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Statements.FlowNode True" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.FlowDecision.True" />
      <MemberSignature Language="VB.NET" Value="Public Property True As FlowNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Statements::FlowNode ^ True { System::Activities::Statements::FlowNode ^ get(); void set(System::Activities::Statements::FlowNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.True : System.Activities.Statements.FlowNode with get, set" Usage="System.Activities.Statements.FlowDecision.True" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Markup.DependsOn("Condition")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Statements.FlowNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f99ad-131">조건이 <see langword="true" />일 때 실행되는 <see cref="T:System.Activities.Statements.FlowNode" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-131">Gets or sets the <see cref="T:System.Activities.Statements.FlowNode" /> that is executed when the condition evaluates to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="f99ad-132">조건이 <see langword="true" />로 확인될 경우 실행할 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-132">The activity to execute when the condition evaluates to <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f99ad-133">다음 코드 샘플에서는 <xref:System.Activities.Statements.FlowDecision> 노드의 True 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-133">The following code sample demonstrates setting the True property of a <xref:System.Activities.Statements.FlowDecision> node.</span></span> <span data-ttu-id="f99ad-134">이 예제에서는 합니다 [순서도 활동 사용 하 여 TryCatch에서 오류 처리](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) 샘플입니다.</span><span class="sxs-lookup"><span data-stu-id="f99ad-134">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>