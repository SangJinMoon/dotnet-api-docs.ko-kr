<Type Name="ArgumentToExpressionConverter" FullName="System.Activities.Presentation.Converters.ArgumentToExpressionConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8cd314e0346e78c6021bf5747102c64ef29ce266" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39791676" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArgumentToExpressionConverter : System.Windows.Data.IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ArgumentToExpressionConverter extends System.Object implements class System.Windows.Data.IValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Converters.ArgumentToExpressionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ArgumentToExpressionConverter&#xA;Implements IValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArgumentToExpressionConverter : System::Windows::Data::IValueConverter" />
  <TypeSignature Language="F#" Value="type ArgumentToExpressionConverter = class&#xA;    interface IValueConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Data.IValueConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="3cb3f-101">인수와 식 간에 매핑을 정의하고 이러한 개체 간에 변환할 기능을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3cb3f-101">Defines the mapping between arguments and expressions and provides the functionality to convert between these objects.</span>
      </span>
      <span data-ttu-id="3cb3f-102">일반적으로 이 변환기는 사용자 지정 활동 디자이너에서 <see cref="T:System.Activities.Presentation.View.ExpressionTextBox" />를 사용할 때 선언적으로 사용됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3cb3f-102">Typically, this converter is used declaratively when using an <see cref="T:System.Activities.Presentation.View.ExpressionTextBox" /> in a custom activity designer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cb3f-103">이 변환기를 필수적으로 사용할 수도 있지만 이 사용법은 사용하지 않는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="3cb3f-103">This converter can also be used imperatively; however, this usage is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cb3f-104">다음 XAML 조각에서는 ExpressionTextBox를 사용하는 사용자 지정 활동 디자이너에서 ArgumentToExpressionConverter를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="3cb3f-104">The following XAML snippet shows how to use the ArgumentToExpressionConverter in a custom activity designer that uses an ExpressionTextBox.</span></span>  
  
```  
<sapv:ExpressionTextBox   
    Expression="{Binding Path=ModelItem.SampleValue,   
                         Mode=TwoWay,   
                         Converter={StaticResource ArgumentToExpressionConverter},   
                         ConverterParameter=In }"  
    ExpressionType="s:String"  
    OwnerActivity="{Binding Path=ModelItem}"  
   />  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentToExpressionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentToExpressionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3cb3f-105">
            <see cref="T:System.Activities.Presentation.Converters.ArgumentToExpressionConverter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-105">Initializes a new instance of the <see cref="T:System.Activities.Presentation.Converters.ArgumentToExpressionConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Convert(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="argumentToExpressionConverter.Convert (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3cb3f-106">바인딩 소스에서 생성한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-106">The value produced by the binding source.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="3cb3f-107">바인딩 대상 속성의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-107">The type of the binding target property.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="3cb3f-108">사용할 변환기 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-108">The converter parameter to use.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="3cb3f-109">변환기에 사용할 <see cref="T:System.Globalization.CultureInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-109">The <see cref="T:System.Globalization.CultureInfo" /> to use in the converter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3cb3f-110">지정한 인수를 식으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-110">Converts the specified argument into an expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3cb3f-111">변환된 Argument.Expression을 포함하는 <see cref="T:System.Object" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-111">An instance of <see cref="T:System.Object" /> that contains the converted Argument.Expression..</span>
          </span>
          <span data-ttu-id="3cb3f-112">변환된 Argument.Expression을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-112">Contains the converted Argument.Expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cb3f-113">`parameter`입니다.</span><span class="sxs-lookup"><span data-stu-id="3cb3f-113">The `parameter`,</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertBack(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="argumentToExpressionConverter.ConvertBack (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3cb3f-114">변환할 Argument.Expression입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-114">The Argument.Expression to convert.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="3cb3f-115">구현되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-115">Not implemented.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="3cb3f-116">구현되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-116">Not implemented.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="3cb3f-117">구현되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-117">Not implemented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3cb3f-118">지정한 Argument.Expression을 인수로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-118">Converts the specified Argument.Expression into an argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3cb3f-119">
            <see cref="T:System.Object" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-119">Returns <see cref="T:System.Object" />.</span>
          </span>
          <span data-ttu-id="3cb3f-120">변환된 인수를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3cb3f-120">Contains the converted argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>